/// <reference types="react" />
import { ILegionsProModal } from '../interface';
export declare class ModalView {
    _modalType: 'drawer' | 'modal' | 'fullscreen';
    /**
     * 模态框标题
     *
     * @memberof ModalView
     */
    title: string | React.ReactNode;
    /**
     * 模态框是否可见
     *
     * @memberof ModalView
     */
    visible: boolean;
    /**
     * 模态框宽度
     *
     * @memberof ModalView
     */
    width: number;
    /**
     *
     *确认按钮文字
     * @memberof ModalView
     */
    okText: string;
    /**
     *
     * 取消按钮文字
     * @memberof ModalView
     */
    cancelText: string;
    /**
     * 是否启用取消确认按钮
     *
     * @memberof ModalView
     */
    cancelConfirm: boolean;
    /**
     *确定按钮 loading
     *
     * @memberof ModalView
     */
    confirmLoading: boolean;
    /** 扩展数据，可用于存储模态框数据，使用场景，譬如模态框内容区动态控制，可以把条件存储在扩展数据体 */
    extendData: string;
    _dragData: {
        /**模态框左侧边框线距离body左侧距离 */
        x: number;
        /** 模态框顶部边框线距离顶部距离 */
        y: number;
        dragX: number;
        dragY: number;
        dragging: boolean;
    };
    /**
     * 启用或者禁用拖拽
     *
     * @private
     * @type {boolean}
     * @memberof ModalView
     */
    private _resizable;
    _resizableData: {
        /**模态框左侧边框线距离body左侧距离 */
        x: number;
        /** 模态框顶部边框线距离顶部距离 */
        y: number;
        /**当前鼠标距离body左侧距离 */
        resizableX: number;
        /** 当前鼠标点距离顶部距离 */
        resizableY: number;
        resizable: boolean;
        /** 模态框顶部边框线距离顶部距离 */
        top: number;
        /** 底部边框线距离顶部距离 */
        bottom: number;
        /** 模态框最右侧边框线距离body左侧距离 */
        right: number;
        /** 模态框左侧边框线距离body左侧距离 */
        left: number;
    };
    /** 拖拽缩放时产生的高度在modal-body生效的样式 */
    private _oldResizableBodyStyle;
    private _oldResizableContentStyle;
    /**
     *
     * 模态框操作模式，
     * 拖拽，缩放，最大化，还原
     */
    _operaModel: 'null' | 'resizable' | 'draggable' | 'maximize' | 'reduction';
    _placement?: 'left' | 'right' | 'top' | 'bottom';
    /**
     * 底部高度，组件外部请勿直接修改其值
     *
     * @memberof ModalView
     */
    _footerHeight: number;
    /** 拖拽移动样式信息 */
    get computedDraggableContentStyles(): {};
    get computedResizable(): import("../interface").IResizable;
    /**
     * 模态框大小缩放时 ，body 内容区样式值
     *
     * @readonly
     * @memberof ModalView
     */
    get computedBodyStyle(): {
        alignContent?: import("csstype").Property.AlignContent;
        alignItems?: import("csstype").Property.AlignItems;
        alignSelf?: import("csstype").Property.AlignSelf;
        alignTracks?: import("csstype").Property.AlignContent;
        animationDelay?: import("csstype").Property.AnimationDelay<string & {}>;
        animationDirection?: import("csstype").Property.AnimationDirection;
        animationDuration?: import("csstype").Property.AnimationDelay<string & {}>;
        animationFillMode?: import("csstype").Property.AnimationFillMode;
        animationIterationCount?: import("csstype").Property.AnimationIterationCount;
        animationName?: import("csstype").Property.AnimationName;
        animationPlayState?: import("csstype").Property.AnimationPlayState;
        animationTimingFunction?: import("csstype").Property.AnimationTimingFunction;
        appearance?: import("csstype").Property.Appearance;
        aspectRatio?: import("csstype").Property.AspectRatio;
        backdropFilter?: import("csstype").Property.AnimationName;
        backfaceVisibility?: import("csstype").Property.BackfaceVisibility;
        backgroundAttachment?: import("csstype").Property.BackgroundAttachment;
        backgroundBlendMode?: import("csstype").Property.BackgroundBlendMode;
        backgroundClip?: import("csstype").Property.BackgroundClip;
        backgroundColor?: import("csstype").Property.BackgroundColor;
        backgroundImage?: import("csstype").Property.AnimationName;
        backgroundOrigin?: import("csstype").Property.BackgroundClip;
        backgroundPosition?: import("csstype").Property.Width<import("react").ReactText>;
        backgroundPositionX?: import("csstype").Property.Width<import("react").ReactText>;
        backgroundPositionY?: import("csstype").Property.Width<import("react").ReactText>;
        backgroundRepeat?: import("csstype").Property.BackgroundRepeat;
        backgroundSize?: import("csstype").Property.Width<import("react").ReactText>;
        blockOverflow?: import("csstype").Property.BlockOverflow;
        blockSize?: import("csstype").Property.Width<import("react").ReactText>;
        borderBlockColor?: import("csstype").Property.BackgroundColor;
        borderBlockEndColor?: import("csstype").Property.BackgroundColor;
        borderBlockEndStyle?: import("csstype").Property.BorderBlockEndStyle;
        borderBlockEndWidth?: import("react").ReactText;
        borderBlockStartColor?: import("csstype").Property.BackgroundColor;
        borderBlockStartStyle?: import("csstype").Property.BorderBlockEndStyle;
        borderBlockStartWidth?: import("react").ReactText;
        borderBlockStyle?: import("csstype").Property.BorderBlockEndStyle;
        borderBlockWidth?: import("react").ReactText;
        borderBottomColor?: import("csstype").Property.BackgroundColor;
        borderBottomLeftRadius?: import("csstype").Property.Width<import("react").ReactText>;
        borderBottomRightRadius?: import("csstype").Property.Width<import("react").ReactText>;
        borderBottomStyle?: import("csstype").Property.BorderBlockEndStyle;
        borderBottomWidth?: import("react").ReactText;
        borderCollapse?: import("csstype").Property.BorderCollapse;
        borderEndEndRadius?: import("csstype").Property.Width<import("react").ReactText>;
        borderEndStartRadius?: import("csstype").Property.Width<import("react").ReactText>;
        borderImageOutset?: import("csstype").Property.BorderImageOutset<import("react").ReactText>;
        borderImageRepeat?: import("csstype").Property.BorderImageRepeat;
        borderImageSlice?: import("csstype").Property.BorderImageSlice;
        borderImageSource?: import("csstype").Property.AnimationName;
        borderImageWidth?: import("csstype").Property.BorderImageOutset<import("react").ReactText>;
        borderInlineColor?: import("csstype").Property.BackgroundColor;
        borderInlineEndColor?: import("csstype").Property.BackgroundColor;
        borderInlineEndStyle?: import("csstype").Property.BorderBlockEndStyle;
        borderInlineEndWidth?: import("react").ReactText;
        borderInlineStartColor?: import("csstype").Property.BackgroundColor;
        borderInlineStartStyle?: import("csstype").Property.BorderBlockEndStyle;
        borderInlineStartWidth?: import("react").ReactText;
        borderInlineStyle?: import("csstype").Property.BorderBlockEndStyle;
        borderInlineWidth?: import("react").ReactText;
        borderLeftColor?: import("csstype").Property.BackgroundColor;
        borderLeftStyle?: import("csstype").Property.BorderBlockEndStyle;
        borderLeftWidth?: import("react").ReactText;
        borderRightColor?: import("csstype").Property.BackgroundColor;
        borderRightStyle?: import("csstype").Property.BorderBlockEndStyle;
        borderRightWidth?: import("react").ReactText;
        borderSpacing?: import("csstype").Property.Width<import("react").ReactText>;
        borderStartEndRadius?: import("csstype").Property.Width<import("react").ReactText>;
        borderStartStartRadius?: import("csstype").Property.Width<import("react").ReactText>;
        borderTopColor?: import("csstype").Property.BackgroundColor;
        borderTopLeftRadius?: import("csstype").Property.Width<import("react").ReactText>;
        borderTopRightRadius?: import("csstype").Property.Width<import("react").ReactText>;
        borderTopStyle?: import("csstype").Property.BorderBlockEndStyle;
        borderTopWidth?: import("react").ReactText;
        bottom?: import("csstype").Property.Width<import("react").ReactText>;
        boxDecorationBreak?: import("csstype").Property.BoxDecorationBreak;
        boxShadow?: import("csstype").Property.AnimationName;
        boxSizing?: import("csstype").Property.BoxSizing;
        breakAfter?: import("csstype").Property.BreakAfter;
        breakBefore?: import("csstype").Property.BreakAfter;
        breakInside?: import("csstype").Property.BreakInside;
        captionSide?: import("csstype").Property.CaptionSide;
        caretColor?: import("csstype").Property.CaretColor;
        clear?: import("csstype").Property.Clear;
        clipPath?: import("csstype").Property.ClipPath;
        color?: import("csstype").Property.BackgroundColor;
        colorAdjust?: import("csstype").Property.ColorAdjust;
        columnCount?: import("csstype").Property.ColumnCount;
        columnFill?: import("csstype").Property.ColumnFill;
        columnGap?: import("csstype").Property.Width<import("react").ReactText>;
        columnRuleColor?: import("csstype").Property.BackgroundColor;
        columnRuleStyle?: import("csstype").Property.ColumnRuleStyle;
        columnRuleWidth?: import("csstype").Property.Width<import("react").ReactText>;
        columnSpan?: import("csstype").Property.ColumnSpan;
        columnWidth?: import("react").ReactText;
        contain?: import("csstype").Property.Contain;
        content?: import("csstype").Property.Content;
        contentVisibility?: import("csstype").Property.ContentVisibility;
        counterIncrement?: import("csstype").Property.AnimationName;
        counterReset?: import("csstype").Property.AnimationName;
        counterSet?: import("csstype").Property.AnimationName;
        cursor?: import("csstype").Property.Cursor;
        direction?: import("csstype").Property.Direction;
        display?: import("csstype").Property.Display;
        emptyCells?: import("csstype").Property.EmptyCells;
        filter?: import("csstype").Property.AnimationName;
        flexBasis?: import("csstype").Property.Width<import("react").ReactText>;
        flexDirection?: import("csstype").Property.FlexDirection;
        flexGrow?: import("csstype").Property.FlexGrow;
        flexShrink?: import("csstype").Property.FlexGrow;
        flexWrap?: import("csstype").Property.FlexWrap;
        float?: import("csstype").Property.Float;
        fontFamily?: import("csstype").Property.FontFamily;
        fontFeatureSettings?: import("csstype").Property.FontFeatureSettings;
        fontKerning?: import("csstype").Property.FontKerning;
        fontLanguageOverride?: import("csstype").Property.FontFeatureSettings;
        fontOpticalSizing?: import("csstype").Property.FontOpticalSizing;
        fontSize?: import("csstype").Property.Width<import("react").ReactText>;
        fontSizeAdjust?: import("csstype").Property.FontSizeAdjust;
        fontSmooth?: import("react").ReactText;
        fontStretch?: import("csstype").Property.FontStretch;
        fontStyle?: import("csstype").Property.FontStyle;
        fontSynthesis?: import("csstype").Property.FontSynthesis;
        fontVariant?: import("csstype").Property.FontVariant;
        fontVariantCaps?: import("csstype").Property.FontVariantCaps;
        fontVariantEastAsian?: import("csstype").Property.FontVariantEastAsian;
        fontVariantLigatures?: import("csstype").Property.FontVariantLigatures;
        fontVariantNumeric?: import("csstype").Property.FontVariantNumeric;
        fontVariantPosition?: import("csstype").Property.FontVariantPosition;
        fontVariationSettings?: import("csstype").Property.FontFeatureSettings;
        fontWeight?: import("csstype").Property.FontWeight;
        forcedColorAdjust?: import("csstype").Property.FontOpticalSizing;
        gridAutoColumns?: import("csstype").Property.Width<import("react").ReactText>;
        gridAutoFlow?: import("csstype").Property.GridAutoFlow;
        gridAutoRows?: import("csstype").Property.Width<import("react").ReactText>;
        gridColumnEnd?: import("csstype").Property.GridColumnEnd;
        gridColumnStart?: import("csstype").Property.GridColumnEnd;
        gridRowEnd?: import("csstype").Property.GridColumnEnd;
        gridRowStart?: import("csstype").Property.GridColumnEnd;
        gridTemplateAreas?: import("csstype").Property.AnimationName;
        gridTemplateColumns?: import("csstype").Property.Width<import("react").ReactText>;
        gridTemplateRows?: import("csstype").Property.Width<import("react").ReactText>;
        hangingPunctuation?: import("csstype").Property.HangingPunctuation;
        height?: import("csstype").Property.Width<import("react").ReactText>;
        hyphens?: import("csstype").Property.Hyphens;
        imageOrientation?: import("csstype").Property.ImageOrientation;
        imageRendering?: import("csstype").Property.ImageRendering;
        imageResolution?: import("csstype").Property.ImageResolution;
        initialLetter?: import("csstype").Property.InitialLetter;
        inlineSize?: import("csstype").Property.Width<import("react").ReactText>;
        inset?: import("csstype").Property.Width<import("react").ReactText>;
        insetBlock?: import("csstype").Property.Width<import("react").ReactText>;
        insetBlockEnd?: import("csstype").Property.Width<import("react").ReactText>;
        insetBlockStart?: import("csstype").Property.Width<import("react").ReactText>;
        insetInline?: import("csstype").Property.Width<import("react").ReactText>;
        insetInlineEnd?: import("csstype").Property.Width<import("react").ReactText>;
        insetInlineStart?: import("csstype").Property.Width<import("react").ReactText>;
        isolation?: import("csstype").Property.Isolation;
        justifyContent?: import("csstype").Property.JustifyContent;
        justifyItems?: import("csstype").Property.JustifyItems;
        justifySelf?: import("csstype").Property.JustifySelf;
        justifyTracks?: import("csstype").Property.JustifyContent;
        left?: import("csstype").Property.Width<import("react").ReactText>;
        letterSpacing?: import("react").ReactText;
        lineBreak?: import("csstype").Property.LineBreak;
        lineHeight?: import("csstype").Property.BorderImageOutset<import("react").ReactText>;
        lineHeightStep?: import("react").ReactText;
        listStyleImage?: import("csstype").Property.AnimationName;
        listStylePosition?: import("csstype").Property.ListStylePosition;
        listStyleType?: import("csstype").Property.AnimationName;
        marginBlock?: import("csstype").Property.Width<import("react").ReactText>;
        marginBlockEnd?: import("csstype").Property.Width<import("react").ReactText>;
        marginBlockStart?: import("csstype").Property.Width<import("react").ReactText>;
        marginBottom?: import("csstype").Property.Width<import("react").ReactText>;
        marginInline?: import("csstype").Property.Width<import("react").ReactText>;
        marginInlineEnd?: import("csstype").Property.Width<import("react").ReactText>;
        marginInlineStart?: import("csstype").Property.Width<import("react").ReactText>;
        marginLeft?: import("csstype").Property.Width<import("react").ReactText>;
        marginRight?: import("csstype").Property.Width<import("react").ReactText>;
        marginTop?: import("csstype").Property.Width<import("react").ReactText>;
        maskBorderMode?: import("csstype").Property.MaskBorderMode;
        maskBorderOutset?: import("csstype").Property.BorderImageOutset<import("react").ReactText>;
        maskBorderRepeat?: import("csstype").Property.BorderImageRepeat;
        maskBorderSlice?: import("csstype").Property.BorderImageSlice;
        maskBorderSource?: import("csstype").Property.AnimationName;
        maskBorderWidth?: import("csstype").Property.BorderImageOutset<import("react").ReactText>;
        maskClip?: import("csstype").Property.MaskClip;
        maskComposite?: import("csstype").Property.MaskComposite;
        maskImage?: import("csstype").Property.AnimationName;
        maskMode?: import("csstype").Property.MaskMode;
        maskOrigin?: import("csstype").Property.MaskOrigin;
        maskPosition?: import("csstype").Property.Width<import("react").ReactText>;
        maskRepeat?: import("csstype").Property.BackgroundRepeat;
        maskSize?: import("csstype").Property.Width<import("react").ReactText>;
        maskType?: import("csstype").Property.MaskBorderMode;
        mathStyle?: import("csstype").Property.MathStyle;
        maxBlockSize?: import("csstype").Property.Width<import("react").ReactText>;
        maxHeight?: import("csstype").Property.Width<import("react").ReactText>;
        maxInlineSize?: import("csstype").Property.Width<import("react").ReactText>;
        maxLines?: import("csstype").Property.FontSizeAdjust;
        maxWidth?: import("csstype").Property.Width<import("react").ReactText>;
        minBlockSize?: import("csstype").Property.Width<import("react").ReactText>;
        minHeight?: import("csstype").Property.Width<import("react").ReactText>;
        minInlineSize?: import("csstype").Property.Width<import("react").ReactText>;
        minWidth?: import("csstype").Property.Width<import("react").ReactText>;
        mixBlendMode?: import("csstype").Property.MixBlendMode;
        motionDistance?: import("csstype").Property.Width<import("react").ReactText>;
        motionPath?: import("csstype").Property.ClipPath;
        motionRotation?: import("csstype").Property.OffsetRotate;
        objectFit?: import("csstype").Property.ObjectFit;
        objectPosition?: import("csstype").Property.Width<import("react").ReactText>;
        offsetAnchor?: import("csstype").Property.Width<import("react").ReactText>;
        offsetDistance?: import("csstype").Property.Width<import("react").ReactText>;
        offsetPath?: import("csstype").Property.ClipPath;
        offsetRotate?: import("csstype").Property.OffsetRotate;
        offsetRotation?: import("csstype").Property.OffsetRotate;
        opacity?: import("csstype").Property.BorderImageSlice;
        order?: import("csstype").Property.FlexGrow;
        orphans?: import("csstype").Property.FlexGrow;
        outlineColor?: import("csstype").Property.OutlineColor;
        outlineOffset?: import("react").ReactText;
        outlineStyle?: import("csstype").Property.OutlineStyle;
        outlineWidth?: import("react").ReactText;
        overflowAnchor?: import("csstype").Property.FontOpticalSizing;
        overflowBlock?: import("csstype").Property.OverflowBlock;
        overflowClipBox?: import("csstype").Property.OverflowClipBox;
        overflowInline?: import("csstype").Property.OverflowBlock;
        overflowWrap?: import("csstype").Property.OverflowWrap;
        overflowX?: import("csstype").Property.OverflowX;
        overflowY?: import("csstype").Property.OverflowX;
        overscrollBehavior?: import("csstype").Property.OverscrollBehavior;
        overscrollBehaviorBlock?: import("csstype").Property.OverscrollBehaviorBlock;
        overscrollBehaviorInline?: import("csstype").Property.OverscrollBehaviorBlock;
        overscrollBehaviorX?: import("csstype").Property.OverscrollBehaviorBlock;
        overscrollBehaviorY?: import("csstype").Property.OverscrollBehaviorBlock;
        paddingBlock?: import("csstype").Property.Width<import("react").ReactText>;
        paddingBlockEnd?: import("csstype").Property.Width<import("react").ReactText>;
        paddingBlockStart?: import("csstype").Property.Width<import("react").ReactText>;
        paddingBottom?: import("csstype").Property.Width<import("react").ReactText>;
        paddingInline?: import("csstype").Property.Width<import("react").ReactText>;
        paddingInlineEnd?: import("csstype").Property.Width<import("react").ReactText>;
        paddingInlineStart?: import("csstype").Property.Width<import("react").ReactText>;
        paddingLeft?: import("csstype").Property.Width<import("react").ReactText>;
        paddingRight?: import("csstype").Property.Width<import("react").ReactText>;
        paddingTop?: import("csstype").Property.Width<import("react").ReactText>;
        pageBreakAfter?: import("csstype").Property.PageBreakAfter;
        pageBreakBefore?: import("csstype").Property.PageBreakAfter;
        pageBreakInside?: import("csstype").Property.PageBreakInside;
        paintOrder?: import("csstype").Property.PaintOrder;
        perspective?: import("react").ReactText;
        perspectiveOrigin?: import("csstype").Property.Width<import("react").ReactText>;
        placeContent?: import("csstype").Property.AlignContent;
        pointerEvents?: import("csstype").Property.PointerEvents;
        position?: import("csstype").Property.Position;
        quotes?: import("csstype").Property.Quotes;
        resize?: import("csstype").Property.Resize;
        right?: import("csstype").Property.Width<import("react").ReactText>;
        rotate?: import("csstype").Property.AnimationName;
        rowGap?: import("csstype").Property.Width<import("react").ReactText>;
        rubyAlign?: import("csstype").Property.RubyAlign;
        rubyMerge?: import("csstype").Property.RubyMerge;
        rubyPosition?: import("csstype").Property.RubyPosition;
        scale?: import("csstype").Property.Scale;
        scrollBehavior?: import("csstype").Property.ScrollBehavior;
        scrollMargin?: import("csstype").Property.Width<import("react").ReactText>;
        scrollMarginBlock?: import("csstype").Property.Width<import("react").ReactText>;
        scrollMarginBlockEnd?: import("react").ReactText;
        scrollMarginBlockStart?: import("react").ReactText;
        scrollMarginBottom?: import("react").ReactText;
        scrollMarginInline?: import("csstype").Property.Width<import("react").ReactText>;
        scrollMarginInlineEnd?: import("react").ReactText;
        scrollMarginInlineStart?: import("react").ReactText;
        scrollMarginLeft?: import("react").ReactText;
        scrollMarginRight?: import("react").ReactText;
        scrollMarginTop?: import("react").ReactText;
        scrollPadding?: import("csstype").Property.Width<import("react").ReactText>;
        scrollPaddingBlock?: import("csstype").Property.Width<import("react").ReactText>;
        scrollPaddingBlockEnd?: import("csstype").Property.Width<import("react").ReactText>;
        scrollPaddingBlockStart?: import("csstype").Property.Width<import("react").ReactText>;
        scrollPaddingBottom?: import("csstype").Property.Width<import("react").ReactText>;
        scrollPaddingInline?: import("csstype").Property.Width<import("react").ReactText>;
        scrollPaddingInlineEnd?: import("csstype").Property.Width<import("react").ReactText>;
        scrollPaddingInlineStart?: import("csstype").Property.Width<import("react").ReactText>;
        scrollPaddingLeft?: import("csstype").Property.Width<import("react").ReactText>;
        scrollPaddingRight?: import("csstype").Property.Width<import("react").ReactText>;
        scrollPaddingTop?: import("csstype").Property.Width<import("react").ReactText>;
        scrollSnapAlign?: import("csstype").Property.ScrollSnapAlign;
        scrollSnapMargin?: import("csstype").Property.Width<import("react").ReactText>;
        scrollSnapMarginBottom?: import("react").ReactText;
        scrollSnapMarginLeft?: import("react").ReactText;
        scrollSnapMarginRight?: import("react").ReactText;
        scrollSnapMarginTop?: import("react").ReactText;
        scrollSnapStop?: import("csstype").Property.ScrollSnapStop;
        scrollSnapType?: import("csstype").Property.ScrollSnapType;
        scrollbarColor?: import("csstype").Property.ScrollbarColor;
        scrollbarGutter?: import("csstype").Property.ScrollbarGutter;
        scrollbarWidth?: import("csstype").Property.ScrollbarWidth;
        shapeImageThreshold?: import("csstype").Property.BorderImageSlice;
        shapeMargin?: import("csstype").Property.Width<import("react").ReactText>;
        shapeOutside?: import("csstype").Property.ShapeOutside;
        tabSize?: import("csstype").Property.TabSize<import("react").ReactText>;
        tableLayout?: import("csstype").Property.TableLayout;
        textAlign?: import("csstype").Property.TextAlign;
        textAlignLast?: import("csstype").Property.TextAlignLast;
        textCombineUpright?: import("csstype").Property.TextCombineUpright;
        textDecorationColor?: import("csstype").Property.BackgroundColor;
        textDecorationLine?: import("csstype").Property.TextDecorationLine;
        textDecorationSkip?: import("csstype").Property.TextDecorationSkip;
        textDecorationSkipInk?: import("csstype").Property.TextDecorationSkipInk;
        textDecorationStyle?: import("csstype").Property.TextDecorationStyle;
        textDecorationThickness?: import("csstype").Property.Width<import("react").ReactText>;
        textDecorationWidth?: import("csstype").Property.Width<import("react").ReactText>;
        textEmphasisColor?: import("csstype").Property.BackgroundColor;
        textEmphasisPosition?: import("csstype").Property.AnimationDelay<string & {}>;
        textEmphasisStyle?: import("csstype").Property.TextEmphasisStyle;
        textIndent?: import("csstype").Property.Width<import("react").ReactText>;
        textJustify?: import("csstype").Property.TextJustify;
        textOrientation?: import("csstype").Property.TextOrientation;
        textOverflow?: import("csstype").Property.BlockOverflow;
        textRendering?: import("csstype").Property.TextRendering;
        textShadow?: import("csstype").Property.AnimationName;
        textSizeAdjust?: import("csstype").Property.Quotes;
        textTransform?: import("csstype").Property.TextTransform;
        textUnderlineOffset?: import("csstype").Property.Width<import("react").ReactText>;
        textUnderlinePosition?: import("csstype").Property.TextUnderlinePosition;
        top?: import("csstype").Property.Width<import("react").ReactText>;
        touchAction?: import("csstype").Property.TouchAction;
        transform?: import("csstype").Property.AnimationName;
        transformBox?: import("csstype").Property.TransformBox;
        transformOrigin?: import("csstype").Property.Width<import("react").ReactText>;
        transformStyle?: import("csstype").Property.TransformStyle;
        transitionDelay?: import("csstype").Property.AnimationDelay<string & {}>;
        transitionDuration?: import("csstype").Property.AnimationDelay<string & {}>;
        transitionProperty?: import("csstype").Property.TransitionProperty;
        transitionTimingFunction?: import("csstype").Property.AnimationTimingFunction;
        translate?: import("csstype").Property.Width<import("react").ReactText>;
        unicodeBidi?: import("csstype").Property.UnicodeBidi;
        userSelect?: import("csstype").Property.UserSelect;
        verticalAlign?: import("csstype").Property.Width<import("react").ReactText>;
        visibility?: import("csstype").Property.Visibility;
        whiteSpace?: import("csstype").Property.WhiteSpace;
        widows?: import("csstype").Property.FlexGrow;
        width?: import("csstype").Property.Width<import("react").ReactText>;
        willChange?: import("csstype").Property.WillChange;
        wordBreak?: import("csstype").Property.WordBreak;
        wordSpacing?: import("csstype").Property.Width<import("react").ReactText>;
        wordWrap?: import("csstype").Property.WordWrap;
        writingMode?: import("csstype").Property.WritingMode;
        zIndex?: import("csstype").Property.ColumnCount;
        zoom?: import("csstype").Property.Zoom;
        all?: import("csstype").Globals;
        animation?: import("csstype").Property.Animation<string & {}>;
        background?: import("csstype").Property.Width<import("react").ReactText>;
        border?: import("csstype").Property.Width<import("react").ReactText>;
        borderBlock?: import("csstype").Property.Width<import("react").ReactText>;
        borderBlockEnd?: import("csstype").Property.Width<import("react").ReactText>;
        borderBlockStart?: import("csstype").Property.Width<import("react").ReactText>;
        borderBottom?: import("csstype").Property.Width<import("react").ReactText>;
        borderColor?: import("csstype").Property.BackgroundColor;
        borderImage?: import("csstype").Property.BorderImage;
        borderInline?: import("csstype").Property.Width<import("react").ReactText>;
        borderInlineEnd?: import("csstype").Property.Width<import("react").ReactText>;
        borderInlineStart?: import("csstype").Property.Width<import("react").ReactText>;
        borderLeft?: import("csstype").Property.Width<import("react").ReactText>;
        borderRadius?: import("csstype").Property.Width<import("react").ReactText>;
        borderRight?: import("csstype").Property.Width<import("react").ReactText>;
        borderStyle?: import("csstype").Property.ColumnRuleStyle;
        borderTop?: import("csstype").Property.Width<import("react").ReactText>;
        borderWidth?: import("csstype").Property.Width<import("react").ReactText>;
        columnRule?: import("csstype").Property.Width<import("react").ReactText>;
        columns?: import("csstype").Property.BorderImageOutset<import("react").ReactText>;
        flex?: import("csstype").Property.BorderImageOutset<import("react").ReactText>;
        flexFlow?: import("csstype").Property.FlexFlow;
        font?: import("csstype").Property.Font;
        gap?: import("csstype").Property.Width<import("react").ReactText>;
        grid?: import("csstype").Property.AnimationName;
        gridArea?: import("csstype").Property.GridColumnEnd;
        gridColumn?: import("csstype").Property.GridColumnEnd;
        gridRow?: import("csstype").Property.GridColumnEnd;
        gridTemplate?: import("csstype").Property.AnimationName;
        lineClamp?: import("csstype").Property.FontSizeAdjust;
        listStyle?: import("csstype").Property.ListStyle;
        margin?: import("csstype").Property.Width<import("react").ReactText>;
        mask?: import("csstype").Property.Width<import("react").ReactText>;
        maskBorder?: import("csstype").Property.MaskBorder;
        motion?: import("csstype").Property.Width<import("react").ReactText>;
        offset?: import("csstype").Property.Width<import("react").ReactText>;
        outline?: import("csstype").Property.Width<import("react").ReactText>;
        overflow?: import("csstype").Property.Overflow;
        padding?: import("csstype").Property.Width<import("react").ReactText>;
        placeItems?: import("csstype").Property.AlignItems;
        placeSelf?: import("csstype").Property.AlignSelf;
        textDecoration?: import("csstype").Property.Width<import("react").ReactText>;
        textEmphasis?: import("csstype").Property.TextEmphasis;
        transition?: import("csstype").Property.Transition<string & {}>;
        MozAnimationDelay?: import("csstype").Property.AnimationDelay<string & {}>;
        MozAnimationDirection?: import("csstype").Property.AnimationDirection;
        MozAnimationDuration?: import("csstype").Property.AnimationDelay<string & {}>;
        MozAnimationFillMode?: import("csstype").Property.AnimationFillMode;
        MozAnimationIterationCount?: import("csstype").Property.AnimationIterationCount;
        MozAnimationName?: import("csstype").Property.AnimationName;
        MozAnimationPlayState?: import("csstype").Property.AnimationPlayState;
        MozAnimationTimingFunction?: import("csstype").Property.AnimationTimingFunction;
        MozAppearance?: import("csstype").Property.MozAppearance;
        MozBackfaceVisibility?: import("csstype").Property.BackfaceVisibility;
        MozBorderBottomColors?: import("csstype").Property.MozBorderBottomColors;
        MozBorderEndColor?: import("csstype").Property.BackgroundColor;
        MozBorderEndStyle?: import("csstype").Property.BorderBlockEndStyle;
        MozBorderEndWidth?: import("react").ReactText;
        MozBorderLeftColors?: import("csstype").Property.MozBorderBottomColors;
        MozBorderRightColors?: import("csstype").Property.MozBorderBottomColors;
        MozBorderStartColor?: import("csstype").Property.BackgroundColor;
        MozBorderStartStyle?: import("csstype").Property.BorderBlockEndStyle;
        MozBorderTopColors?: import("csstype").Property.MozBorderBottomColors;
        MozBoxSizing?: import("csstype").Property.BoxSizing;
        MozColumnCount?: import("csstype").Property.ColumnCount;
        MozColumnFill?: import("csstype").Property.ColumnFill;
        MozColumnGap?: import("csstype").Property.Width<import("react").ReactText>;
        MozColumnRuleColor?: import("csstype").Property.BackgroundColor;
        MozColumnRuleStyle?: import("csstype").Property.ColumnRuleStyle;
        MozColumnRuleWidth?: import("csstype").Property.Width<import("react").ReactText>;
        MozColumnWidth?: import("react").ReactText;
        MozContextProperties?: import("csstype").Property.MozContextProperties;
        MozFontFeatureSettings?: import("csstype").Property.FontFeatureSettings;
        MozFontLanguageOverride?: import("csstype").Property.FontFeatureSettings;
        MozHyphens?: import("csstype").Property.Hyphens;
        MozImageRegion?: import("csstype").Property.AspectRatio;
        MozMarginEnd?: import("csstype").Property.Width<import("react").ReactText>;
        MozMarginStart?: import("csstype").Property.Width<import("react").ReactText>;
        MozOrient?: import("csstype").Property.MozOrient;
        MozOsxFontSmoothing?: import("react").ReactText;
        MozPaddingEnd?: import("csstype").Property.Width<import("react").ReactText>;
        MozPaddingStart?: import("csstype").Property.Width<import("react").ReactText>;
        MozPerspective?: import("react").ReactText;
        MozPerspectiveOrigin?: import("csstype").Property.Width<import("react").ReactText>;
        MozStackSizing?: import("csstype").Property.MozStackSizing;
        MozTabSize?: import("csstype").Property.TabSize<import("react").ReactText>;
        MozTextBlink?: import("csstype").Property.MozTextBlink;
        MozTextSizeAdjust?: import("csstype").Property.Quotes;
        MozTransformOrigin?: import("csstype").Property.Width<import("react").ReactText>;
        MozTransformStyle?: import("csstype").Property.TransformStyle;
        MozTransitionDelay?: import("csstype").Property.AnimationDelay<string & {}>;
        MozTransitionDuration?: import("csstype").Property.AnimationDelay<string & {}>;
        MozTransitionProperty?: import("csstype").Property.TransitionProperty;
        MozTransitionTimingFunction?: import("csstype").Property.AnimationTimingFunction;
        MozUserFocus?: import("csstype").Property.MozUserFocus;
        MozUserModify?: import("csstype").Property.MozUserModify;
        MozUserSelect?: import("csstype").Property.UserSelect;
        MozWindowDragging?: import("csstype").Property.MozWindowDragging;
        MozWindowShadow?: import("csstype").Property.MozWindowShadow;
        msAccelerator?: import("csstype").Property.MsAccelerator;
        msAlignSelf?: import("csstype").Property.AlignSelf;
        msBlockProgression?: import("csstype").Property.MsBlockProgression;
        msContentZoomChaining?: import("csstype").Property.MsContentZoomChaining;
        msContentZoomLimitMax?: import("csstype").Property.AnimationDelay<string & {}>;
        msContentZoomLimitMin?: import("csstype").Property.AnimationDelay<string & {}>;
        msContentZoomSnapPoints?: import("csstype").Property.AnimationDelay<string & {}>;
        msContentZoomSnapType?: import("csstype").Property.MsContentZoomSnapType;
        msContentZooming?: import("csstype").Property.MsContentZooming;
        msFilter?: import("csstype").Property.AnimationDelay<string & {}>;
        msFlexDirection?: import("csstype").Property.FlexDirection;
        msFlexPositive?: import("csstype").Property.FlexGrow;
        msFlowFrom?: import("csstype").Property.AnimationName;
        msFlowInto?: import("csstype").Property.AnimationName;
        msGridColumns?: import("csstype").Property.Width<import("react").ReactText>;
        msGridRows?: import("csstype").Property.Width<import("react").ReactText>;
        msHighContrastAdjust?: import("csstype").Property.FontOpticalSizing;
        msHyphenateLimitChars?: import("csstype").Property.GridColumnEnd;
        msHyphenateLimitLines?: import("csstype").Property.MsHyphenateLimitLines;
        msHyphenateLimitZone?: import("csstype").Property.Width<import("react").ReactText>;
        msHyphens?: import("csstype").Property.Hyphens;
        msImeAlign?: import("csstype").Property.MsImeAlign;
        msJustifySelf?: import("csstype").Property.JustifySelf;
        msLineBreak?: import("csstype").Property.LineBreak;
        msOrder?: import("csstype").Property.FlexGrow;
        msOverflowStyle?: import("csstype").Property.MsOverflowStyle;
        msOverflowX?: import("csstype").Property.OverflowX;
        msOverflowY?: import("csstype").Property.OverflowX;
        msScrollChaining?: import("csstype").Property.MsContentZoomChaining;
        msScrollLimitXMax?: import("react").ReactText;
        msScrollLimitXMin?: import("react").ReactText;
        msScrollLimitYMax?: import("react").ReactText;
        msScrollLimitYMin?: import("react").ReactText;
        msScrollRails?: import("csstype").Property.MsScrollRails;
        msScrollSnapPointsX?: import("csstype").Property.AnimationDelay<string & {}>;
        msScrollSnapPointsY?: import("csstype").Property.AnimationDelay<string & {}>;
        msScrollSnapType?: import("csstype").Property.MsContentZoomSnapType;
        msScrollTranslation?: import("csstype").Property.MsScrollTranslation;
        msScrollbar3dlightColor?: import("csstype").Property.BackgroundColor;
        msScrollbarArrowColor?: import("csstype").Property.BackgroundColor;
        msScrollbarBaseColor?: import("csstype").Property.BackgroundColor;
        msScrollbarDarkshadowColor?: import("csstype").Property.BackgroundColor;
        msScrollbarFaceColor?: import("csstype").Property.BackgroundColor;
        msScrollbarHighlightColor?: import("csstype").Property.BackgroundColor;
        msScrollbarShadowColor?: import("csstype").Property.BackgroundColor;
        msTextAutospace?: import("csstype").Property.MsTextAutospace;
        msTextCombineHorizontal?: import("csstype").Property.TextCombineUpright;
        msTextOverflow?: import("csstype").Property.BlockOverflow;
        msTouchAction?: import("csstype").Property.TouchAction;
        msTouchSelect?: import("csstype").Property.MsTouchSelect;
        msTransform?: import("csstype").Property.AnimationName;
        msTransformOrigin?: import("csstype").Property.Width<import("react").ReactText>;
        msTransitionDelay?: import("csstype").Property.AnimationDelay<string & {}>;
        msTransitionDuration?: import("csstype").Property.AnimationDelay<string & {}>;
        msTransitionProperty?: import("csstype").Property.TransitionProperty;
        msTransitionTimingFunction?: import("csstype").Property.AnimationTimingFunction;
        msUserSelect?: import("csstype").Property.MsUserSelect;
        msWordBreak?: import("csstype").Property.WordBreak;
        msWrapFlow?: import("csstype").Property.MsWrapFlow;
        msWrapMargin?: import("react").ReactText;
        msWrapThrough?: import("csstype").Property.MsWrapThrough;
        msWritingMode?: import("csstype").Property.WritingMode;
        OObjectFit?: import("csstype").Property.ObjectFit;
        OObjectPosition?: import("csstype").Property.Width<import("react").ReactText>;
        OTabSize?: import("csstype").Property.TabSize<import("react").ReactText>;
        OTextOverflow?: import("csstype").Property.BlockOverflow;
        OTransformOrigin?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitAlignContent?: import("csstype").Property.AlignContent;
        WebkitAlignItems?: import("csstype").Property.AlignItems;
        WebkitAlignSelf?: import("csstype").Property.AlignSelf;
        WebkitAnimationDelay?: import("csstype").Property.AnimationDelay<string & {}>;
        WebkitAnimationDirection?: import("csstype").Property.AnimationDirection;
        WebkitAnimationDuration?: import("csstype").Property.AnimationDelay<string & {}>;
        WebkitAnimationFillMode?: import("csstype").Property.AnimationFillMode;
        WebkitAnimationIterationCount?: import("csstype").Property.AnimationIterationCount;
        WebkitAnimationName?: import("csstype").Property.AnimationName;
        WebkitAnimationPlayState?: import("csstype").Property.AnimationPlayState;
        WebkitAnimationTimingFunction?: import("csstype").Property.AnimationTimingFunction;
        WebkitAppearance?: import("csstype").Property.WebkitAppearance;
        WebkitBackdropFilter?: import("csstype").Property.AnimationName;
        WebkitBackfaceVisibility?: import("csstype").Property.BackfaceVisibility;
        WebkitBackgroundClip?: import("csstype").Property.BackgroundClip;
        WebkitBackgroundOrigin?: import("csstype").Property.BackgroundClip;
        WebkitBackgroundSize?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitBorderBeforeColor?: import("csstype").Property.BackgroundColor;
        WebkitBorderBeforeStyle?: import("csstype").Property.ColumnRuleStyle;
        WebkitBorderBeforeWidth?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitBorderBottomLeftRadius?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitBorderBottomRightRadius?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitBorderImageSlice?: import("csstype").Property.BorderImageSlice;
        WebkitBorderTopLeftRadius?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitBorderTopRightRadius?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitBoxDecorationBreak?: import("csstype").Property.BoxDecorationBreak;
        WebkitBoxReflect?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitBoxShadow?: import("csstype").Property.AnimationName;
        WebkitBoxSizing?: import("csstype").Property.BoxSizing;
        WebkitClipPath?: import("csstype").Property.ClipPath;
        WebkitColumnCount?: import("csstype").Property.ColumnCount;
        WebkitColumnFill?: import("csstype").Property.ColumnFill;
        WebkitColumnGap?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitColumnRuleColor?: import("csstype").Property.BackgroundColor;
        WebkitColumnRuleStyle?: import("csstype").Property.ColumnRuleStyle;
        WebkitColumnRuleWidth?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitColumnSpan?: import("csstype").Property.ColumnSpan;
        WebkitColumnWidth?: import("react").ReactText;
        WebkitFilter?: import("csstype").Property.AnimationName;
        WebkitFlexBasis?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitFlexDirection?: import("csstype").Property.FlexDirection;
        WebkitFlexGrow?: import("csstype").Property.FlexGrow;
        WebkitFlexShrink?: import("csstype").Property.FlexGrow;
        WebkitFlexWrap?: import("csstype").Property.FlexWrap;
        WebkitFontFeatureSettings?: import("csstype").Property.FontFeatureSettings;
        WebkitFontKerning?: import("csstype").Property.FontKerning;
        WebkitFontSmoothing?: import("react").ReactText;
        WebkitFontVariantLigatures?: import("csstype").Property.FontVariantLigatures;
        WebkitHyphens?: import("csstype").Property.Hyphens;
        WebkitJustifyContent?: import("csstype").Property.JustifyContent;
        WebkitLineBreak?: import("csstype").Property.LineBreak;
        WebkitLineClamp?: import("csstype").Property.FontSizeAdjust;
        WebkitMarginEnd?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitMarginStart?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitMaskAttachment?: import("csstype").Property.BackgroundAttachment;
        WebkitMaskClip?: import("csstype").Property.WebkitMaskClip;
        WebkitMaskComposite?: import("csstype").Property.WebkitMaskComposite;
        WebkitMaskImage?: import("csstype").Property.AnimationName;
        WebkitMaskOrigin?: import("csstype").Property.WebkitMaskOrigin;
        WebkitMaskPosition?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitMaskPositionX?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitMaskPositionY?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitMaskRepeat?: import("csstype").Property.BackgroundRepeat;
        WebkitMaskRepeatX?: import("csstype").Property.WebkitMaskRepeatX;
        WebkitMaskRepeatY?: import("csstype").Property.WebkitMaskRepeatX;
        WebkitMaskSize?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitMaxInlineSize?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitOrder?: import("csstype").Property.FlexGrow;
        WebkitOverflowScrolling?: import("csstype").Property.WebkitOverflowScrolling;
        WebkitPaddingEnd?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitPaddingStart?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitPerspective?: import("react").ReactText;
        WebkitPerspectiveOrigin?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitPrintColorAdjust?: import("csstype").Property.ColorAdjust;
        WebkitRubyPosition?: import("csstype").Property.RubyPosition;
        WebkitScrollSnapType?: import("csstype").Property.ScrollSnapType;
        WebkitShapeMargin?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitTapHighlightColor?: import("csstype").Property.BackgroundColor;
        WebkitTextCombine?: import("csstype").Property.TextCombineUpright;
        WebkitTextDecorationColor?: import("csstype").Property.BackgroundColor;
        WebkitTextDecorationLine?: import("csstype").Property.TextDecorationLine;
        WebkitTextDecorationSkip?: import("csstype").Property.TextDecorationSkip;
        WebkitTextDecorationStyle?: import("csstype").Property.TextDecorationStyle;
        WebkitTextEmphasisColor?: import("csstype").Property.BackgroundColor;
        WebkitTextEmphasisPosition?: import("csstype").Property.AnimationDelay<string & {}>;
        WebkitTextEmphasisStyle?: import("csstype").Property.TextEmphasisStyle;
        WebkitTextFillColor?: import("csstype").Property.BackgroundColor;
        WebkitTextOrientation?: import("csstype").Property.TextOrientation;
        WebkitTextSizeAdjust?: import("csstype").Property.Quotes;
        WebkitTextStrokeColor?: import("csstype").Property.BackgroundColor;
        WebkitTextStrokeWidth?: import("react").ReactText;
        WebkitTextUnderlinePosition?: import("csstype").Property.TextUnderlinePosition;
        WebkitTouchCallout?: import("csstype").Property.WebkitTouchCallout;
        WebkitTransform?: import("csstype").Property.AnimationName;
        WebkitTransformOrigin?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitTransformStyle?: import("csstype").Property.TransformStyle;
        WebkitTransitionDelay?: import("csstype").Property.AnimationDelay<string & {}>;
        WebkitTransitionDuration?: import("csstype").Property.AnimationDelay<string & {}>;
        WebkitTransitionProperty?: import("csstype").Property.TransitionProperty;
        WebkitTransitionTimingFunction?: import("csstype").Property.AnimationTimingFunction;
        WebkitUserModify?: import("csstype").Property.WebkitUserModify;
        WebkitUserSelect?: import("csstype").Property.UserSelect;
        WebkitWritingMode?: import("csstype").Property.WritingMode;
        MozAnimation?: import("csstype").Property.Animation<string & {}>;
        MozBorderImage?: import("csstype").Property.BorderImage;
        MozColumnRule?: import("csstype").Property.Width<import("react").ReactText>;
        MozColumns?: import("csstype").Property.BorderImageOutset<import("react").ReactText>;
        MozTransition?: import("csstype").Property.Transition<string & {}>;
        msContentZoomLimit?: import("csstype").Property.AnimationDelay<string & {}>;
        msContentZoomSnap?: import("csstype").Property.MsContentZoomSnap;
        msFlex?: import("csstype").Property.BorderImageOutset<import("react").ReactText>;
        msScrollLimit?: import("csstype").Property.AnimationDelay<string & {}>;
        msScrollSnapX?: import("csstype").Property.AnimationDelay<string & {}>;
        msScrollSnapY?: import("csstype").Property.AnimationDelay<string & {}>;
        msTransition?: import("csstype").Property.Transition<string & {}>;
        WebkitAnimation?: import("csstype").Property.Animation<string & {}>;
        WebkitBorderBefore?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitBorderImage?: import("csstype").Property.BorderImage;
        WebkitBorderRadius?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitColumnRule?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitColumns?: import("csstype").Property.BorderImageOutset<import("react").ReactText>;
        WebkitFlex?: import("csstype").Property.BorderImageOutset<import("react").ReactText>;
        WebkitFlexFlow?: import("csstype").Property.FlexFlow;
        WebkitMask?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitTextEmphasis?: import("csstype").Property.TextEmphasis;
        WebkitTextStroke?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitTransition?: import("csstype").Property.Transition<string & {}>;
        azimuth?: import("csstype").Property.Azimuth;
        boxAlign?: import("csstype").Property.BoxAlign;
        boxDirection?: import("csstype").Property.BoxDirection;
        boxFlex?: import("csstype").Property.FlexGrow;
        boxFlexGroup?: import("csstype").Property.FlexGrow;
        boxLines?: import("csstype").Property.BoxLines;
        boxOrdinalGroup?: import("csstype").Property.FlexGrow;
        boxOrient?: import("csstype").Property.BoxOrient;
        boxPack?: import("csstype").Property.BoxPack;
        clip?: import("csstype").Property.AspectRatio;
        fontVariantAlternates?: import("csstype").Property.FontVariantAlternates;
        gridColumnGap?: import("csstype").Property.Width<import("react").ReactText>;
        gridGap?: import("csstype").Property.Width<import("react").ReactText>;
        gridRowGap?: import("csstype").Property.Width<import("react").ReactText>;
        imeMode?: import("csstype").Property.ImeMode;
        offsetBlock?: import("csstype").Property.Width<import("react").ReactText>;
        offsetBlockEnd?: import("csstype").Property.Width<import("react").ReactText>;
        offsetBlockStart?: import("csstype").Property.Width<import("react").ReactText>;
        offsetInline?: import("csstype").Property.Width<import("react").ReactText>;
        offsetInlineEnd?: import("csstype").Property.Width<import("react").ReactText>;
        offsetInlineStart?: import("csstype").Property.Width<import("react").ReactText>;
        scrollSnapCoordinate?: import("csstype").Property.Width<import("react").ReactText>;
        scrollSnapDestination?: import("csstype").Property.Width<import("react").ReactText>;
        scrollSnapPointsX?: import("csstype").Property.AnimationName;
        scrollSnapPointsY?: import("csstype").Property.AnimationName;
        scrollSnapTypeX?: import("csstype").Property.MsContentZoomSnapType;
        scrollSnapTypeY?: import("csstype").Property.MsContentZoomSnapType;
        scrollbarTrackColor?: import("csstype").Property.BackgroundColor;
        textCombineHorizontal?: import("csstype").Property.TextCombineUpright;
        KhtmlBoxAlign?: import("csstype").Property.BoxAlign;
        KhtmlBoxDirection?: import("csstype").Property.BoxDirection;
        KhtmlBoxFlex?: import("csstype").Property.FlexGrow;
        KhtmlBoxFlexGroup?: import("csstype").Property.FlexGrow;
        KhtmlBoxLines?: import("csstype").Property.BoxLines;
        KhtmlBoxOrdinalGroup?: import("csstype").Property.FlexGrow;
        KhtmlBoxOrient?: import("csstype").Property.BoxOrient;
        KhtmlBoxPack?: import("csstype").Property.BoxPack;
        KhtmlLineBreak?: import("csstype").Property.LineBreak;
        KhtmlOpacity?: import("csstype").Property.BorderImageSlice;
        KhtmlUserSelect?: import("csstype").Property.UserSelect;
        MozBackgroundClip?: import("csstype").Property.BackgroundClip;
        MozBackgroundInlinePolicy?: import("csstype").Property.BoxDecorationBreak;
        MozBackgroundOrigin?: import("csstype").Property.BackgroundClip;
        MozBackgroundSize?: import("csstype").Property.Width<import("react").ReactText>;
        MozBinding?: import("csstype").Property.AnimationName;
        MozBorderRadius?: import("csstype").Property.Width<import("react").ReactText>;
        MozBorderRadiusBottomleft?: import("csstype").Property.Width<import("react").ReactText>;
        MozBorderRadiusBottomright?: import("csstype").Property.Width<import("react").ReactText>;
        MozBorderRadiusTopleft?: import("csstype").Property.Width<import("react").ReactText>;
        MozBorderRadiusTopright?: import("csstype").Property.Width<import("react").ReactText>;
        MozBoxAlign?: import("csstype").Property.BoxAlign;
        MozBoxDirection?: import("csstype").Property.BoxDirection;
        MozBoxFlex?: import("csstype").Property.FlexGrow;
        MozBoxOrdinalGroup?: import("csstype").Property.FlexGrow;
        MozBoxOrient?: import("csstype").Property.BoxOrient;
        MozBoxPack?: import("csstype").Property.BoxPack;
        MozBoxShadow?: import("csstype").Property.AnimationName;
        MozFloatEdge?: import("csstype").Property.MozFloatEdge;
        MozForceBrokenImageIcon?: import("csstype").Property.FlexGrow;
        MozOpacity?: import("csstype").Property.BorderImageSlice;
        MozOutline?: import("csstype").Property.Width<import("react").ReactText>;
        MozOutlineColor?: import("csstype").Property.OutlineColor;
        MozOutlineRadius?: import("csstype").Property.Width<import("react").ReactText>;
        MozOutlineRadiusBottomleft?: import("csstype").Property.Width<import("react").ReactText>;
        MozOutlineRadiusBottomright?: import("csstype").Property.Width<import("react").ReactText>;
        MozOutlineRadiusTopleft?: import("csstype").Property.Width<import("react").ReactText>;
        MozOutlineRadiusTopright?: import("csstype").Property.Width<import("react").ReactText>;
        MozOutlineStyle?: import("csstype").Property.OutlineStyle;
        MozOutlineWidth?: import("react").ReactText;
        MozTextAlignLast?: import("csstype").Property.TextAlignLast;
        MozTextDecorationColor?: import("csstype").Property.BackgroundColor;
        MozTextDecorationLine?: import("csstype").Property.TextDecorationLine;
        MozTextDecorationStyle?: import("csstype").Property.TextDecorationStyle;
        MozUserInput?: import("csstype").Property.MozUserInput;
        msImeMode?: import("csstype").Property.ImeMode;
        msScrollbarTrackColor?: import("csstype").Property.BackgroundColor;
        OAnimation?: import("csstype").Property.Animation<string & {}>;
        OAnimationDelay?: import("csstype").Property.AnimationDelay<string & {}>;
        OAnimationDirection?: import("csstype").Property.AnimationDirection;
        OAnimationDuration?: import("csstype").Property.AnimationDelay<string & {}>;
        OAnimationFillMode?: import("csstype").Property.AnimationFillMode;
        OAnimationIterationCount?: import("csstype").Property.AnimationIterationCount;
        OAnimationName?: import("csstype").Property.AnimationName;
        OAnimationPlayState?: import("csstype").Property.AnimationPlayState;
        OAnimationTimingFunction?: import("csstype").Property.AnimationTimingFunction;
        OBackgroundSize?: import("csstype").Property.Width<import("react").ReactText>;
        OBorderImage?: import("csstype").Property.BorderImage;
        OTransform?: import("csstype").Property.AnimationName;
        OTransition?: import("csstype").Property.Transition<string & {}>;
        OTransitionDelay?: import("csstype").Property.AnimationDelay<string & {}>;
        OTransitionDuration?: import("csstype").Property.AnimationDelay<string & {}>;
        OTransitionProperty?: import("csstype").Property.TransitionProperty;
        OTransitionTimingFunction?: import("csstype").Property.AnimationTimingFunction;
        WebkitBoxAlign?: import("csstype").Property.BoxAlign;
        WebkitBoxDirection?: import("csstype").Property.BoxDirection;
        WebkitBoxFlex?: import("csstype").Property.FlexGrow;
        WebkitBoxFlexGroup?: import("csstype").Property.FlexGrow;
        WebkitBoxLines?: import("csstype").Property.BoxLines;
        WebkitBoxOrdinalGroup?: import("csstype").Property.FlexGrow;
        WebkitBoxOrient?: import("csstype").Property.BoxOrient;
        WebkitBoxPack?: import("csstype").Property.BoxPack;
        WebkitScrollSnapPointsX?: import("csstype").Property.AnimationName;
        WebkitScrollSnapPointsY?: import("csstype").Property.AnimationName;
        alignmentBaseline?: import("csstype").Property.AlignmentBaseline;
        baselineShift?: import("csstype").Property.Width<import("react").ReactText>;
        clipRule?: import("csstype").Property.ClipRule;
        colorInterpolation?: import("csstype").Property.ColorInterpolation;
        colorRendering?: import("csstype").Property.ColorRendering;
        dominantBaseline?: import("csstype").Property.DominantBaseline;
        fill?: import("csstype").Property.Fill;
        fillOpacity?: import("csstype").Property.FlexGrow;
        fillRule?: import("csstype").Property.ClipRule;
        floodColor?: import("csstype").Property.FloodColor;
        floodOpacity?: import("csstype").Property.FlexGrow;
        glyphOrientationVertical?: import("csstype").Property.GridColumnEnd;
        lightingColor?: import("csstype").Property.FloodColor;
        marker?: import("csstype").Property.AnimationName;
        markerEnd?: import("csstype").Property.AnimationName;
        markerMid?: import("csstype").Property.AnimationName;
        markerStart?: import("csstype").Property.AnimationName;
        shapeRendering?: import("csstype").Property.ShapeRendering;
        stopColor?: import("csstype").Property.FloodColor;
        stopOpacity?: import("csstype").Property.FlexGrow;
        stroke?: import("csstype").Property.Fill;
        strokeDasharray?: import("csstype").Property.BorderImageOutset<import("react").ReactText>;
        strokeDashoffset?: import("csstype").Property.Width<import("react").ReactText>;
        strokeLinecap?: import("csstype").Property.StrokeLinecap;
        strokeLinejoin?: import("csstype").Property.StrokeLinejoin;
        strokeMiterlimit?: import("csstype").Property.FlexGrow;
        strokeOpacity?: import("csstype").Property.FlexGrow;
        strokeWidth?: import("csstype").Property.Width<import("react").ReactText>;
        textAnchor?: import("csstype").Property.TextAnchor;
        vectorEffect?: import("csstype").Property.VectorEffect;
    };
    /** 模态框最大化时样式数据 */
    get computedMaximizeContentStyles(): React.CSSProperties;
    /**
     * 模态框大小缩放时，上边距样式值
     */
    get computedResizableContentTopStyles(): {
        alignContent?: import("csstype").Property.AlignContent;
        alignItems?: import("csstype").Property.AlignItems;
        alignSelf?: import("csstype").Property.AlignSelf;
        alignTracks?: import("csstype").Property.AlignContent;
        animationDelay?: import("csstype").Property.AnimationDelay<string & {}>;
        animationDirection?: import("csstype").Property.AnimationDirection;
        animationDuration?: import("csstype").Property.AnimationDelay<string & {}>;
        animationFillMode?: import("csstype").Property.AnimationFillMode;
        animationIterationCount?: import("csstype").Property.AnimationIterationCount;
        animationName?: import("csstype").Property.AnimationName;
        animationPlayState?: import("csstype").Property.AnimationPlayState;
        animationTimingFunction?: import("csstype").Property.AnimationTimingFunction;
        appearance?: import("csstype").Property.Appearance;
        aspectRatio?: import("csstype").Property.AspectRatio;
        backdropFilter?: import("csstype").Property.AnimationName;
        backfaceVisibility?: import("csstype").Property.BackfaceVisibility;
        backgroundAttachment?: import("csstype").Property.BackgroundAttachment;
        backgroundBlendMode?: import("csstype").Property.BackgroundBlendMode;
        backgroundClip?: import("csstype").Property.BackgroundClip;
        backgroundColor?: import("csstype").Property.BackgroundColor;
        backgroundImage?: import("csstype").Property.AnimationName;
        backgroundOrigin?: import("csstype").Property.BackgroundClip;
        backgroundPosition?: import("csstype").Property.Width<import("react").ReactText>;
        backgroundPositionX?: import("csstype").Property.Width<import("react").ReactText>;
        backgroundPositionY?: import("csstype").Property.Width<import("react").ReactText>;
        backgroundRepeat?: import("csstype").Property.BackgroundRepeat;
        backgroundSize?: import("csstype").Property.Width<import("react").ReactText>;
        blockOverflow?: import("csstype").Property.BlockOverflow;
        blockSize?: import("csstype").Property.Width<import("react").ReactText>;
        borderBlockColor?: import("csstype").Property.BackgroundColor;
        borderBlockEndColor?: import("csstype").Property.BackgroundColor;
        borderBlockEndStyle?: import("csstype").Property.BorderBlockEndStyle;
        borderBlockEndWidth?: import("react").ReactText;
        borderBlockStartColor?: import("csstype").Property.BackgroundColor;
        borderBlockStartStyle?: import("csstype").Property.BorderBlockEndStyle;
        borderBlockStartWidth?: import("react").ReactText;
        borderBlockStyle?: import("csstype").Property.BorderBlockEndStyle;
        borderBlockWidth?: import("react").ReactText;
        borderBottomColor?: import("csstype").Property.BackgroundColor;
        borderBottomLeftRadius?: import("csstype").Property.Width<import("react").ReactText>;
        borderBottomRightRadius?: import("csstype").Property.Width<import("react").ReactText>;
        borderBottomStyle?: import("csstype").Property.BorderBlockEndStyle;
        borderBottomWidth?: import("react").ReactText;
        borderCollapse?: import("csstype").Property.BorderCollapse;
        borderEndEndRadius?: import("csstype").Property.Width<import("react").ReactText>;
        borderEndStartRadius?: import("csstype").Property.Width<import("react").ReactText>;
        borderImageOutset?: import("csstype").Property.BorderImageOutset<import("react").ReactText>;
        borderImageRepeat?: import("csstype").Property.BorderImageRepeat;
        borderImageSlice?: import("csstype").Property.BorderImageSlice;
        borderImageSource?: import("csstype").Property.AnimationName;
        borderImageWidth?: import("csstype").Property.BorderImageOutset<import("react").ReactText>;
        borderInlineColor?: import("csstype").Property.BackgroundColor;
        borderInlineEndColor?: import("csstype").Property.BackgroundColor;
        borderInlineEndStyle?: import("csstype").Property.BorderBlockEndStyle;
        borderInlineEndWidth?: import("react").ReactText;
        borderInlineStartColor?: import("csstype").Property.BackgroundColor;
        borderInlineStartStyle?: import("csstype").Property.BorderBlockEndStyle;
        borderInlineStartWidth?: import("react").ReactText;
        borderInlineStyle?: import("csstype").Property.BorderBlockEndStyle;
        borderInlineWidth?: import("react").ReactText;
        borderLeftColor?: import("csstype").Property.BackgroundColor;
        borderLeftStyle?: import("csstype").Property.BorderBlockEndStyle;
        borderLeftWidth?: import("react").ReactText;
        borderRightColor?: import("csstype").Property.BackgroundColor;
        borderRightStyle?: import("csstype").Property.BorderBlockEndStyle;
        borderRightWidth?: import("react").ReactText;
        borderSpacing?: import("csstype").Property.Width<import("react").ReactText>;
        borderStartEndRadius?: import("csstype").Property.Width<import("react").ReactText>;
        borderStartStartRadius?: import("csstype").Property.Width<import("react").ReactText>;
        borderTopColor?: import("csstype").Property.BackgroundColor;
        borderTopLeftRadius?: import("csstype").Property.Width<import("react").ReactText>;
        borderTopRightRadius?: import("csstype").Property.Width<import("react").ReactText>;
        borderTopStyle?: import("csstype").Property.BorderBlockEndStyle;
        borderTopWidth?: import("react").ReactText;
        bottom?: import("csstype").Property.Width<import("react").ReactText>;
        boxDecorationBreak?: import("csstype").Property.BoxDecorationBreak;
        boxShadow?: import("csstype").Property.AnimationName;
        boxSizing?: import("csstype").Property.BoxSizing;
        breakAfter?: import("csstype").Property.BreakAfter;
        breakBefore?: import("csstype").Property.BreakAfter;
        breakInside?: import("csstype").Property.BreakInside;
        captionSide?: import("csstype").Property.CaptionSide;
        caretColor?: import("csstype").Property.CaretColor;
        clear?: import("csstype").Property.Clear;
        clipPath?: import("csstype").Property.ClipPath;
        color?: import("csstype").Property.BackgroundColor;
        colorAdjust?: import("csstype").Property.ColorAdjust;
        columnCount?: import("csstype").Property.ColumnCount;
        columnFill?: import("csstype").Property.ColumnFill;
        columnGap?: import("csstype").Property.Width<import("react").ReactText>;
        columnRuleColor?: import("csstype").Property.BackgroundColor;
        columnRuleStyle?: import("csstype").Property.ColumnRuleStyle;
        columnRuleWidth?: import("csstype").Property.Width<import("react").ReactText>;
        columnSpan?: import("csstype").Property.ColumnSpan;
        columnWidth?: import("react").ReactText;
        contain?: import("csstype").Property.Contain;
        content?: import("csstype").Property.Content;
        contentVisibility?: import("csstype").Property.ContentVisibility;
        counterIncrement?: import("csstype").Property.AnimationName;
        counterReset?: import("csstype").Property.AnimationName;
        counterSet?: import("csstype").Property.AnimationName;
        cursor?: import("csstype").Property.Cursor;
        direction?: import("csstype").Property.Direction;
        display?: import("csstype").Property.Display;
        emptyCells?: import("csstype").Property.EmptyCells;
        filter?: import("csstype").Property.AnimationName;
        flexBasis?: import("csstype").Property.Width<import("react").ReactText>;
        flexDirection?: import("csstype").Property.FlexDirection;
        flexGrow?: import("csstype").Property.FlexGrow;
        flexShrink?: import("csstype").Property.FlexGrow;
        flexWrap?: import("csstype").Property.FlexWrap;
        float?: import("csstype").Property.Float;
        fontFamily?: import("csstype").Property.FontFamily;
        fontFeatureSettings?: import("csstype").Property.FontFeatureSettings;
        fontKerning?: import("csstype").Property.FontKerning;
        fontLanguageOverride?: import("csstype").Property.FontFeatureSettings;
        fontOpticalSizing?: import("csstype").Property.FontOpticalSizing;
        fontSize?: import("csstype").Property.Width<import("react").ReactText>;
        fontSizeAdjust?: import("csstype").Property.FontSizeAdjust;
        fontSmooth?: import("react").ReactText;
        fontStretch?: import("csstype").Property.FontStretch;
        fontStyle?: import("csstype").Property.FontStyle;
        fontSynthesis?: import("csstype").Property.FontSynthesis;
        fontVariant?: import("csstype").Property.FontVariant;
        fontVariantCaps?: import("csstype").Property.FontVariantCaps;
        fontVariantEastAsian?: import("csstype").Property.FontVariantEastAsian;
        fontVariantLigatures?: import("csstype").Property.FontVariantLigatures;
        fontVariantNumeric?: import("csstype").Property.FontVariantNumeric;
        fontVariantPosition?: import("csstype").Property.FontVariantPosition;
        fontVariationSettings?: import("csstype").Property.FontFeatureSettings;
        fontWeight?: import("csstype").Property.FontWeight;
        forcedColorAdjust?: import("csstype").Property.FontOpticalSizing;
        gridAutoColumns?: import("csstype").Property.Width<import("react").ReactText>;
        gridAutoFlow?: import("csstype").Property.GridAutoFlow;
        gridAutoRows?: import("csstype").Property.Width<import("react").ReactText>;
        gridColumnEnd?: import("csstype").Property.GridColumnEnd;
        gridColumnStart?: import("csstype").Property.GridColumnEnd;
        gridRowEnd?: import("csstype").Property.GridColumnEnd;
        gridRowStart?: import("csstype").Property.GridColumnEnd;
        gridTemplateAreas?: import("csstype").Property.AnimationName;
        gridTemplateColumns?: import("csstype").Property.Width<import("react").ReactText>;
        gridTemplateRows?: import("csstype").Property.Width<import("react").ReactText>;
        hangingPunctuation?: import("csstype").Property.HangingPunctuation;
        height?: import("csstype").Property.Width<import("react").ReactText>;
        hyphens?: import("csstype").Property.Hyphens;
        imageOrientation?: import("csstype").Property.ImageOrientation;
        imageRendering?: import("csstype").Property.ImageRendering;
        imageResolution?: import("csstype").Property.ImageResolution;
        initialLetter?: import("csstype").Property.InitialLetter;
        inlineSize?: import("csstype").Property.Width<import("react").ReactText>;
        inset?: import("csstype").Property.Width<import("react").ReactText>;
        insetBlock?: import("csstype").Property.Width<import("react").ReactText>;
        insetBlockEnd?: import("csstype").Property.Width<import("react").ReactText>;
        insetBlockStart?: import("csstype").Property.Width<import("react").ReactText>;
        insetInline?: import("csstype").Property.Width<import("react").ReactText>;
        insetInlineEnd?: import("csstype").Property.Width<import("react").ReactText>;
        insetInlineStart?: import("csstype").Property.Width<import("react").ReactText>;
        isolation?: import("csstype").Property.Isolation;
        justifyContent?: import("csstype").Property.JustifyContent;
        justifyItems?: import("csstype").Property.JustifyItems;
        justifySelf?: import("csstype").Property.JustifySelf;
        justifyTracks?: import("csstype").Property.JustifyContent;
        left?: import("csstype").Property.Width<import("react").ReactText>;
        letterSpacing?: import("react").ReactText;
        lineBreak?: import("csstype").Property.LineBreak;
        lineHeight?: import("csstype").Property.BorderImageOutset<import("react").ReactText>;
        lineHeightStep?: import("react").ReactText;
        listStyleImage?: import("csstype").Property.AnimationName;
        listStylePosition?: import("csstype").Property.ListStylePosition;
        listStyleType?: import("csstype").Property.AnimationName;
        marginBlock?: import("csstype").Property.Width<import("react").ReactText>;
        marginBlockEnd?: import("csstype").Property.Width<import("react").ReactText>;
        marginBlockStart?: import("csstype").Property.Width<import("react").ReactText>;
        marginBottom?: import("csstype").Property.Width<import("react").ReactText>;
        marginInline?: import("csstype").Property.Width<import("react").ReactText>;
        marginInlineEnd?: import("csstype").Property.Width<import("react").ReactText>;
        marginInlineStart?: import("csstype").Property.Width<import("react").ReactText>;
        marginLeft?: import("csstype").Property.Width<import("react").ReactText>;
        marginRight?: import("csstype").Property.Width<import("react").ReactText>;
        marginTop?: import("csstype").Property.Width<import("react").ReactText>;
        maskBorderMode?: import("csstype").Property.MaskBorderMode;
        maskBorderOutset?: import("csstype").Property.BorderImageOutset<import("react").ReactText>;
        maskBorderRepeat?: import("csstype").Property.BorderImageRepeat;
        maskBorderSlice?: import("csstype").Property.BorderImageSlice;
        maskBorderSource?: import("csstype").Property.AnimationName;
        maskBorderWidth?: import("csstype").Property.BorderImageOutset<import("react").ReactText>;
        maskClip?: import("csstype").Property.MaskClip;
        maskComposite?: import("csstype").Property.MaskComposite;
        maskImage?: import("csstype").Property.AnimationName;
        maskMode?: import("csstype").Property.MaskMode;
        maskOrigin?: import("csstype").Property.MaskOrigin;
        maskPosition?: import("csstype").Property.Width<import("react").ReactText>;
        maskRepeat?: import("csstype").Property.BackgroundRepeat;
        maskSize?: import("csstype").Property.Width<import("react").ReactText>;
        maskType?: import("csstype").Property.MaskBorderMode;
        mathStyle?: import("csstype").Property.MathStyle;
        maxBlockSize?: import("csstype").Property.Width<import("react").ReactText>;
        maxHeight?: import("csstype").Property.Width<import("react").ReactText>;
        maxInlineSize?: import("csstype").Property.Width<import("react").ReactText>;
        maxLines?: import("csstype").Property.FontSizeAdjust;
        maxWidth?: import("csstype").Property.Width<import("react").ReactText>;
        minBlockSize?: import("csstype").Property.Width<import("react").ReactText>;
        minHeight?: import("csstype").Property.Width<import("react").ReactText>;
        minInlineSize?: import("csstype").Property.Width<import("react").ReactText>;
        minWidth?: import("csstype").Property.Width<import("react").ReactText>;
        mixBlendMode?: import("csstype").Property.MixBlendMode;
        motionDistance?: import("csstype").Property.Width<import("react").ReactText>;
        motionPath?: import("csstype").Property.ClipPath;
        motionRotation?: import("csstype").Property.OffsetRotate;
        objectFit?: import("csstype").Property.ObjectFit;
        objectPosition?: import("csstype").Property.Width<import("react").ReactText>;
        offsetAnchor?: import("csstype").Property.Width<import("react").ReactText>;
        offsetDistance?: import("csstype").Property.Width<import("react").ReactText>;
        offsetPath?: import("csstype").Property.ClipPath;
        offsetRotate?: import("csstype").Property.OffsetRotate;
        offsetRotation?: import("csstype").Property.OffsetRotate;
        opacity?: import("csstype").Property.BorderImageSlice;
        order?: import("csstype").Property.FlexGrow;
        orphans?: import("csstype").Property.FlexGrow;
        outlineColor?: import("csstype").Property.OutlineColor;
        outlineOffset?: import("react").ReactText;
        outlineStyle?: import("csstype").Property.OutlineStyle;
        outlineWidth?: import("react").ReactText;
        overflowAnchor?: import("csstype").Property.FontOpticalSizing;
        overflowBlock?: import("csstype").Property.OverflowBlock;
        overflowClipBox?: import("csstype").Property.OverflowClipBox;
        overflowInline?: import("csstype").Property.OverflowBlock;
        overflowWrap?: import("csstype").Property.OverflowWrap;
        overflowX?: import("csstype").Property.OverflowX;
        overflowY?: import("csstype").Property.OverflowX;
        overscrollBehavior?: import("csstype").Property.OverscrollBehavior;
        overscrollBehaviorBlock?: import("csstype").Property.OverscrollBehaviorBlock;
        overscrollBehaviorInline?: import("csstype").Property.OverscrollBehaviorBlock;
        overscrollBehaviorX?: import("csstype").Property.OverscrollBehaviorBlock;
        overscrollBehaviorY?: import("csstype").Property.OverscrollBehaviorBlock;
        paddingBlock?: import("csstype").Property.Width<import("react").ReactText>;
        paddingBlockEnd?: import("csstype").Property.Width<import("react").ReactText>;
        paddingBlockStart?: import("csstype").Property.Width<import("react").ReactText>;
        paddingBottom?: import("csstype").Property.Width<import("react").ReactText>;
        paddingInline?: import("csstype").Property.Width<import("react").ReactText>;
        paddingInlineEnd?: import("csstype").Property.Width<import("react").ReactText>;
        paddingInlineStart?: import("csstype").Property.Width<import("react").ReactText>;
        paddingLeft?: import("csstype").Property.Width<import("react").ReactText>;
        paddingRight?: import("csstype").Property.Width<import("react").ReactText>;
        paddingTop?: import("csstype").Property.Width<import("react").ReactText>;
        pageBreakAfter?: import("csstype").Property.PageBreakAfter;
        pageBreakBefore?: import("csstype").Property.PageBreakAfter;
        pageBreakInside?: import("csstype").Property.PageBreakInside;
        paintOrder?: import("csstype").Property.PaintOrder;
        perspective?: import("react").ReactText;
        perspectiveOrigin?: import("csstype").Property.Width<import("react").ReactText>;
        placeContent?: import("csstype").Property.AlignContent;
        pointerEvents?: import("csstype").Property.PointerEvents;
        position?: import("csstype").Property.Position;
        quotes?: import("csstype").Property.Quotes;
        resize?: import("csstype").Property.Resize;
        right?: import("csstype").Property.Width<import("react").ReactText>;
        rotate?: import("csstype").Property.AnimationName;
        rowGap?: import("csstype").Property.Width<import("react").ReactText>;
        rubyAlign?: import("csstype").Property.RubyAlign;
        rubyMerge?: import("csstype").Property.RubyMerge;
        rubyPosition?: import("csstype").Property.RubyPosition;
        scale?: import("csstype").Property.Scale;
        scrollBehavior?: import("csstype").Property.ScrollBehavior;
        scrollMargin?: import("csstype").Property.Width<import("react").ReactText>;
        scrollMarginBlock?: import("csstype").Property.Width<import("react").ReactText>;
        scrollMarginBlockEnd?: import("react").ReactText;
        scrollMarginBlockStart?: import("react").ReactText;
        scrollMarginBottom?: import("react").ReactText;
        scrollMarginInline?: import("csstype").Property.Width<import("react").ReactText>;
        scrollMarginInlineEnd?: import("react").ReactText;
        scrollMarginInlineStart?: import("react").ReactText;
        scrollMarginLeft?: import("react").ReactText;
        scrollMarginRight?: import("react").ReactText;
        scrollMarginTop?: import("react").ReactText;
        scrollPadding?: import("csstype").Property.Width<import("react").ReactText>;
        scrollPaddingBlock?: import("csstype").Property.Width<import("react").ReactText>;
        scrollPaddingBlockEnd?: import("csstype").Property.Width<import("react").ReactText>;
        scrollPaddingBlockStart?: import("csstype").Property.Width<import("react").ReactText>;
        scrollPaddingBottom?: import("csstype").Property.Width<import("react").ReactText>;
        scrollPaddingInline?: import("csstype").Property.Width<import("react").ReactText>;
        scrollPaddingInlineEnd?: import("csstype").Property.Width<import("react").ReactText>;
        scrollPaddingInlineStart?: import("csstype").Property.Width<import("react").ReactText>;
        scrollPaddingLeft?: import("csstype").Property.Width<import("react").ReactText>;
        scrollPaddingRight?: import("csstype").Property.Width<import("react").ReactText>;
        scrollPaddingTop?: import("csstype").Property.Width<import("react").ReactText>;
        scrollSnapAlign?: import("csstype").Property.ScrollSnapAlign;
        scrollSnapMargin?: import("csstype").Property.Width<import("react").ReactText>;
        scrollSnapMarginBottom?: import("react").ReactText;
        scrollSnapMarginLeft?: import("react").ReactText;
        scrollSnapMarginRight?: import("react").ReactText;
        scrollSnapMarginTop?: import("react").ReactText;
        scrollSnapStop?: import("csstype").Property.ScrollSnapStop;
        scrollSnapType?: import("csstype").Property.ScrollSnapType;
        scrollbarColor?: import("csstype").Property.ScrollbarColor;
        scrollbarGutter?: import("csstype").Property.ScrollbarGutter;
        scrollbarWidth?: import("csstype").Property.ScrollbarWidth;
        shapeImageThreshold?: import("csstype").Property.BorderImageSlice;
        shapeMargin?: import("csstype").Property.Width<import("react").ReactText>;
        shapeOutside?: import("csstype").Property.ShapeOutside;
        tabSize?: import("csstype").Property.TabSize<import("react").ReactText>;
        tableLayout?: import("csstype").Property.TableLayout;
        textAlign?: import("csstype").Property.TextAlign;
        textAlignLast?: import("csstype").Property.TextAlignLast;
        textCombineUpright?: import("csstype").Property.TextCombineUpright;
        textDecorationColor?: import("csstype").Property.BackgroundColor;
        textDecorationLine?: import("csstype").Property.TextDecorationLine;
        textDecorationSkip?: import("csstype").Property.TextDecorationSkip;
        textDecorationSkipInk?: import("csstype").Property.TextDecorationSkipInk;
        textDecorationStyle?: import("csstype").Property.TextDecorationStyle;
        textDecorationThickness?: import("csstype").Property.Width<import("react").ReactText>;
        textDecorationWidth?: import("csstype").Property.Width<import("react").ReactText>;
        textEmphasisColor?: import("csstype").Property.BackgroundColor;
        textEmphasisPosition?: import("csstype").Property.AnimationDelay<string & {}>;
        textEmphasisStyle?: import("csstype").Property.TextEmphasisStyle;
        textIndent?: import("csstype").Property.Width<import("react").ReactText>;
        textJustify?: import("csstype").Property.TextJustify;
        textOrientation?: import("csstype").Property.TextOrientation;
        textOverflow?: import("csstype").Property.BlockOverflow;
        textRendering?: import("csstype").Property.TextRendering;
        textShadow?: import("csstype").Property.AnimationName;
        textSizeAdjust?: import("csstype").Property.Quotes;
        textTransform?: import("csstype").Property.TextTransform;
        textUnderlineOffset?: import("csstype").Property.Width<import("react").ReactText>;
        textUnderlinePosition?: import("csstype").Property.TextUnderlinePosition;
        top?: import("csstype").Property.Width<import("react").ReactText>;
        touchAction?: import("csstype").Property.TouchAction;
        transform?: import("csstype").Property.AnimationName;
        transformBox?: import("csstype").Property.TransformBox;
        transformOrigin?: import("csstype").Property.Width<import("react").ReactText>;
        transformStyle?: import("csstype").Property.TransformStyle;
        transitionDelay?: import("csstype").Property.AnimationDelay<string & {}>;
        transitionDuration?: import("csstype").Property.AnimationDelay<string & {}>;
        transitionProperty?: import("csstype").Property.TransitionProperty;
        transitionTimingFunction?: import("csstype").Property.AnimationTimingFunction;
        translate?: import("csstype").Property.Width<import("react").ReactText>;
        unicodeBidi?: import("csstype").Property.UnicodeBidi;
        userSelect?: import("csstype").Property.UserSelect;
        verticalAlign?: import("csstype").Property.Width<import("react").ReactText>;
        visibility?: import("csstype").Property.Visibility;
        whiteSpace?: import("csstype").Property.WhiteSpace;
        widows?: import("csstype").Property.FlexGrow;
        width?: import("csstype").Property.Width<import("react").ReactText>;
        willChange?: import("csstype").Property.WillChange;
        wordBreak?: import("csstype").Property.WordBreak;
        wordSpacing?: import("csstype").Property.Width<import("react").ReactText>;
        wordWrap?: import("csstype").Property.WordWrap;
        writingMode?: import("csstype").Property.WritingMode;
        zIndex?: import("csstype").Property.ColumnCount;
        zoom?: import("csstype").Property.Zoom;
        all?: import("csstype").Globals;
        animation?: import("csstype").Property.Animation<string & {}>;
        background?: import("csstype").Property.Width<import("react").ReactText>;
        border?: import("csstype").Property.Width<import("react").ReactText>;
        borderBlock?: import("csstype").Property.Width<import("react").ReactText>;
        borderBlockEnd?: import("csstype").Property.Width<import("react").ReactText>;
        borderBlockStart?: import("csstype").Property.Width<import("react").ReactText>;
        borderBottom?: import("csstype").Property.Width<import("react").ReactText>;
        borderColor?: import("csstype").Property.BackgroundColor;
        borderImage?: import("csstype").Property.BorderImage;
        borderInline?: import("csstype").Property.Width<import("react").ReactText>;
        borderInlineEnd?: import("csstype").Property.Width<import("react").ReactText>;
        borderInlineStart?: import("csstype").Property.Width<import("react").ReactText>;
        borderLeft?: import("csstype").Property.Width<import("react").ReactText>;
        borderRadius?: import("csstype").Property.Width<import("react").ReactText>;
        borderRight?: import("csstype").Property.Width<import("react").ReactText>;
        borderStyle?: import("csstype").Property.ColumnRuleStyle;
        borderTop?: import("csstype").Property.Width<import("react").ReactText>;
        borderWidth?: import("csstype").Property.Width<import("react").ReactText>;
        columnRule?: import("csstype").Property.Width<import("react").ReactText>;
        columns?: import("csstype").Property.BorderImageOutset<import("react").ReactText>;
        flex?: import("csstype").Property.BorderImageOutset<import("react").ReactText>;
        flexFlow?: import("csstype").Property.FlexFlow;
        font?: import("csstype").Property.Font;
        gap?: import("csstype").Property.Width<import("react").ReactText>;
        grid?: import("csstype").Property.AnimationName;
        gridArea?: import("csstype").Property.GridColumnEnd;
        gridColumn?: import("csstype").Property.GridColumnEnd;
        gridRow?: import("csstype").Property.GridColumnEnd;
        gridTemplate?: import("csstype").Property.AnimationName;
        lineClamp?: import("csstype").Property.FontSizeAdjust;
        listStyle?: import("csstype").Property.ListStyle;
        margin?: import("csstype").Property.Width<import("react").ReactText>;
        mask?: import("csstype").Property.Width<import("react").ReactText>;
        maskBorder?: import("csstype").Property.MaskBorder;
        motion?: import("csstype").Property.Width<import("react").ReactText>;
        offset?: import("csstype").Property.Width<import("react").ReactText>;
        outline?: import("csstype").Property.Width<import("react").ReactText>;
        overflow?: import("csstype").Property.Overflow;
        padding?: import("csstype").Property.Width<import("react").ReactText>;
        placeItems?: import("csstype").Property.AlignItems;
        placeSelf?: import("csstype").Property.AlignSelf;
        textDecoration?: import("csstype").Property.Width<import("react").ReactText>;
        textEmphasis?: import("csstype").Property.TextEmphasis;
        transition?: import("csstype").Property.Transition<string & {}>;
        MozAnimationDelay?: import("csstype").Property.AnimationDelay<string & {}>;
        MozAnimationDirection?: import("csstype").Property.AnimationDirection;
        MozAnimationDuration?: import("csstype").Property.AnimationDelay<string & {}>;
        MozAnimationFillMode?: import("csstype").Property.AnimationFillMode;
        MozAnimationIterationCount?: import("csstype").Property.AnimationIterationCount;
        MozAnimationName?: import("csstype").Property.AnimationName;
        MozAnimationPlayState?: import("csstype").Property.AnimationPlayState;
        MozAnimationTimingFunction?: import("csstype").Property.AnimationTimingFunction;
        MozAppearance?: import("csstype").Property.MozAppearance;
        MozBackfaceVisibility?: import("csstype").Property.BackfaceVisibility;
        MozBorderBottomColors?: import("csstype").Property.MozBorderBottomColors;
        MozBorderEndColor?: import("csstype").Property.BackgroundColor;
        MozBorderEndStyle?: import("csstype").Property.BorderBlockEndStyle;
        MozBorderEndWidth?: import("react").ReactText;
        MozBorderLeftColors?: import("csstype").Property.MozBorderBottomColors;
        MozBorderRightColors?: import("csstype").Property.MozBorderBottomColors;
        MozBorderStartColor?: import("csstype").Property.BackgroundColor;
        MozBorderStartStyle?: import("csstype").Property.BorderBlockEndStyle;
        MozBorderTopColors?: import("csstype").Property.MozBorderBottomColors;
        MozBoxSizing?: import("csstype").Property.BoxSizing;
        MozColumnCount?: import("csstype").Property.ColumnCount;
        MozColumnFill?: import("csstype").Property.ColumnFill;
        MozColumnGap?: import("csstype").Property.Width<import("react").ReactText>;
        MozColumnRuleColor?: import("csstype").Property.BackgroundColor;
        MozColumnRuleStyle?: import("csstype").Property.ColumnRuleStyle;
        MozColumnRuleWidth?: import("csstype").Property.Width<import("react").ReactText>;
        MozColumnWidth?: import("react").ReactText;
        MozContextProperties?: import("csstype").Property.MozContextProperties;
        MozFontFeatureSettings?: import("csstype").Property.FontFeatureSettings;
        MozFontLanguageOverride?: import("csstype").Property.FontFeatureSettings;
        MozHyphens?: import("csstype").Property.Hyphens;
        MozImageRegion?: import("csstype").Property.AspectRatio;
        MozMarginEnd?: import("csstype").Property.Width<import("react").ReactText>;
        MozMarginStart?: import("csstype").Property.Width<import("react").ReactText>;
        MozOrient?: import("csstype").Property.MozOrient;
        MozOsxFontSmoothing?: import("react").ReactText;
        MozPaddingEnd?: import("csstype").Property.Width<import("react").ReactText>;
        MozPaddingStart?: import("csstype").Property.Width<import("react").ReactText>;
        MozPerspective?: import("react").ReactText;
        MozPerspectiveOrigin?: import("csstype").Property.Width<import("react").ReactText>;
        MozStackSizing?: import("csstype").Property.MozStackSizing;
        MozTabSize?: import("csstype").Property.TabSize<import("react").ReactText>;
        MozTextBlink?: import("csstype").Property.MozTextBlink;
        MozTextSizeAdjust?: import("csstype").Property.Quotes;
        MozTransformOrigin?: import("csstype").Property.Width<import("react").ReactText>;
        MozTransformStyle?: import("csstype").Property.TransformStyle;
        MozTransitionDelay?: import("csstype").Property.AnimationDelay<string & {}>;
        MozTransitionDuration?: import("csstype").Property.AnimationDelay<string & {}>;
        MozTransitionProperty?: import("csstype").Property.TransitionProperty;
        MozTransitionTimingFunction?: import("csstype").Property.AnimationTimingFunction;
        MozUserFocus?: import("csstype").Property.MozUserFocus;
        MozUserModify?: import("csstype").Property.MozUserModify;
        MozUserSelect?: import("csstype").Property.UserSelect;
        MozWindowDragging?: import("csstype").Property.MozWindowDragging;
        MozWindowShadow?: import("csstype").Property.MozWindowShadow;
        msAccelerator?: import("csstype").Property.MsAccelerator;
        msAlignSelf?: import("csstype").Property.AlignSelf;
        msBlockProgression?: import("csstype").Property.MsBlockProgression;
        msContentZoomChaining?: import("csstype").Property.MsContentZoomChaining;
        msContentZoomLimitMax?: import("csstype").Property.AnimationDelay<string & {}>;
        msContentZoomLimitMin?: import("csstype").Property.AnimationDelay<string & {}>;
        msContentZoomSnapPoints?: import("csstype").Property.AnimationDelay<string & {}>;
        msContentZoomSnapType?: import("csstype").Property.MsContentZoomSnapType;
        msContentZooming?: import("csstype").Property.MsContentZooming;
        msFilter?: import("csstype").Property.AnimationDelay<string & {}>;
        msFlexDirection?: import("csstype").Property.FlexDirection;
        msFlexPositive?: import("csstype").Property.FlexGrow;
        msFlowFrom?: import("csstype").Property.AnimationName;
        msFlowInto?: import("csstype").Property.AnimationName;
        msGridColumns?: import("csstype").Property.Width<import("react").ReactText>;
        msGridRows?: import("csstype").Property.Width<import("react").ReactText>;
        msHighContrastAdjust?: import("csstype").Property.FontOpticalSizing;
        msHyphenateLimitChars?: import("csstype").Property.GridColumnEnd;
        msHyphenateLimitLines?: import("csstype").Property.MsHyphenateLimitLines;
        msHyphenateLimitZone?: import("csstype").Property.Width<import("react").ReactText>;
        msHyphens?: import("csstype").Property.Hyphens;
        msImeAlign?: import("csstype").Property.MsImeAlign;
        msJustifySelf?: import("csstype").Property.JustifySelf;
        msLineBreak?: import("csstype").Property.LineBreak;
        msOrder?: import("csstype").Property.FlexGrow;
        msOverflowStyle?: import("csstype").Property.MsOverflowStyle;
        msOverflowX?: import("csstype").Property.OverflowX;
        msOverflowY?: import("csstype").Property.OverflowX;
        msScrollChaining?: import("csstype").Property.MsContentZoomChaining;
        msScrollLimitXMax?: import("react").ReactText;
        msScrollLimitXMin?: import("react").ReactText;
        msScrollLimitYMax?: import("react").ReactText;
        msScrollLimitYMin?: import("react").ReactText;
        msScrollRails?: import("csstype").Property.MsScrollRails;
        msScrollSnapPointsX?: import("csstype").Property.AnimationDelay<string & {}>;
        msScrollSnapPointsY?: import("csstype").Property.AnimationDelay<string & {}>;
        msScrollSnapType?: import("csstype").Property.MsContentZoomSnapType;
        msScrollTranslation?: import("csstype").Property.MsScrollTranslation;
        msScrollbar3dlightColor?: import("csstype").Property.BackgroundColor;
        msScrollbarArrowColor?: import("csstype").Property.BackgroundColor;
        msScrollbarBaseColor?: import("csstype").Property.BackgroundColor;
        msScrollbarDarkshadowColor?: import("csstype").Property.BackgroundColor;
        msScrollbarFaceColor?: import("csstype").Property.BackgroundColor;
        msScrollbarHighlightColor?: import("csstype").Property.BackgroundColor;
        msScrollbarShadowColor?: import("csstype").Property.BackgroundColor;
        msTextAutospace?: import("csstype").Property.MsTextAutospace;
        msTextCombineHorizontal?: import("csstype").Property.TextCombineUpright;
        msTextOverflow?: import("csstype").Property.BlockOverflow;
        msTouchAction?: import("csstype").Property.TouchAction;
        msTouchSelect?: import("csstype").Property.MsTouchSelect;
        msTransform?: import("csstype").Property.AnimationName;
        msTransformOrigin?: import("csstype").Property.Width<import("react").ReactText>;
        msTransitionDelay?: import("csstype").Property.AnimationDelay<string & {}>;
        msTransitionDuration?: import("csstype").Property.AnimationDelay<string & {}>;
        msTransitionProperty?: import("csstype").Property.TransitionProperty;
        msTransitionTimingFunction?: import("csstype").Property.AnimationTimingFunction;
        msUserSelect?: import("csstype").Property.MsUserSelect;
        msWordBreak?: import("csstype").Property.WordBreak;
        msWrapFlow?: import("csstype").Property.MsWrapFlow;
        msWrapMargin?: import("react").ReactText;
        msWrapThrough?: import("csstype").Property.MsWrapThrough;
        msWritingMode?: import("csstype").Property.WritingMode;
        OObjectFit?: import("csstype").Property.ObjectFit;
        OObjectPosition?: import("csstype").Property.Width<import("react").ReactText>;
        OTabSize?: import("csstype").Property.TabSize<import("react").ReactText>;
        OTextOverflow?: import("csstype").Property.BlockOverflow;
        OTransformOrigin?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitAlignContent?: import("csstype").Property.AlignContent;
        WebkitAlignItems?: import("csstype").Property.AlignItems;
        WebkitAlignSelf?: import("csstype").Property.AlignSelf;
        WebkitAnimationDelay?: import("csstype").Property.AnimationDelay<string & {}>;
        WebkitAnimationDirection?: import("csstype").Property.AnimationDirection;
        WebkitAnimationDuration?: import("csstype").Property.AnimationDelay<string & {}>;
        WebkitAnimationFillMode?: import("csstype").Property.AnimationFillMode;
        WebkitAnimationIterationCount?: import("csstype").Property.AnimationIterationCount;
        WebkitAnimationName?: import("csstype").Property.AnimationName;
        WebkitAnimationPlayState?: import("csstype").Property.AnimationPlayState;
        WebkitAnimationTimingFunction?: import("csstype").Property.AnimationTimingFunction;
        WebkitAppearance?: import("csstype").Property.WebkitAppearance;
        WebkitBackdropFilter?: import("csstype").Property.AnimationName;
        WebkitBackfaceVisibility?: import("csstype").Property.BackfaceVisibility;
        WebkitBackgroundClip?: import("csstype").Property.BackgroundClip;
        WebkitBackgroundOrigin?: import("csstype").Property.BackgroundClip;
        WebkitBackgroundSize?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitBorderBeforeColor?: import("csstype").Property.BackgroundColor;
        WebkitBorderBeforeStyle?: import("csstype").Property.ColumnRuleStyle;
        WebkitBorderBeforeWidth?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitBorderBottomLeftRadius?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitBorderBottomRightRadius?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitBorderImageSlice?: import("csstype").Property.BorderImageSlice;
        WebkitBorderTopLeftRadius?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitBorderTopRightRadius?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitBoxDecorationBreak?: import("csstype").Property.BoxDecorationBreak;
        WebkitBoxReflect?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitBoxShadow?: import("csstype").Property.AnimationName;
        WebkitBoxSizing?: import("csstype").Property.BoxSizing;
        WebkitClipPath?: import("csstype").Property.ClipPath;
        WebkitColumnCount?: import("csstype").Property.ColumnCount;
        WebkitColumnFill?: import("csstype").Property.ColumnFill;
        WebkitColumnGap?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitColumnRuleColor?: import("csstype").Property.BackgroundColor;
        WebkitColumnRuleStyle?: import("csstype").Property.ColumnRuleStyle;
        WebkitColumnRuleWidth?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitColumnSpan?: import("csstype").Property.ColumnSpan;
        WebkitColumnWidth?: import("react").ReactText;
        WebkitFilter?: import("csstype").Property.AnimationName;
        WebkitFlexBasis?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitFlexDirection?: import("csstype").Property.FlexDirection;
        WebkitFlexGrow?: import("csstype").Property.FlexGrow;
        WebkitFlexShrink?: import("csstype").Property.FlexGrow;
        WebkitFlexWrap?: import("csstype").Property.FlexWrap;
        WebkitFontFeatureSettings?: import("csstype").Property.FontFeatureSettings;
        WebkitFontKerning?: import("csstype").Property.FontKerning;
        WebkitFontSmoothing?: import("react").ReactText;
        WebkitFontVariantLigatures?: import("csstype").Property.FontVariantLigatures;
        WebkitHyphens?: import("csstype").Property.Hyphens;
        WebkitJustifyContent?: import("csstype").Property.JustifyContent;
        WebkitLineBreak?: import("csstype").Property.LineBreak;
        WebkitLineClamp?: import("csstype").Property.FontSizeAdjust;
        WebkitMarginEnd?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitMarginStart?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitMaskAttachment?: import("csstype").Property.BackgroundAttachment;
        WebkitMaskClip?: import("csstype").Property.WebkitMaskClip;
        WebkitMaskComposite?: import("csstype").Property.WebkitMaskComposite;
        WebkitMaskImage?: import("csstype").Property.AnimationName;
        WebkitMaskOrigin?: import("csstype").Property.WebkitMaskOrigin;
        WebkitMaskPosition?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitMaskPositionX?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitMaskPositionY?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitMaskRepeat?: import("csstype").Property.BackgroundRepeat;
        WebkitMaskRepeatX?: import("csstype").Property.WebkitMaskRepeatX;
        WebkitMaskRepeatY?: import("csstype").Property.WebkitMaskRepeatX;
        WebkitMaskSize?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitMaxInlineSize?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitOrder?: import("csstype").Property.FlexGrow;
        WebkitOverflowScrolling?: import("csstype").Property.WebkitOverflowScrolling;
        WebkitPaddingEnd?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitPaddingStart?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitPerspective?: import("react").ReactText;
        WebkitPerspectiveOrigin?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitPrintColorAdjust?: import("csstype").Property.ColorAdjust;
        WebkitRubyPosition?: import("csstype").Property.RubyPosition;
        WebkitScrollSnapType?: import("csstype").Property.ScrollSnapType;
        WebkitShapeMargin?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitTapHighlightColor?: import("csstype").Property.BackgroundColor;
        WebkitTextCombine?: import("csstype").Property.TextCombineUpright;
        WebkitTextDecorationColor?: import("csstype").Property.BackgroundColor;
        WebkitTextDecorationLine?: import("csstype").Property.TextDecorationLine;
        WebkitTextDecorationSkip?: import("csstype").Property.TextDecorationSkip;
        WebkitTextDecorationStyle?: import("csstype").Property.TextDecorationStyle;
        WebkitTextEmphasisColor?: import("csstype").Property.BackgroundColor;
        WebkitTextEmphasisPosition?: import("csstype").Property.AnimationDelay<string & {}>;
        WebkitTextEmphasisStyle?: import("csstype").Property.TextEmphasisStyle;
        WebkitTextFillColor?: import("csstype").Property.BackgroundColor;
        WebkitTextOrientation?: import("csstype").Property.TextOrientation;
        WebkitTextSizeAdjust?: import("csstype").Property.Quotes;
        WebkitTextStrokeColor?: import("csstype").Property.BackgroundColor;
        WebkitTextStrokeWidth?: import("react").ReactText;
        WebkitTextUnderlinePosition?: import("csstype").Property.TextUnderlinePosition;
        WebkitTouchCallout?: import("csstype").Property.WebkitTouchCallout;
        WebkitTransform?: import("csstype").Property.AnimationName;
        WebkitTransformOrigin?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitTransformStyle?: import("csstype").Property.TransformStyle;
        WebkitTransitionDelay?: import("csstype").Property.AnimationDelay<string & {}>;
        WebkitTransitionDuration?: import("csstype").Property.AnimationDelay<string & {}>;
        WebkitTransitionProperty?: import("csstype").Property.TransitionProperty;
        WebkitTransitionTimingFunction?: import("csstype").Property.AnimationTimingFunction;
        WebkitUserModify?: import("csstype").Property.WebkitUserModify;
        WebkitUserSelect?: import("csstype").Property.UserSelect;
        WebkitWritingMode?: import("csstype").Property.WritingMode;
        MozAnimation?: import("csstype").Property.Animation<string & {}>;
        MozBorderImage?: import("csstype").Property.BorderImage;
        MozColumnRule?: import("csstype").Property.Width<import("react").ReactText>;
        MozColumns?: import("csstype").Property.BorderImageOutset<import("react").ReactText>;
        MozTransition?: import("csstype").Property.Transition<string & {}>;
        msContentZoomLimit?: import("csstype").Property.AnimationDelay<string & {}>;
        msContentZoomSnap?: import("csstype").Property.MsContentZoomSnap;
        msFlex?: import("csstype").Property.BorderImageOutset<import("react").ReactText>;
        msScrollLimit?: import("csstype").Property.AnimationDelay<string & {}>;
        msScrollSnapX?: import("csstype").Property.AnimationDelay<string & {}>;
        msScrollSnapY?: import("csstype").Property.AnimationDelay<string & {}>;
        msTransition?: import("csstype").Property.Transition<string & {}>;
        WebkitAnimation?: import("csstype").Property.Animation<string & {}>;
        WebkitBorderBefore?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitBorderImage?: import("csstype").Property.BorderImage;
        WebkitBorderRadius?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitColumnRule?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitColumns?: import("csstype").Property.BorderImageOutset<import("react").ReactText>;
        WebkitFlex?: import("csstype").Property.BorderImageOutset<import("react").ReactText>;
        WebkitFlexFlow?: import("csstype").Property.FlexFlow;
        WebkitMask?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitTextEmphasis?: import("csstype").Property.TextEmphasis;
        WebkitTextStroke?: import("csstype").Property.Width<import("react").ReactText>;
        WebkitTransition?: import("csstype").Property.Transition<string & {}>;
        azimuth?: import("csstype").Property.Azimuth;
        boxAlign?: import("csstype").Property.BoxAlign;
        boxDirection?: import("csstype").Property.BoxDirection;
        boxFlex?: import("csstype").Property.FlexGrow;
        boxFlexGroup?: import("csstype").Property.FlexGrow;
        boxLines?: import("csstype").Property.BoxLines;
        boxOrdinalGroup?: import("csstype").Property.FlexGrow;
        boxOrient?: import("csstype").Property.BoxOrient;
        boxPack?: import("csstype").Property.BoxPack;
        clip?: import("csstype").Property.AspectRatio;
        fontVariantAlternates?: import("csstype").Property.FontVariantAlternates;
        gridColumnGap?: import("csstype").Property.Width<import("react").ReactText>;
        gridGap?: import("csstype").Property.Width<import("react").ReactText>;
        gridRowGap?: import("csstype").Property.Width<import("react").ReactText>;
        imeMode?: import("csstype").Property.ImeMode;
        offsetBlock?: import("csstype").Property.Width<import("react").ReactText>;
        offsetBlockEnd?: import("csstype").Property.Width<import("react").ReactText>;
        offsetBlockStart?: import("csstype").Property.Width<import("react").ReactText>;
        offsetInline?: import("csstype").Property.Width<import("react").ReactText>;
        offsetInlineEnd?: import("csstype").Property.Width<import("react").ReactText>;
        offsetInlineStart?: import("csstype").Property.Width<import("react").ReactText>;
        scrollSnapCoordinate?: import("csstype").Property.Width<import("react").ReactText>;
        scrollSnapDestination?: import("csstype").Property.Width<import("react").ReactText>;
        scrollSnapPointsX?: import("csstype").Property.AnimationName;
        scrollSnapPointsY?: import("csstype").Property.AnimationName;
        scrollSnapTypeX?: import("csstype").Property.MsContentZoomSnapType;
        scrollSnapTypeY?: import("csstype").Property.MsContentZoomSnapType;
        scrollbarTrackColor?: import("csstype").Property.BackgroundColor;
        textCombineHorizontal?: import("csstype").Property.TextCombineUpright;
        KhtmlBoxAlign?: import("csstype").Property.BoxAlign;
        KhtmlBoxDirection?: import("csstype").Property.BoxDirection;
        KhtmlBoxFlex?: import("csstype").Property.FlexGrow;
        KhtmlBoxFlexGroup?: import("csstype").Property.FlexGrow;
        KhtmlBoxLines?: import("csstype").Property.BoxLines;
        KhtmlBoxOrdinalGroup?: import("csstype").Property.FlexGrow;
        KhtmlBoxOrient?: import("csstype").Property.BoxOrient;
        KhtmlBoxPack?: import("csstype").Property.BoxPack;
        KhtmlLineBreak?: import("csstype").Property.LineBreak;
        KhtmlOpacity?: import("csstype").Property.BorderImageSlice;
        KhtmlUserSelect?: import("csstype").Property.UserSelect;
        MozBackgroundClip?: import("csstype").Property.BackgroundClip;
        MozBackgroundInlinePolicy?: import("csstype").Property.BoxDecorationBreak;
        MozBackgroundOrigin?: import("csstype").Property.BackgroundClip;
        MozBackgroundSize?: import("csstype").Property.Width<import("react").ReactText>;
        MozBinding?: import("csstype").Property.AnimationName;
        MozBorderRadius?: import("csstype").Property.Width<import("react").ReactText>;
        MozBorderRadiusBottomleft?: import("csstype").Property.Width<import("react").ReactText>;
        MozBorderRadiusBottomright?: import("csstype").Property.Width<import("react").ReactText>;
        MozBorderRadiusTopleft?: import("csstype").Property.Width<import("react").ReactText>;
        MozBorderRadiusTopright?: import("csstype").Property.Width<import("react").ReactText>;
        MozBoxAlign?: import("csstype").Property.BoxAlign;
        MozBoxDirection?: import("csstype").Property.BoxDirection;
        MozBoxFlex?: import("csstype").Property.FlexGrow;
        MozBoxOrdinalGroup?: import("csstype").Property.FlexGrow;
        MozBoxOrient?: import("csstype").Property.BoxOrient;
        MozBoxPack?: import("csstype").Property.BoxPack;
        MozBoxShadow?: import("csstype").Property.AnimationName;
        MozFloatEdge?: import("csstype").Property.MozFloatEdge;
        MozForceBrokenImageIcon?: import("csstype").Property.FlexGrow;
        MozOpacity?: import("csstype").Property.BorderImageSlice;
        MozOutline?: import("csstype").Property.Width<import("react").ReactText>;
        MozOutlineColor?: import("csstype").Property.OutlineColor;
        MozOutlineRadius?: import("csstype").Property.Width<import("react").ReactText>;
        MozOutlineRadiusBottomleft?: import("csstype").Property.Width<import("react").ReactText>;
        MozOutlineRadiusBottomright?: import("csstype").Property.Width<import("react").ReactText>;
        MozOutlineRadiusTopleft?: import("csstype").Property.Width<import("react").ReactText>;
        MozOutlineRadiusTopright?: import("csstype").Property.Width<import("react").ReactText>;
        MozOutlineStyle?: import("csstype").Property.OutlineStyle;
        MozOutlineWidth?: import("react").ReactText;
        MozTextAlignLast?: import("csstype").Property.TextAlignLast;
        MozTextDecorationColor?: import("csstype").Property.BackgroundColor;
        MozTextDecorationLine?: import("csstype").Property.TextDecorationLine;
        MozTextDecorationStyle?: import("csstype").Property.TextDecorationStyle;
        MozUserInput?: import("csstype").Property.MozUserInput;
        msImeMode?: import("csstype").Property.ImeMode;
        msScrollbarTrackColor?: import("csstype").Property.BackgroundColor;
        OAnimation?: import("csstype").Property.Animation<string & {}>;
        OAnimationDelay?: import("csstype").Property.AnimationDelay<string & {}>;
        OAnimationDirection?: import("csstype").Property.AnimationDirection;
        OAnimationDuration?: import("csstype").Property.AnimationDelay<string & {}>;
        OAnimationFillMode?: import("csstype").Property.AnimationFillMode;
        OAnimationIterationCount?: import("csstype").Property.AnimationIterationCount;
        OAnimationName?: import("csstype").Property.AnimationName;
        OAnimationPlayState?: import("csstype").Property.AnimationPlayState;
        OAnimationTimingFunction?: import("csstype").Property.AnimationTimingFunction;
        OBackgroundSize?: import("csstype").Property.Width<import("react").ReactText>;
        OBorderImage?: import("csstype").Property.BorderImage;
        OTransform?: import("csstype").Property.AnimationName;
        OTransition?: import("csstype").Property.Transition<string & {}>;
        OTransitionDelay?: import("csstype").Property.AnimationDelay<string & {}>;
        OTransitionDuration?: import("csstype").Property.AnimationDelay<string & {}>;
        OTransitionProperty?: import("csstype").Property.TransitionProperty;
        OTransitionTimingFunction?: import("csstype").Property.AnimationTimingFunction;
        WebkitBoxAlign?: import("csstype").Property.BoxAlign;
        WebkitBoxDirection?: import("csstype").Property.BoxDirection;
        WebkitBoxFlex?: import("csstype").Property.FlexGrow;
        WebkitBoxFlexGroup?: import("csstype").Property.FlexGrow;
        WebkitBoxLines?: import("csstype").Property.BoxLines;
        WebkitBoxOrdinalGroup?: import("csstype").Property.FlexGrow;
        WebkitBoxOrient?: import("csstype").Property.BoxOrient;
        WebkitBoxPack?: import("csstype").Property.BoxPack;
        WebkitScrollSnapPointsX?: import("csstype").Property.AnimationName;
        WebkitScrollSnapPointsY?: import("csstype").Property.AnimationName;
        alignmentBaseline?: import("csstype").Property.AlignmentBaseline;
        baselineShift?: import("csstype").Property.Width<import("react").ReactText>;
        clipRule?: import("csstype").Property.ClipRule;
        colorInterpolation?: import("csstype").Property.ColorInterpolation;
        colorRendering?: import("csstype").Property.ColorRendering;
        dominantBaseline?: import("csstype").Property.DominantBaseline;
        fill?: import("csstype").Property.Fill;
        fillOpacity?: import("csstype").Property.FlexGrow;
        fillRule?: import("csstype").Property.ClipRule;
        floodColor?: import("csstype").Property.FloodColor;
        floodOpacity?: import("csstype").Property.FlexGrow;
        glyphOrientationVertical?: import("csstype").Property.GridColumnEnd;
        lightingColor?: import("csstype").Property.FloodColor;
        marker?: import("csstype").Property.AnimationName;
        markerEnd?: import("csstype").Property.AnimationName;
        markerMid?: import("csstype").Property.AnimationName;
        markerStart?: import("csstype").Property.AnimationName;
        shapeRendering?: import("csstype").Property.ShapeRendering;
        stopColor?: import("csstype").Property.FloodColor;
        stopOpacity?: import("csstype").Property.FlexGrow;
        stroke?: import("csstype").Property.Fill;
        strokeDasharray?: import("csstype").Property.BorderImageOutset<import("react").ReactText>;
        strokeDashoffset?: import("csstype").Property.Width<import("react").ReactText>;
        strokeLinecap?: import("csstype").Property.StrokeLinecap;
        strokeLinejoin?: import("csstype").Property.StrokeLinejoin;
        strokeMiterlimit?: import("csstype").Property.FlexGrow;
        strokeOpacity?: import("csstype").Property.FlexGrow;
        strokeWidth?: import("csstype").Property.Width<import("react").ReactText>;
        textAnchor?: import("csstype").Property.TextAnchor;
        vectorEffect?: import("csstype").Property.VectorEffect;
    };
    /** 模态框拖拽缩放大小样式数据 */
    get computedResizableContentStyles(): React.CSSProperties;
    /**** 模态框最大化时模态框内部body部分样式数据 */
    get computedMaximizeBodyStyle(): React.CSSProperties;
    _asyncResizableBodyStyle(options?: {
        modalType?: 'drawer' | 'modal' | 'fullscreen';
        placement?: 'left' | 'right' | 'top' | 'bottom';
    }): void;
    /**
     * 当执行拖拽时需要把坐标同步到缩放坐标数据
     * 在拖拽移动结束时触发
     */
    _asyncResizableData(): void;
    _updateEnabledResizable(resizable: ILegionsProModal['resizable']): void;
    /**
     * 重置模态框位置，回到居中状态
     *
     * @memberof ModalView
     */
    _resetDragLocationData(): void;
}
