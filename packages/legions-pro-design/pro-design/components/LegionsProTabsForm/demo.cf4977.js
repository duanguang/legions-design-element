(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{1254:function(n,s,a){n.exports={basic:a(1533)}},1276:function(n,s,a){"use strict";a.r(s);var t=a(0),p=a.n(t),o=a(1279),e=a(1280),c=a(1282),u=a(79),l=a.n(u);function i(n){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}s.default=function(n){var s=n=n||{},t=s.router,u=s.history;s.enableDevTools;t&&!u&&(u=Object(c.createHashHistory)());var r=n.initialState||{},k=Object(o.getInjector)();return k||(k=Object(o.setInjector)(u,r)),{_history:u,_stores:k,use:function(n){},start:function(n,s){l()("function"==typeof n,"componentClass should be function"),"string"==typeof s&&(s=document.querySelector(s),l()(s,"app.start: could not query selector: ".concat(s)));if(l()(!s||m(s),"app.start: container should be HTMLElement"),!s)return f(k,this,n);!function(n,s,t,o){a(10).render(p.a.createElement(f(s,t,o)),n)}(s,k,this,n)}};function m(n){return"object"===i(n)&&null!==n&&n.nodeType&&n.nodeName}function f(n,s,a){return function(t){var o=p.a.createElement(a,Object.assign({app:s},t));return p.a.createElement("div",null,p.a.createElement(e.Provider,{store:n},s._history?{element:o}:o))}}}},1300:function(n,s,a){"use strict";a.d(s,"a",(function(){return t})),a.d(s,"b",(function(){return p}));function t(n,s,a,t){var p,o=arguments.length,e=o<3?s:null===t?t=Object.getOwnPropertyDescriptor(s,a):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)e=Reflect.decorate(n,s,a,t);else for(var c=n.length-1;c>=0;c--)(p=n[c])&&(e=(o<3?p(e):o>3?p(s,a,e):p(s,a))||e);return o>3&&e&&Object.defineProperty(s,a,e),e}function p(n,s){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,s)}},1533:function(n,s,a){n.exports={content:{"zh-CN":[["p","页签表单基本使用"]],"en-US":[]},meta:{order:0,title:{"zh-CN":"页签表单基本使用","en-US":"页签表单基本使用"},filename:"src/components/LegionsProTabsForm/demo/basic.md",id:"src-components-LegionsProTabsForm-demo-basic"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> create <span class="token keyword">from</span> <span class="token string">\'../../../common/components/render.tsx\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> JsonProperty <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'json-mapper-object\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Row <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> bind<span class="token punctuation">,</span> observer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'legions/store-react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> LegionsProTable<span class="token punctuation">,</span>LegionsProTabsForm<span class="token punctuation">,</span>LegionsProForm<span class="token punctuation">,</span> LegionsProPageContainer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'legions-pro-design\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>FormFields<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'../demoTest/model\'</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 具体使用请看底部</span>\n\n\n<span class="token keyword">interface</span> <span class="token class-name">IProps</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token keyword">class</span> <span class="token class-name">LegionsProTabsFormDemo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span><span class="token operator">&lt;</span>IProps<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    formRef<span class="token punctuation">:</span> InstanceTabsForm<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FormFields</span><span class="token punctuation">></span></span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span>props<span class="token punctuation">:</span> IProps<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token function">createConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> rules <span class="token operator">=</span> FormFields<span class="token punctuation">.</span>initFormRules<span class="token operator">&lt;</span>FormFields<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token operator">></span><span class="token punctuation">(</span>FormFields<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n        <span class="token keyword">const</span> formUtils <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LegionsProForm<span class="token punctuation">.</span>ProFormUtils</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        formUtils<span class="token punctuation">.</span><span class="token function">renderInputConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            iAntdProps<span class="token punctuation">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'text\'</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            iFormProps<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                <span class="token operator">...</span>formUtils<span class="token punctuation">.</span><span class="token function">createLayout</span><span class="token punctuation">(</span><span class="token string">\'文本框\'</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                maxLength<span class="token punctuation">:</span> <span class="token string">\'50\'</span><span class="token punctuation">,</span>\n                type<span class="token punctuation">:</span> <span class="token string">\'text\'</span><span class="token punctuation">,</span>\n                <span class="token comment" spellcheck="true">/* visible:false, */</span>\n            <span class="token comment" spellcheck="true">/* disabled: true, */</span>\n                onChange<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>formRef<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            rules<span class="token punctuation">:</span> rules<span class="token punctuation">.</span>text\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        formUtils<span class="token punctuation">.</span><span class="token function">renderInputConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            iAntdProps<span class="token punctuation">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'textarea\'</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            iFormProps<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                <span class="token operator">...</span>formUtils<span class="token punctuation">.</span><span class="token function">createLayout</span><span class="token punctuation">(</span><span class="token string">\'多行文本\'</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                maxLength<span class="token punctuation">:</span> <span class="token string">\'50\'</span><span class="token punctuation">,</span>\n                type<span class="token punctuation">:</span> <span class="token string">\'textarea\'</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            rules<span class="token punctuation">:</span> rules<span class="token punctuation">.</span>textarea\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        formUtils<span class="token punctuation">.</span><span class="token function">renderInputConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            iAntdProps<span class="token punctuation">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'password\'</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            iFormProps<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                <span class="token operator">...</span>formUtils<span class="token punctuation">.</span><span class="token function">createLayout</span><span class="token punctuation">(</span><span class="token string">\'密码\'</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                maxLength<span class="token punctuation">:</span> <span class="token string">\'50\'</span><span class="token punctuation">,</span>\n                type<span class="token punctuation">:</span> <span class="token string">\'password\'</span><span class="token punctuation">,</span>\n\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            rules<span class="token punctuation">:</span> rules<span class="token punctuation">.</span>password\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        formUtils<span class="token punctuation">.</span><span class="token function">renderInputConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            iAntdProps<span class="token punctuation">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'numberText\'</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            iFormProps<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                <span class="token operator">...</span>formUtils<span class="token punctuation">.</span><span class="token function">createLayout</span><span class="token punctuation">(</span><span class="token string">\'数字文本\'</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                maxLength<span class="token punctuation">:</span> <span class="token string">\'50\'</span><span class="token punctuation">,</span>\n                type<span class="token punctuation">:</span> <span class="token string">\'number\'</span><span class="token punctuation">,</span>\n\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            rules<span class="token punctuation">:</span> rules<span class="token punctuation">.</span>numberText\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        formUtils<span class="token punctuation">.</span><span class="token function">renderInputNumberConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            iAntdProps<span class="token punctuation">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'numbers\'</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            iFormProps<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                <span class="token operator">...</span>formUtils<span class="token punctuation">.</span><span class="token function">createLayout</span><span class="token punctuation">(</span><span class="token string">\'数字\'</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            rules<span class="token punctuation">:</span> rules<span class="token punctuation">.</span>numbers\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        formUtils<span class="token punctuation">.</span><span class="token function">renderSelectConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            iAntdProps<span class="token punctuation">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'selectedItem\'</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token string">\'请选择\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            iFormProps<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                <span class="token operator">...</span>formUtils<span class="token punctuation">.</span><span class="token function">createLayout</span><span class="token punctuation">(</span><span class="token string">\'普通下拉\'</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span> <span class="token operator">*</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                options<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n                    value<span class="token punctuation">:</span> <span class="token string">\'订单\'</span><span class="token punctuation">,</span>\n                    label<span class="token punctuation">:</span> <span class="token string">\'订单1\'</span><span class="token punctuation">,</span>\n                    key<span class="token punctuation">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n                    keyValue<span class="token punctuation">:</span> <span class="token string">\'222\'</span><span class="token punctuation">,</span>\n                    disabled<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token punctuation">{</span>\n                    value<span class="token punctuation">:</span> <span class="token string">\'工单\'</span><span class="token punctuation">,</span>\n                    label<span class="token punctuation">:</span> <span class="token string">\'工单1\'</span><span class="token punctuation">,</span>\n                    key<span class="token punctuation">:</span> <span class="token string">\'2\'</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                size<span class="token punctuation">:</span> <span class="token string">\'default\'</span><span class="token punctuation">,</span>\n                labelInValue<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                onFocus<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            rules<span class="token punctuation">:</span> rules<span class="token punctuation">.</span>selectedItem<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        <span class="token keyword">return</span> <span class="token punctuation">[</span>\n            formUtils<span class="token punctuation">.</span><span class="token function">getFormConfig</span><span class="token punctuation">(</span><span class="token string">\'text\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            formUtils<span class="token punctuation">.</span><span class="token function">getFormConfig</span><span class="token punctuation">(</span><span class="token string">\'textarea\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            formUtils<span class="token punctuation">.</span><span class="token function">getFormConfig</span><span class="token punctuation">(</span><span class="token string">\'password\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            formUtils<span class="token punctuation">.</span><span class="token function">getFormConfig</span><span class="token punctuation">(</span><span class="token string">\'numberText\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            formUtils<span class="token punctuation">.</span><span class="token function">getFormConfig</span><span class="token punctuation">(</span><span class="token string">\'numbers\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            formUtils<span class="token punctuation">.</span><span class="token function">getFormConfig</span><span class="token punctuation">(</span><span class="token string">\'selectedItem\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span>\n    <span class="token punctuation">}</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Row</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Row</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginBottom<span class="token punctuation">:</span> <span class="token string">\'10px\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span> \n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>  <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">htmlType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n                        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>formRef<span class="token punctuation">.</span>methods<span class="token punctuation">.</span><span class="token function">validateFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                       \n              <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>检验<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginLeft<span class="token punctuation">:</span> <span class="token string">\'10px\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">htmlType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n                    <span class="token keyword">this</span><span class="token punctuation">.</span>formRef<span class="token punctuation">.</span>methods<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n                        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n                    \n                <span class="token punctuation">}</span></span><span class="token attr-name">}</span><span class="token punctuation">></span></span>提交<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Row</span><span class="token punctuation">></span></span>\n        <span class="token operator">&lt;</span>LegionsProTabsForm\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FormFields</span><span class="token punctuation">></span></span>\n            InputDataModel<span class="token operator">=</span><span class="token punctuation">{</span>FormFields<span class="token punctuation">}</span>\n            controls<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n            tabPaneProps<span class="token operator">=</span><span class="token punctuation">{</span>\n                <span class="token punctuation">{</span>\n                    tab<span class="token punctuation">:</span> <span class="token punctuation">(</span>key<span class="token punctuation">,</span>index<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n                        <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>销售订单<span class="token punctuation">{</span>index<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span>\n            onReady<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>formref<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>formRef <span class="token operator">=</span> formref<span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        <span class="token operator">></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LegionsProTabsForm</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Row</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">const</span> root <span class="token operator">=</span> props <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LegionsProTabsFormDemo</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LegionsProTabsFormDemo</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>React<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>app<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> create <span class="token keyword">from</span> <span class="token string">\'../../../common/components/render.tsx\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> JsonProperty <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'json-mapper-object\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Row <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> bind<span class="token punctuation">,</span> observer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'legions/store-react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> LegionsProTable<span class="token punctuation">,</span>LegionsProTabsForm<span class="token punctuation">,</span>LegionsProForm<span class="token punctuation">,</span> LegionsProPageContainer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'legions-pro-design\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>FormFields<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'../demoTest/model\'</span><span class="token punctuation">;</span> <span class="token comment">// 具体使用请看底部</span>\n\n\n<span class="token keyword">interface</span> <span class="token class-name">IProps</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token keyword">class</span> <span class="token class-name">LegionsProTabsFormDemo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span><span class="token operator">&lt;</span>IProps<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    formRef<span class="token operator">:</span> InstanceTabsForm<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormFields</span></span><span class="token punctuation">></span></span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token operator">:</span> IProps</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token function">createConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> rules <span class="token operator">=</span> FormFields<span class="token punctuation">.</span>initFormRules<span class="token operator">&lt;</span>FormFields<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token operator">></span><span class="token punctuation">(</span>FormFields<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n        <span class="token keyword">const</span> formUtils <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LegionsProForm<span class="token punctuation">.</span>ProFormUtils</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        formUtils<span class="token punctuation">.</span><span class="token function">renderInputConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            iAntdProps<span class="token operator">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'text\'</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            iFormProps<span class="token operator">:</span> <span class="token punctuation">{</span>\n                <span class="token operator">...</span>formUtils<span class="token punctuation">.</span><span class="token function">createLayout</span><span class="token punctuation">(</span><span class="token string">\'文本框\'</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                maxLength<span class="token operator">:</span> <span class="token string">\'50\'</span><span class="token punctuation">,</span>\n                type<span class="token operator">:</span> <span class="token string">\'text\'</span><span class="token punctuation">,</span>\n                <span class="token comment">/* visible:false, */</span>\n            <span class="token comment">/* disabled: true, */</span>\n                <span class="token function-variable function">onChange</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>formRef<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            rules<span class="token operator">:</span> rules<span class="token punctuation">.</span>text\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        formUtils<span class="token punctuation">.</span><span class="token function">renderInputConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            iAntdProps<span class="token operator">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'textarea\'</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            iFormProps<span class="token operator">:</span> <span class="token punctuation">{</span>\n                <span class="token operator">...</span>formUtils<span class="token punctuation">.</span><span class="token function">createLayout</span><span class="token punctuation">(</span><span class="token string">\'多行文本\'</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                maxLength<span class="token operator">:</span> <span class="token string">\'50\'</span><span class="token punctuation">,</span>\n                type<span class="token operator">:</span> <span class="token string">\'textarea\'</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            rules<span class="token operator">:</span> rules<span class="token punctuation">.</span>textarea\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        formUtils<span class="token punctuation">.</span><span class="token function">renderInputConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            iAntdProps<span class="token operator">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'password\'</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            iFormProps<span class="token operator">:</span> <span class="token punctuation">{</span>\n                <span class="token operator">...</span>formUtils<span class="token punctuation">.</span><span class="token function">createLayout</span><span class="token punctuation">(</span><span class="token string">\'密码\'</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                maxLength<span class="token operator">:</span> <span class="token string">\'50\'</span><span class="token punctuation">,</span>\n                type<span class="token operator">:</span> <span class="token string">\'password\'</span><span class="token punctuation">,</span>\n\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            rules<span class="token operator">:</span> rules<span class="token punctuation">.</span>password\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        formUtils<span class="token punctuation">.</span><span class="token function">renderInputConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            iAntdProps<span class="token operator">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'numberText\'</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            iFormProps<span class="token operator">:</span> <span class="token punctuation">{</span>\n                <span class="token operator">...</span>formUtils<span class="token punctuation">.</span><span class="token function">createLayout</span><span class="token punctuation">(</span><span class="token string">\'数字文本\'</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                maxLength<span class="token operator">:</span> <span class="token string">\'50\'</span><span class="token punctuation">,</span>\n                type<span class="token operator">:</span> <span class="token string">\'number\'</span><span class="token punctuation">,</span>\n\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            rules<span class="token operator">:</span> rules<span class="token punctuation">.</span>numberText\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        formUtils<span class="token punctuation">.</span><span class="token function">renderInputNumberConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            iAntdProps<span class="token operator">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'numbers\'</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            iFormProps<span class="token operator">:</span> <span class="token punctuation">{</span>\n                <span class="token operator">...</span>formUtils<span class="token punctuation">.</span><span class="token function">createLayout</span><span class="token punctuation">(</span><span class="token string">\'数字\'</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            rules<span class="token operator">:</span> rules<span class="token punctuation">.</span>numbers\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        formUtils<span class="token punctuation">.</span><span class="token function">renderSelectConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            iAntdProps<span class="token operator">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'selectedItem\'</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token string">\'请选择\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            iFormProps<span class="token operator">:</span> <span class="token punctuation">{</span>\n                <span class="token operator">...</span>formUtils<span class="token punctuation">.</span><span class="token function">createLayout</span><span class="token punctuation">(</span><span class="token string">\'普通下拉\'</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span> <span class="token operator">*</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                options<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n                    value<span class="token operator">:</span> <span class="token string">\'订单\'</span><span class="token punctuation">,</span>\n                    label<span class="token operator">:</span> <span class="token string">\'订单1\'</span><span class="token punctuation">,</span>\n                    key<span class="token operator">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n                    keyValue<span class="token operator">:</span> <span class="token string">\'222\'</span><span class="token punctuation">,</span>\n                    disabled<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token punctuation">{</span>\n                    value<span class="token operator">:</span> <span class="token string">\'工单\'</span><span class="token punctuation">,</span>\n                    label<span class="token operator">:</span> <span class="token string">\'工单1\'</span><span class="token punctuation">,</span>\n                    key<span class="token operator">:</span> <span class="token string">\'2\'</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                size<span class="token operator">:</span> <span class="token string">\'default\'</span><span class="token punctuation">,</span>\n                labelInValue<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                <span class="token function-variable function">onFocus</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            rules<span class="token operator">:</span> rules<span class="token punctuation">.</span>selectedItem<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        <span class="token keyword">return</span> <span class="token punctuation">[</span>\n            formUtils<span class="token punctuation">.</span><span class="token function">getFormConfig</span><span class="token punctuation">(</span><span class="token string">\'text\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            formUtils<span class="token punctuation">.</span><span class="token function">getFormConfig</span><span class="token punctuation">(</span><span class="token string">\'textarea\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            formUtils<span class="token punctuation">.</span><span class="token function">getFormConfig</span><span class="token punctuation">(</span><span class="token string">\'password\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            formUtils<span class="token punctuation">.</span><span class="token function">getFormConfig</span><span class="token punctuation">(</span><span class="token string">\'numberText\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            formUtils<span class="token punctuation">.</span><span class="token function">getFormConfig</span><span class="token punctuation">(</span><span class="token string">\'numbers\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            formUtils<span class="token punctuation">.</span><span class="token function">getFormConfig</span><span class="token punctuation">(</span><span class="token string">\'selectedItem\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span>\n    <span class="token punctuation">}</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Row</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Row</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginBottom<span class="token operator">:</span> <span class="token string">\'10px\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span> \n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span>  <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">htmlType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>formRef<span class="token punctuation">.</span>methods<span class="token punctuation">.</span><span class="token function">validateFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                       \n              <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>检验<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginLeft<span class="token operator">:</span> <span class="token string">\'10px\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">htmlType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                    <span class="token keyword">this</span><span class="token punctuation">.</span>formRef<span class="token punctuation">.</span>methods<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">values</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n                    \n                <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>提交<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Row</span></span><span class="token punctuation">></span></span>\n        <span class="token operator">&lt;</span>LegionsProTabsForm\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormFields</span></span><span class="token punctuation">></span></span>\n            InputDataModel<span class="token operator">=</span><span class="token punctuation">{</span>FormFields<span class="token punctuation">}</span>\n            controls<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n            tabPaneProps<span class="token operator">=</span><span class="token punctuation">{</span>\n                <span class="token punctuation">{</span>\n                    <span class="token function-variable function">tab</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span>index</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                        <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>销售订单<span class="token punctuation">{</span>index<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span>\n            onReady<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">formref</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>formRef <span class="token operator">=</span> formref<span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        <span class="token operator">></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">LegionsProTabsForm</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Row</span></span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">const</span> <span class="token function-variable function">root</span> <span class="token operator">=</span> <span class="token parameter">props</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">LegionsProTabsFormDemo</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">LegionsProTabsFormDemo</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>React<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>app<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){a(0),a(10);function n(s){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(s)}var s=c(a(1276)),t=a(13),p=c(a(0)),o=a(1278),e=a(1534);function c(n){return n&&n.__esModule?n:{default:n}}function u(n,s){var a=Object.keys(n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(n);s&&(t=t.filter((function(s){return Object.getOwnPropertyDescriptor(n,s).enumerable}))),a.push.apply(a,t)}return a}function l(n){for(var s=1;s<arguments.length;s++){var a=null!=arguments[s]?arguments[s]:{};s%2?u(Object(a),!0).forEach((function(s){i(n,s,a[s])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(a)):u(Object(a)).forEach((function(s){Object.defineProperty(n,s,Object.getOwnPropertyDescriptor(a,s))}))}return n}function i(n,s,a){return s in n?Object.defineProperty(n,s,{value:a,enumerable:!0,configurable:!0,writable:!0}):n[s]=a,n}function r(n,s){for(var a=0;a<s.length;a++){var t=s[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}function k(n,s){return(k=Object.setPrototypeOf||function(n,s){return n.__proto__=s,n})(n,s)}function m(n){var s=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(n){return!1}}();return function(){var a,t=d(n);if(s){var p=d(this).constructor;a=Reflect.construct(t,arguments,p)}else a=t.apply(this,arguments);return f(this,a)}}function f(s,a){return!a||"object"!==n(a)&&"function"!=typeof a?function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(s):a}function d(n){return(d=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}var g=function(n){!function(n,s){if("function"!=typeof s&&null!==s)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(s&&s.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),s&&k(n,s)}(i,n);var s,a,c,u=m(i);function i(n){return function(n,s){if(!(n instanceof s))throw new TypeError("Cannot call a class as a function")}(this,i),u.call(this,n)}return s=i,(a=[{key:"createConfig",value:function(){var n=this,s=e.FormFields.initFormRules(e.FormFields,{}),a=new o.LegionsProForm.ProFormUtils;return a.renderInputConfig({iAntdProps:a.createAntdProps("text",null),iFormProps:l(l({},a.createLayout("文本框",5,7)),{},{maxLength:"50",type:"text",onChange:function(){console.log(n.formRef)}}),rules:s.text}),a.renderInputConfig({iAntdProps:a.createAntdProps("textarea",null),iFormProps:l(l({},a.createLayout("多行文本",5,7)),{},{maxLength:"50",type:"textarea"}),rules:s.textarea}),a.renderInputConfig({iAntdProps:a.createAntdProps("password",null),iFormProps:l(l({},a.createLayout("密码",5,7)),{},{maxLength:"50",type:"password"}),rules:s.password}),a.renderInputConfig({iAntdProps:a.createAntdProps("numberText",null),iFormProps:l(l({},a.createLayout("数字文本",5,7)),{},{maxLength:"50",type:"number"}),rules:s.numberText}),a.renderInputNumberConfig({iAntdProps:a.createAntdProps("numbers",null),iFormProps:l({},a.createLayout("数字",5,7)),rules:s.numbers}),a.renderSelectConfig({iAntdProps:a.createAntdProps("selectedItem",null,"请选择"),iFormProps:l(l({},a.createLayout("普通下拉",5,7)),{},{options:[{value:"订单",label:"订单1",key:"1",keyValue:"222",disabled:!0},{value:"工单",label:"工单1",key:"2"}],size:"default",labelInValue:!0,onFocus:function(){}}),rules:s.selectedItem}),[a.getFormConfig("text"),a.getFormConfig("textarea"),a.getFormConfig("password"),a.getFormConfig("numberText"),a.getFormConfig("numbers"),a.getFormConfig("selectedItem")]}},{key:"render",value:function(){var n=this;return p.default.createElement(t.Row,null,p.default.createElement(t.Row,{style:{marginBottom:"10px"}},p.default.createElement(t.Button,{type:"primary",htmlType:"submit",onClick:function(){console.log(n.formRef.methods.validateFields())}},"检验"),p.default.createElement(t.Button,{style:{marginLeft:"10px"},type:"primary",htmlType:"submit",onClick:function(){n.formRef.methods.submit((function(n){console.log(n)}))}},"提交")),p.default.createElement(o.LegionsProTabsForm,{InputDataModel:e.FormFields,controls:this.createConfig(),tabPaneProps:{tab:function(n,s){return p.default.createElement("div",null,"销售订单",s+1)}},onReady:function(s){n.formRef=s}}))}}])&&r(s.prototype,a),c&&r(s,c),i}(p.default.Component),y=(0,s.default)();return p.default.createElement(y.start((function(n){return p.default.createElement(g,null)})))}}},1534:function(n,s,a){"use strict";a.r(s),a.d(s,"FormFields",(function(){return O}));var t,p,o,e,c,u,l,i,r,k,m,f,d=a(1300),g=a(1278),y=a(1310),b=a(1293);function F(n){return(F="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function w(n,s){return(w=Object.setPrototypeOf||function(n,s){return n.__proto__=s,n})(n,s)}function P(n){var s=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(n){return!1}}();return function(){var a,t=j(n);if(s){var p=j(this).constructor;a=Reflect.construct(t,arguments,p)}else a=t.apply(this,arguments);return v(this,a)}}function v(n,s){return!s||"object"!==F(s)&&"function"!=typeof s?h(n):s}function h(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}function j(n){return(j=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}var O=function(n){!function(n,s){if("function"!=typeof s&&null!==s)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(s&&s.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),s&&w(n,s)}(a,n);var s=P(a);function a(n){var t;return function(n,s){if(!(n instanceof s))throw new TypeError("Cannot call a class as a function")}(this,a),(t=s.call(this)).text={value:""},t.textarea={value:""},t.password={value:""},t.numberText={value:""},t.numbers={value:void 0},t.selectedItem={value:void 0},t.selectedItemRemote={value:void 0},t.selectedItemMultiple={value:void 0},t.upload={value:null,submitBeforeTransform:function(n){return n?n.file.uid:""}},t.customRenderInput1={value:""},t.customRender={value:{currency:"rmb",number:0},submitBeforeTransform:function(n,s){var a=n;return a.currency=s.priceType.value,a.number=parseInt(s.price.value,0),a}},t.priceType={value:"",ignore:!0},t.price={value:"",ignore:!0},a.initMapPropsToFields.call(h(t),n),t}return a}(g.LegionsProForm.ProFormFields);Object(d.a)([Object(y.FormRuleProperty)({required:!0,name:"text",error:"文本框",desc:"文本框",type:"string"}),Object(d.b)("design:type","function"==typeof(t=void 0!==b.IBaseFormFields&&b.IBaseFormFields)?t:Object)],O.prototype,"text",void 0),Object(d.a)([Object(y.FormRuleProperty)({required:!0,name:"textarea",error:"多行文本",desc:"多行文本",type:"string"}),Object(d.b)("design:type","function"==typeof(p=void 0!==b.IBaseFormFields&&b.IBaseFormFields)?p:Object)],O.prototype,"textarea",void 0),Object(d.a)([Object(y.FormRuleProperty)({required:!0,name:"password",error:"密码文本",desc:"密码文本",type:"string"}),Object(d.b)("design:type","function"==typeof(o=void 0!==b.IBaseFormFields&&b.IBaseFormFields)?o:Object)],O.prototype,"password",void 0),Object(d.a)([Object(y.FormRuleProperty)({required:!0,name:"numberText",error:"数字文本",desc:"数字文本",type:"string"}),Object(d.b)("design:type","function"==typeof(e=void 0!==b.IBaseFormFields&&b.IBaseFormFields)?e:Object)],O.prototype,"numberText",void 0),Object(d.a)([Object(y.FormRuleProperty)({required:!0,name:"numbers",error:"数字",desc:"数字",type:"number"}),Object(d.b)("design:type","function"==typeof(c=void 0!==b.IBaseFormFields&&b.IBaseFormFields)?c:Object)],O.prototype,"numbers",void 0),Object(d.a)([Object(y.FormRuleProperty)({required:!0,name:"selectedItem",error:"普通下拉",desc:"普通下拉",type:"object"}),Object(d.b)("design:type","function"==typeof(u=void 0!==b.IBaseFormFields&&b.IBaseFormFields)?u:Object)],O.prototype,"selectedItem",void 0),Object(d.a)([Object(y.FormRuleProperty)({required:!0,name:"selectedItemRemote",error:"远程下拉",desc:"远程下拉",type:"object"}),Object(d.b)("design:type","function"==typeof(l=void 0!==b.IBaseFormFields&&b.IBaseFormFields)?l:Object)],O.prototype,"selectedItemRemote",void 0),Object(d.a)([Object(y.FormRuleProperty)({required:!0,name:"selectedItemMultiple",error:"下拉多选",desc:"下拉多选",type:"array"}),Object(d.b)("design:type","function"==typeof(i=void 0!==b.IBaseFormFields&&b.IBaseFormFields)?i:Object)],O.prototype,"selectedItemMultiple",void 0),Object(d.a)([Object(y.FormRuleProperty)({required:!0,name:"upload",error:"上传文件错误",desc:"上传文件",type:"object"}),Object(d.b)("design:type","function"==typeof(r=void 0!==b.IBaseFormFields&&b.IBaseFormFields)?r:Object)],O.prototype,"upload",void 0),Object(d.a)([Object(y.FormRuleProperty)({required:!0,name:"customRenderInput1",error:"自定义组件信息错误",desc:"自定义组件",type:"string",regex:/^[1-9]\d*$/}),Object(d.b)("design:type","function"==typeof(k=void 0!==b.IBaseFormFields&&b.IBaseFormFields)?k:Object)],O.prototype,"customRenderInput1",void 0),Object(d.a)([Object(y.FormRuleProperty)({required:!0,name:"priceType",error:"价格类型错误",desc:"价格类型",type:"string"}),Object(d.b)("design:type","function"==typeof(m=void 0!==b.IBaseFormFields&&b.IBaseFormFields)?m:Object)],O.prototype,"priceType",void 0),Object(d.a)([Object(y.FormRuleProperty)({required:!0,name:"price",error:"价格只能是数字",desc:"价格",type:"string",validator:function(n,s,a){/^[1-9]\d*$/.test(n.toString())?a():a(new Error("价格请输入数字"))}}),Object(d.b)("design:type","function"==typeof(f=void 0!==b.IBaseFormFields&&b.IBaseFormFields)?f:Object)],O.prototype,"price",void 0)}}]);