(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{1258:function(n,s,a){n.exports={basic:a(1536)}},1276:function(n,s,a){"use strict";a.r(s);var t=a(0),p=a.n(t),o=a(1279),e=a(1280),c=a(1282),u=a(79),r=a.n(u);function l(n){return(l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}s.default=function(n){var s=n=n||{},t=s.router,u=s.history;s.enableDevTools;t&&!u&&(u=Object(c.createHashHistory)());var i=n.initialState||{},k=Object(o.getInjector)();return k||(k=Object(o.setInjector)(u,i)),{_history:u,_stores:k,use:function(n){},start:function(n,s){r()("function"==typeof n,"componentClass should be function"),"string"==typeof s&&(s=document.querySelector(s),r()(s,"app.start: could not query selector: ".concat(s)));if(r()(!s||d(s),"app.start: container should be HTMLElement"),!s)return f(k,this,n);!function(n,s,t,o){a(10).render(p.a.createElement(f(s,t,o)),n)}(s,k,this,n)}};function d(n){return"object"===l(n)&&null!==n&&n.nodeType&&n.nodeName}function f(n,s,a){return function(t){var o=p.a.createElement(a,Object.assign({app:s},t));return p.a.createElement("div",null,p.a.createElement(e.Provider,{store:n},s._history?{element:o}:o))}}}},1536:function(n,s,a){n.exports={content:{"zh-CN":[["p","一个简单列表绑定数据使用"]],"en-US":[]},meta:{order:0,title:{"zh-CN":"简单列表","en-US":"简单列表"},filename:"src/components/LegionsProUpload/demo/basic.md",id:"src-components-LegionsProUpload-demo-basic"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> create <span class="token keyword">from</span> <span class="token string">\'../../../common/components/render.tsx\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> JsonProperty <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'json-mapper-object\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Row <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> bind<span class="token punctuation">,</span> observer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'legions/store-react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> LegionsProTable<span class="token punctuation">,</span> LegionsProPageContainer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'legions-pro-design\'</span><span class="token punctuation">;</span>\n\n\n\n <span class="token keyword">class</span> <span class="token class-name">ResponseVModelNameDataEntity</span> <span class="token punctuation">{</span>\n  @<span class="token function">JsonProperty</span><span class="token punctuation">(</span><span class="token string">\'key\'</span><span class="token punctuation">)</span>\n  key <span class="token operator">=</span> <span class="token keyword">void</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  @<span class="token function">JsonProperty</span><span class="token punctuation">(</span><span class="token string">\'name\'</span><span class="token punctuation">)</span>\n  name <span class="token operator">=</span> <span class="token keyword">void</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  @<span class="token function">JsonProperty</span><span class="token punctuation">(</span><span class="token string">\'age\'</span><span class="token punctuation">)</span>\n  age <span class="token operator">=</span> <span class="token keyword">void</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  @<span class="token function">JsonProperty</span><span class="token punctuation">(</span><span class="token string">\'address\'</span><span class="token punctuation">)</span>\n  address <span class="token operator">=</span> <span class="token keyword">void</span> <span class="token number">0</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">interface</span> <span class="token class-name">IProps</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token keyword">class</span> <span class="token class-name">ProTableDemo</span> <span class="token keyword">extends</span> <span class="token class-name">LegionsProTable<span class="token punctuation">.</span>ProTableBaseClass</span><span class="token operator">&lt;</span>IProps<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token operator">></span> <span class="token punctuation">{</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span>props<span class="token punctuation">:</span> IProps<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">pushColumns</span><span class="token punctuation">(</span><span class="token string">\'name\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n      title<span class="token punctuation">:</span> <span class="token string">\'姓名\'</span><span class="token punctuation">,</span>\n      width<span class="token punctuation">:</span> <span class="token string">\'100px\'</span><span class="token punctuation">,</span>\n      sorter<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">pushColumns</span><span class="token punctuation">(</span><span class="token string">\'age\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n      title<span class="token punctuation">:</span> <span class="token string">\'年龄\'</span><span class="token punctuation">,</span>\n      width<span class="token punctuation">:</span> <span class="token string">\'100px\'</span><span class="token punctuation">,</span>\n      sorter<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">pushColumns</span><span class="token punctuation">(</span><span class="token string">\'address\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n      title<span class="token punctuation">:</span> <span class="token string">\'住址\'</span><span class="token punctuation">,</span>\n      width<span class="token punctuation">:</span> <span class="token string">\'100px\'</span><span class="token punctuation">,</span>\n      sorter<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token operator">&lt;</span>LegionsProTable\n      <span class="token operator">&lt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>ResponseVModelNameDataEntity<span class="token operator">></span>\n        onReady<span class="token operator">=</span><span class="token punctuation">{</span>value <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n          <span class="token keyword">this</span><span class="token punctuation">.</span>tableRef <span class="token operator">=</span> value<span class="token punctuation">;</span>\n          <span class="token keyword">this</span><span class="token punctuation">.</span>tableRef<span class="token punctuation">.</span>viewModel<span class="token punctuation">.</span>isAdaptiveHeight <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n\n          <span class="token keyword">this</span><span class="token punctuation">.</span>tableRef<span class="token punctuation">.</span>viewModel<span class="token punctuation">.</span>bodyExternalContainer<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token string">\'ButtonAction\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n            height<span class="token punctuation">:</span> <span class="token number">48</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n          <span class="token keyword">this</span><span class="token punctuation">.</span>tableRef<span class="token punctuation">.</span>viewModel<span class="token punctuation">.</span>bodyExternalContainer<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token string">\'other\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n            height<span class="token punctuation">:</span> <span class="token number">70</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        autoQuery<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            params<span class="token punctuation">:</span> <span class="token punctuation">(</span>pageIndex<span class="token punctuation">,</span>pageSize<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n              <span class="token keyword">return</span> <span class="token punctuation">{</span>\n                size<span class="token punctuation">:</span> pageSize<span class="token punctuation">,</span>\n                current<span class="token punctuation">:</span> pageIndex<span class="token punctuation">,</span>\n                <span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>queryPrams<span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            transform<span class="token punctuation">:</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n              <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>value<span class="token punctuation">.</span>isPending <span class="token operator">&amp;&amp;</span> value<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">const</span> <span class="token punctuation">{</span> result<span class="token punctuation">,</span>current<span class="token punctuation">,</span>pageSize<span class="token punctuation">,</span>total <span class="token punctuation">}</span> <span class="token operator">=</span> value<span class="token punctuation">.</span>value<span class="token punctuation">;</span>\n                <span class="token keyword">return</span> <span class="token punctuation">{</span>\n                  data<span class="token punctuation">:</span> result<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span>index<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n                    item<span class="token punctuation">[</span><span class="token string">\'key\'</span><span class="token punctuation">]</span> <span class="token operator">=</span> index <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token punctuation">(</span>current <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> pageSize<span class="token punctuation">;</span>\n                    <span class="token keyword">return</span> item<span class="token punctuation">;</span>\n                  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                  total<span class="token punctuation">:</span> total<span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">;</span>\n              <span class="token punctuation">}</span>\n              <span class="token keyword">return</span> <span class="token punctuation">{</span>\n                total<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n                data<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            method<span class="token punctuation">:</span> <span class="token string">\'get\'</span><span class="token punctuation">,</span>\n            ApiUrl<span class="token punctuation">:</span> <span class="token string">\'http://192.168.200.171:3001/mock/115/getUsers\'</span><span class="token punctuation">,</span>\n            mappingEntity<span class="token punctuation">:</span> <span class="token punctuation">(</span>that<span class="token punctuation">,</span>res<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n                that<span class="token punctuation">.</span>result <span class="token operator">=</span> that<span class="token punctuation">.</span><span class="token function">transformRows</span><span class="token punctuation">(</span>res<span class="token punctuation">[</span><span class="token string">\'data\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>ResponseVModelNameDataEntity<span class="token punctuation">)</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        columns<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>columnsData<span class="token punctuation">}</span>\n        uniqueUid<span class="token operator">=</span><span class="token string">"mock/115/getUsers"</span>\n        uniqueKey<span class="token operator">=</span><span class="token string">"name"</span>\n        isOpenRowChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span><span class="token operator">></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LegionsProTable</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">const</span> root <span class="token operator">=</span> props <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ProTableDemo</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ProTableDemo</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>React<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>app<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> create <span class="token keyword">from</span> <span class="token string">\'../../../common/components/render.tsx\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> JsonProperty <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'json-mapper-object\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Row <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> bind<span class="token punctuation">,</span> observer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'legions/store-react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> LegionsProTable<span class="token punctuation">,</span> LegionsProPageContainer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'legions-pro-design\'</span><span class="token punctuation">;</span>\n\n\n\n <span class="token keyword">class</span> <span class="token class-name">ResponseVModelNameDataEntity</span> <span class="token punctuation">{</span>\n  @<span class="token function">JsonProperty</span><span class="token punctuation">(</span><span class="token string">\'key\'</span><span class="token punctuation">)</span>\n  key <span class="token operator">=</span> <span class="token keyword">void</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  @<span class="token function">JsonProperty</span><span class="token punctuation">(</span><span class="token string">\'name\'</span><span class="token punctuation">)</span>\n  name <span class="token operator">=</span> <span class="token keyword">void</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  @<span class="token function">JsonProperty</span><span class="token punctuation">(</span><span class="token string">\'age\'</span><span class="token punctuation">)</span>\n  age <span class="token operator">=</span> <span class="token keyword">void</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  @<span class="token function">JsonProperty</span><span class="token punctuation">(</span><span class="token string">\'address\'</span><span class="token punctuation">)</span>\n  address <span class="token operator">=</span> <span class="token keyword">void</span> <span class="token number">0</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">interface</span> <span class="token class-name">IProps</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token keyword">class</span> <span class="token class-name">ProTableDemo</span> <span class="token keyword">extends</span> <span class="token class-name">LegionsProTable<span class="token punctuation">.</span>ProTableBaseClass</span><span class="token operator">&lt;</span>IProps<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token operator">></span> <span class="token punctuation">{</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token operator">:</span> IProps</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">pushColumns</span><span class="token punctuation">(</span><span class="token string">\'name\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n      title<span class="token operator">:</span> <span class="token string">\'姓名\'</span><span class="token punctuation">,</span>\n      width<span class="token operator">:</span> <span class="token string">\'100px\'</span><span class="token punctuation">,</span>\n      sorter<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">pushColumns</span><span class="token punctuation">(</span><span class="token string">\'age\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n      title<span class="token operator">:</span> <span class="token string">\'年龄\'</span><span class="token punctuation">,</span>\n      width<span class="token operator">:</span> <span class="token string">\'100px\'</span><span class="token punctuation">,</span>\n      sorter<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">pushColumns</span><span class="token punctuation">(</span><span class="token string">\'address\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n      title<span class="token operator">:</span> <span class="token string">\'住址\'</span><span class="token punctuation">,</span>\n      width<span class="token operator">:</span> <span class="token string">\'100px\'</span><span class="token punctuation">,</span>\n      sorter<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token operator">&lt;</span>LegionsProTable\n      <span class="token operator">&lt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>ResponseVModelNameDataEntity<span class="token operator">></span>\n        onReady<span class="token operator">=</span><span class="token punctuation">{</span><span class="token parameter">value</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          <span class="token keyword">this</span><span class="token punctuation">.</span>tableRef <span class="token operator">=</span> value<span class="token punctuation">;</span>\n          <span class="token keyword">this</span><span class="token punctuation">.</span>tableRef<span class="token punctuation">.</span>viewModel<span class="token punctuation">.</span>isAdaptiveHeight <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n\n          <span class="token keyword">this</span><span class="token punctuation">.</span>tableRef<span class="token punctuation">.</span>viewModel<span class="token punctuation">.</span>bodyExternalContainer<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">\'ButtonAction\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n            height<span class="token operator">:</span> <span class="token number">48</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n          <span class="token keyword">this</span><span class="token punctuation">.</span>tableRef<span class="token punctuation">.</span>viewModel<span class="token punctuation">.</span>bodyExternalContainer<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">\'other\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n            height<span class="token operator">:</span> <span class="token number">70</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        autoQuery<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            <span class="token function-variable function">params</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">pageIndex<span class="token punctuation">,</span>pageSize</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n              <span class="token keyword">return</span> <span class="token punctuation">{</span>\n                size<span class="token operator">:</span> pageSize<span class="token punctuation">,</span>\n                current<span class="token operator">:</span> pageIndex<span class="token punctuation">,</span>\n                <span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>queryPrams<span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token function-variable function">transform</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n              <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>value<span class="token punctuation">.</span>isPending <span class="token operator">&amp;&amp;</span> value<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">const</span> <span class="token punctuation">{</span> result<span class="token punctuation">,</span>current<span class="token punctuation">,</span>pageSize<span class="token punctuation">,</span>total <span class="token punctuation">}</span> <span class="token operator">=</span> value<span class="token punctuation">.</span>value<span class="token punctuation">;</span>\n                <span class="token keyword">return</span> <span class="token punctuation">{</span>\n                  data<span class="token operator">:</span> result<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span>index</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                    item<span class="token punctuation">[</span><span class="token string">\'key\'</span><span class="token punctuation">]</span> <span class="token operator">=</span> index <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token punctuation">(</span>current <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> pageSize<span class="token punctuation">;</span>\n                    <span class="token keyword">return</span> item<span class="token punctuation">;</span>\n                  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                  total<span class="token operator">:</span> total<span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">;</span>\n              <span class="token punctuation">}</span>\n              <span class="token keyword">return</span> <span class="token punctuation">{</span>\n                total<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n                data<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            method<span class="token operator">:</span> <span class="token string">\'get\'</span><span class="token punctuation">,</span>\n            ApiUrl<span class="token operator">:</span> <span class="token string">\'http://192.168.200.171:3001/mock/115/getUsers\'</span><span class="token punctuation">,</span>\n            <span class="token function-variable function">mappingEntity</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">that<span class="token punctuation">,</span>res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                that<span class="token punctuation">.</span>result <span class="token operator">=</span> that<span class="token punctuation">.</span><span class="token function">transformRows</span><span class="token punctuation">(</span>res<span class="token punctuation">[</span><span class="token string">\'data\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>ResponseVModelNameDataEntity<span class="token punctuation">)</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        columns<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>columnsData<span class="token punctuation">}</span>\n        uniqueUid<span class="token operator">=</span><span class="token string">"mock/115/getUsers"</span>\n        uniqueKey<span class="token operator">=</span><span class="token string">"name"</span>\n        isOpenRowChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span><span class="token operator">></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">LegionsProTable</span></span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">const</span> <span class="token function-variable function">root</span> <span class="token operator">=</span> <span class="token parameter">props</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ProTableDemo</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ProTableDemo</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>React<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>app<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){a(0),a(10);function n(s){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(s)}var s=e(a(1276)),t=a(1285),p=e(a(0)),o=a(1278);function e(n){return n&&n.__esModule?n:{default:n}}function c(n,s){var a=Object.keys(n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(n);s&&(t=t.filter((function(s){return Object.getOwnPropertyDescriptor(n,s).enumerable}))),a.push.apply(a,t)}return a}function u(n,s,a){return s in n?Object.defineProperty(n,s,{value:a,enumerable:!0,configurable:!0,writable:!0}):n[s]=a,n}function r(n,s){for(var a=0;a<s.length;a++){var t=s[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}function l(n,s){return(l=Object.setPrototypeOf||function(n,s){return n.__proto__=s,n})(n,s)}function i(n){var s=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(n){return!1}}();return function(){var a,t=d(n);if(s){var p=d(this).constructor;a=Reflect.construct(t,arguments,p)}else a=t.apply(this,arguments);return k(this,a)}}function k(s,a){return!a||"object"!==n(a)&&"function"!=typeof a?function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(s):a}function d(n){return(d=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}function f(n,s){if(!(n instanceof s))throw new TypeError("Cannot call a class as a function")}function m(n){var s,a=w(n.key);"method"===n.kind?s={value:n.value,writable:!0,configurable:!0,enumerable:!1}:"get"===n.kind?s={get:n.value,configurable:!0,enumerable:!1}:"set"===n.kind?s={set:n.value,configurable:!0,enumerable:!1}:"field"===n.kind&&(s={configurable:!0,writable:!0,enumerable:!0});var t={kind:"field"===n.kind?"field":"method",key:a,placement:n.static?"static":"field"===n.kind?"own":"prototype",descriptor:s};return n.decorators&&(t.decorators=n.decorators),"field"===n.kind&&(t.initializer=n.value),t}function y(n,s){void 0!==n.descriptor.get?s.descriptor.get=n.descriptor.get:s.descriptor.set=n.descriptor.set}function h(n){return n.decorators&&n.decorators.length}function g(n){return void 0!==n&&!(void 0===n.value&&void 0===n.writable)}function b(n,s){var a=n[s];if(void 0!==a&&"function"!=typeof a)throw new TypeError("Expected '"+s+"' to be a function");return a}function w(s){var a=function(s,a){if("object"!==n(s)||null===s)return s;var t=s[Symbol.toPrimitive];if(void 0!==t){var p=t.call(s,a||"default");if("object"!==n(p))return p;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===a?String:Number)(s)}(s,"string");return"symbol"===n(a)?a:String(a)}function v(n,s){(null==s||s>n.length)&&(s=n.length);for(var a=0,t=new Array(s);a<s;a++)t[a]=n[a];return t}var P=function(n,s,a,t){var p=function(){(function(){return n});var n={elementsDefinitionOrder:[["method"],["field"]],initializeInstanceElements:function(n,s){["method","field"].forEach((function(a){s.forEach((function(s){s.kind===a&&"own"===s.placement&&this.defineClassElement(n,s)}),this)}),this)},initializeClassElements:function(n,s){var a=n.prototype;["method","field"].forEach((function(t){s.forEach((function(s){var p=s.placement;if(s.kind===t&&("static"===p||"prototype"===p)){var o="static"===p?n:a;this.defineClassElement(o,s)}}),this)}),this)},defineClassElement:function(n,s){var a=s.descriptor;if("field"===s.kind){var t=s.initializer;a={enumerable:a.enumerable,writable:a.writable,configurable:a.configurable,value:void 0===t?void 0:t.call(n)}}Object.defineProperty(n,s.key,a)},decorateClass:function(n,s){var a=[],t=[],p={static:[],prototype:[],own:[]};if(n.forEach((function(n){this.addElementPlacement(n,p)}),this),n.forEach((function(n){if(!h(n))return a.push(n);var s=this.decorateElement(n,p);a.push(s.element),a.push.apply(a,s.extras),t.push.apply(t,s.finishers)}),this),!s)return{elements:a,finishers:t};var o=this.decorateConstructor(a,s);return t.push.apply(t,o.finishers),o.finishers=t,o},addElementPlacement:function(n,s,a){var t=s[n.placement];if(!a&&-1!==t.indexOf(n.key))throw new TypeError("Duplicated element ("+n.key+")");t.push(n.key)},decorateElement:function(n,s){for(var a=[],t=[],p=n.decorators,o=p.length-1;o>=0;o--){var e=s[n.placement];e.splice(e.indexOf(n.key),1);var c=this.fromElementDescriptor(n),u=this.toElementFinisherExtras((0,p[o])(c)||c);n=u.element,this.addElementPlacement(n,s),u.finisher&&t.push(u.finisher);var r=u.extras;if(r){for(var l=0;l<r.length;l++)this.addElementPlacement(r[l],s);a.push.apply(a,r)}}return{element:n,finishers:t,extras:a}},decorateConstructor:function(n,s){for(var a=[],t=s.length-1;t>=0;t--){var p=this.fromClassDescriptor(n),o=this.toClassDescriptor((0,s[t])(p)||p);if(void 0!==o.finisher&&a.push(o.finisher),void 0!==o.elements){n=o.elements;for(var e=0;e<n.length-1;e++)for(var c=e+1;c<n.length;c++)if(n[e].key===n[c].key&&n[e].placement===n[c].placement)throw new TypeError("Duplicated element ("+n[e].key+")")}}return{elements:n,finishers:a}},fromElementDescriptor:function(n){var s={kind:n.kind,key:n.key,placement:n.placement,descriptor:n.descriptor};return Object.defineProperty(s,Symbol.toStringTag,{value:"Descriptor",configurable:!0}),"field"===n.kind&&(s.initializer=n.initializer),s},toElementDescriptors:function(n){var s;if(void 0!==n)return(s=n,function(n){if(Array.isArray(n))return n}(s)||function(n){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(n))return Array.from(n)}(s)||function(n,s){if(n){if("string"==typeof n)return v(n,s);var a=Object.prototype.toString.call(n).slice(8,-1);return"Object"===a&&n.constructor&&(a=n.constructor.name),"Map"===a||"Set"===a?Array.from(n):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?v(n,s):void 0}}(s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()).map((function(n){var s=this.toElementDescriptor(n);return this.disallowProperty(n,"finisher","An element descriptor"),this.disallowProperty(n,"extras","An element descriptor"),s}),this)},toElementDescriptor:function(n){var s=String(n.kind);if("method"!==s&&"field"!==s)throw new TypeError('An element descriptor\'s .kind property must be either "method" or "field", but a decorator created an element descriptor with .kind "'+s+'"');var a=w(n.key),t=String(n.placement);if("static"!==t&&"prototype"!==t&&"own"!==t)throw new TypeError('An element descriptor\'s .placement property must be one of "static", "prototype" or "own", but a decorator created an element descriptor with .placement "'+t+'"');var p=n.descriptor;this.disallowProperty(n,"elements","An element descriptor");var o={kind:s,key:a,placement:t,descriptor:Object.assign({},p)};return"field"!==s?this.disallowProperty(n,"initializer","A method descriptor"):(this.disallowProperty(p,"get","The property descriptor of a field descriptor"),this.disallowProperty(p,"set","The property descriptor of a field descriptor"),this.disallowProperty(p,"value","The property descriptor of a field descriptor"),o.initializer=n.initializer),o},toElementFinisherExtras:function(n){return{element:this.toElementDescriptor(n),finisher:b(n,"finisher"),extras:this.toElementDescriptors(n.extras)}},fromClassDescriptor:function(n){var s={kind:"class",elements:n.map(this.fromElementDescriptor,this)};return Object.defineProperty(s,Symbol.toStringTag,{value:"Descriptor",configurable:!0}),s},toClassDescriptor:function(n){var s=String(n.kind);if("class"!==s)throw new TypeError('A class descriptor\'s .kind property must be "class", but a decorator created a class descriptor with .kind "'+s+'"');this.disallowProperty(n,"key","A class descriptor"),this.disallowProperty(n,"placement","A class descriptor"),this.disallowProperty(n,"descriptor","A class descriptor"),this.disallowProperty(n,"initializer","A class descriptor"),this.disallowProperty(n,"extras","A class descriptor");var a=b(n,"finisher");return{elements:this.toElementDescriptors(n.elements),finisher:a}},runClassFinishers:function(n,s){for(var a=0;a<s.length;a++){var t=(0,s[a])(n);if(void 0!==t){if("function"!=typeof t)throw new TypeError("Finishers must return a constructor.");n=t}}return n},disallowProperty:function(n,s,a){if(void 0!==n[s])throw new TypeError(a+" can't have a ."+s+" property.")}};return n}();if(t)for(var o=0;o<t.length;o++)p=t[o](p);var e=s((function(n){p.initializeInstanceElements(n,c.elements)}),a),c=p.decorateClass(function(n){for(var s=[],a=function(n){return"method"===n.kind&&n.key===o.key&&n.placement===o.placement},t=0;t<n.length;t++){var p,o=n[t];if("method"===o.kind&&(p=s.find(a)))if(g(o.descriptor)||g(p.descriptor)){if(h(o)||h(p))throw new ReferenceError("Duplicated methods ("+o.key+") can't be decorated.");p.descriptor=o.descriptor}else{if(h(o)){if(h(p))throw new ReferenceError("Decorators can't be placed on different accessors with for the same property ("+o.key+").");p.decorators=o.decorators}y(o,p)}else s.push(o)}return s}(e.d.map(m)),n);return p.initializeClassElements(e.F,c.elements),p.runClassFinishers(e.F,c.finishers)}(null,(function(n){return{F:function s(){f(this,s),n(this)},d:[{kind:"field",decorators:[(0,t.JsonProperty)("key")],key:"key",value:function(){}},{kind:"field",decorators:[(0,t.JsonProperty)("name")],key:"name",value:function(){}},{kind:"field",decorators:[(0,t.JsonProperty)("age")],key:"age",value:function(){}},{kind:"field",decorators:[(0,t.JsonProperty)("address")],key:"address",value:function(){}}]}})),E=function(n){!function(n,s){if("function"!=typeof s&&null!==s)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(s&&s.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),s&&l(n,s)}(k,n);var s,a,t,e=i(k);function k(n){var s;return f(this,k),(s=e.call(this,n)).pushColumns("name",{title:"姓名",width:"100px",sorter:!0}),s.pushColumns("age",{title:"年龄",width:"100px",sorter:!0}),s.pushColumns("address",{title:"住址",width:"100px",sorter:!0}),s}return s=k,(a=[{key:"render",value:function(){var n=this;return p.default.createElement(o.LegionsProTable,{onReady:function(s){n.tableRef=s,n.tableRef.viewModel.isAdaptiveHeight=!1,n.tableRef.viewModel.bodyExternalContainer.set("ButtonAction",{height:48}),n.tableRef.viewModel.bodyExternalContainer.set("other",{height:70})},autoQuery:{params:function(s,a){return function(n){for(var s=1;s<arguments.length;s++){var a=null!=arguments[s]?arguments[s]:{};s%2?c(Object(a),!0).forEach((function(s){u(n,s,a[s])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(a)):c(Object(a)).forEach((function(s){Object.defineProperty(n,s,Object.getOwnPropertyDescriptor(a,s))}))}return n}({size:a,current:s},n.queryPrams)},transform:function(n){if(n&&!n.isPending&&n.value){var s=n.value,a=s.result,t=s.current,p=s.pageSize,o=s.total;return{data:a.map((function(n,s){return n.key=s+1+(t-1)*p,n})),total:o}}return{total:0,data:[]}},method:"get",ApiUrl:"http://192.168.200.171:3001/mock/115/getUsers",mappingEntity:function(n,s){n.result=n.transformRows(s.data,P)}},columns:this.columnsData,uniqueUid:"mock/115/getUsers",uniqueKey:"name",isOpenRowChange:!1})}}])&&r(s.prototype,a),t&&r(s,t),k}(o.LegionsProTable.ProTableBaseClass),C=(0,s.default)();return p.default.createElement(C.start((function(n){return p.default.createElement(E,null)})))}}}}]);