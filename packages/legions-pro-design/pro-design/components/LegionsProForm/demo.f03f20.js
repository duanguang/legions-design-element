(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{1240:function(n,s,a){n.exports={basic:a(1514)}},1276:function(n,s,a){"use strict";a.r(s);var t=a(0),p=a.n(t),o=a(1279),e=a(1280),c=a(1282),u=a(79),l=a.n(u);function k(n){return(k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}s.default=function(n){var s=n=n||{},t=s.router,u=s.history;s.enableDevTools;t&&!u&&(u=Object(c.createHashHistory)());var i=n.initialState||{},r=Object(o.getInjector)();return r||(r=Object(o.setInjector)(u,i)),{_history:u,_stores:r,use:function(n){},start:function(n,s){l()("function"==typeof n,"componentClass should be function"),"string"==typeof s&&(s=document.querySelector(s),l()(s,"app.start: could not query selector: ".concat(s)));if(l()(!s||m(s),"app.start: container should be HTMLElement"),!s)return f(r,this,n);!function(n,s,t,o){a(10).render(p.a.createElement(f(s,t,o)),n)}(s,r,this,n)}};function m(n){return"object"===k(n)&&null!==n&&n.nodeType&&n.nodeName}function f(n,s,a){return function(t){var o=p.a.createElement(a,Object.assign({app:s},t));return p.a.createElement("div",null,p.a.createElement(e.Provider,{store:n},s._history?{element:o}:o))}}}},1300:function(n,s,a){"use strict";a.d(s,"a",(function(){return t})),a.d(s,"b",(function(){return p}));function t(n,s,a,t){var p,o=arguments.length,e=o<3?s:null===t?t=Object.getOwnPropertyDescriptor(s,a):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)e=Reflect.decorate(n,s,a,t);else for(var c=n.length-1;c>=0;c--)(p=n[c])&&(e=(o<3?p(e):o>3?p(s,a,e):p(s,a))||e);return o>3&&e&&Object.defineProperty(s,a,e),e}function p(n,s){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,s)}},1514:function(n,s,a){n.exports={content:{"zh-CN":[["p","一个基础表单使用配置示例"],["blockquote",["p","表单字段 ",["a",{title:null,href:"#Model"},"FormFields"]]]],"en-US":[]},meta:{order:0,title:{"zh-CN":"基础表单","en-US":"基础表单"},filename:"src/components/LegionsProForm/demo/basic.md",id:"src-components-LegionsProForm-demo-basic"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:'import create from <span class="token string">\'../../../common/components/render.tsx\'</span><span class="token comment" spellcheck="true">;</span>\nimport { JsonProperty } from <span class="token string">\'json-mapper-object\'</span><span class="token comment" spellcheck="true">;</span>\nimport { Button<span class="token punctuation">,</span> Row <span class="token punctuation">,</span>Col<span class="token punctuation">,</span>Form} from <span class="token string">\'antd\'</span><span class="token comment" spellcheck="true">;</span>\nimport React from <span class="token string">\'react\'</span><span class="token comment" spellcheck="true">;</span>\nimport { bind<span class="token punctuation">,</span> observer } from <span class="token string">\'legions/store-react\'</span><span class="token comment" spellcheck="true">;</span>\nimport { LegionsProForm<span class="token punctuation">,</span> LegionsProPageContainer } from <span class="token string">\'legions-pro-design\'</span><span class="token comment" spellcheck="true">;</span>\nimport { UploadChangeParam } from <span class="token string">\'antd/lib/upload/interface\'</span><span class="token comment" spellcheck="true">;</span>\nimport { FormRuleProperty } from <span class="token string">\'legions-decorator/async.validator\'</span><span class="token comment" spellcheck="true">;</span>\nimport { IBaseFormFields<span class="token punctuation">,</span>HlLabeledValue } from <span class="token string">\'legions-lunar/model\'</span><span class="token comment" spellcheck="true">;</span>\nimport { ClassOf } from <span class="token string">\'legions-lunar/types/api/typescript\'</span><span class="token comment" spellcheck="true">;</span>\nimport { legionsThirdpartyPlugin } from <span class="token string">\'legions-thirdparty-plugin\'</span><span class="token comment" spellcheck="true">;</span>\nimport { legionsThirdpartyMap } from <span class="token string">\'./constants/legionsConfig\'</span><span class="token comment" spellcheck="true">;</span>\n<span class="token keyword">const</span> FormItem <span class="token operator">=</span> Form<span class="token punctuation">.</span>Item<span class="token comment" spellcheck="true">;</span>\nimport {FormFields} from <span class="token string">\'../demoTest/model\'</span><span class="token comment" spellcheck="true">; // 具体使用请看底部</span>\n\nlegionsThirdpartyPlugin<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n    {\n        name<span class="token punctuation">:</span> <span class="token string">\'dexie\'</span><span class="token punctuation">,</span>\n        url<span class="token punctuation">:</span><span class="token string">\'https://qa-zy.hoolinks.com/static/plugin/dexie.min.js\'</span>\n    }\n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\ninterface IFormFieldUserRenderInput1{\n    currency<span class="token punctuation">:</span>string<span class="token punctuation">,</span>\n    number<span class="token punctuation">:</span>number\n}\n\ninterface IProps {}\ninterface IState{\n  visibleText<span class="token punctuation">:</span>boolean<span class="token comment" spellcheck="true">;</span>\n  visible<span class="token punctuation">:</span>boolean<span class="token comment" spellcheck="true">;</span>\n  disabledText<span class="token punctuation">:</span>boolean\n}\nclass ProFormDemo extends React<span class="token punctuation">.</span>Component<span class="token operator">&lt;</span>IProps<span class="token punctuation">,</span>IState<span class="token operator">></span> {\n  formRef<span class="token punctuation">:</span> InstanceForm\n  <span class="token function">constructor</span><span class="token punctuation">(</span>props<span class="token punctuation">:</span> IProps<span class="token punctuation">)</span> {\n    <span class="token function">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    this<span class="token punctuation">.</span>state<span class="token operator">=</span>{\n      visibleText<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n      disabledText<span class="token punctuation">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>\n      visible<span class="token punctuation">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>\n    }\n  }\n  <span class="token function">createConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span> {\n        <span class="token keyword">const</span> rules <span class="token operator">=</span> FormFields<span class="token punctuation">.</span>initFormRules<span class="token operator">&lt;</span>FormFields<span class="token punctuation">,</span>{}<span class="token operator">></span><span class="token punctuation">(</span>FormFields<span class="token punctuation">,</span>{}<span class="token punctuation">)</span>\n        <span class="token keyword">const</span> formUtils <span class="token operator">=</span> new LegionsProForm<span class="token punctuation">.</span><span class="token function">ProFormUtils</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>rules<span class="token punctuation">,</span><span class="token string">\'rules\'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        formUtils<span class="token punctuation">.</span><span class="token function">renderInputConfig</span><span class="token punctuation">(</span>{\n            iAntdProps<span class="token punctuation">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'text\'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            iFormProps<span class="token punctuation">:</span> {\n                <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>formUtils<span class="token punctuation">.</span><span class="token function">createLayout</span><span class="token punctuation">(</span><span class="token string">\'文本框\'</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                maxLength<span class="token punctuation">:</span> <span class="token string">\'50\'</span><span class="token punctuation">,</span>\n                type<span class="token punctuation">:</span> <span class="token string">\'text\'</span><span class="token punctuation">,</span>\n                disabled<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            }<span class="token punctuation">,</span>\n            rules<span class="token punctuation">:</span> rules<span class="token punctuation">.</span>text\n        }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        formUtils<span class="token punctuation">.</span><span class="token function">renderInputConfig</span><span class="token punctuation">(</span>{\n            iAntdProps<span class="token punctuation">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'textarea\'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            iFormProps<span class="token punctuation">:</span> {\n                <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>formUtils<span class="token punctuation">.</span><span class="token function">createLayout</span><span class="token punctuation">(</span><span class="token string">\'多行文本\'</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                maxLength<span class="token punctuation">:</span> <span class="token string">\'50\'</span><span class="token punctuation">,</span>\n                type<span class="token punctuation">:</span> <span class="token string">\'textarea\'</span>\n            }<span class="token punctuation">,</span>\n            rules<span class="token punctuation">:</span> rules<span class="token punctuation">.</span>textarea\n        }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        formUtils<span class="token punctuation">.</span><span class="token function">renderInputConfig</span><span class="token punctuation">(</span>{\n            iAntdProps<span class="token punctuation">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'password\'</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            iFormProps<span class="token punctuation">:</span> {\n                <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>formUtils<span class="token punctuation">.</span><span class="token function">createLayout</span><span class="token punctuation">(</span><span class="token string">\'密码\'</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                maxLength<span class="token punctuation">:</span> <span class="token string">\'50\'</span><span class="token punctuation">,</span>\n                type<span class="token punctuation">:</span> <span class="token string">\'password\'</span><span class="token punctuation">,</span>\n\n            }<span class="token punctuation">,</span>\n            rules<span class="token punctuation">:</span> rules<span class="token punctuation">.</span>password\n        }<span class="token punctuation">)</span>\n        formUtils<span class="token punctuation">.</span><span class="token function">renderInputConfig</span><span class="token punctuation">(</span>{\n            iAntdProps<span class="token punctuation">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'numberText\'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            iFormProps<span class="token punctuation">:</span> {\n                <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>formUtils<span class="token punctuation">.</span><span class="token function">createLayout</span><span class="token punctuation">(</span><span class="token string">\'数字文本\'</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                maxLength<span class="token punctuation">:</span> <span class="token string">\'50\'</span><span class="token punctuation">,</span>\n                type<span class="token punctuation">:</span> <span class="token string">\'number\'</span><span class="token punctuation">,</span>\n\n            }<span class="token punctuation">,</span>\n            rules<span class="token punctuation">:</span> rules<span class="token punctuation">.</span>numberText\n        }<span class="token punctuation">)</span>\n        formUtils<span class="token punctuation">.</span><span class="token function">renderInputNumberConfig</span><span class="token punctuation">(</span>{\n            iAntdProps<span class="token punctuation">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'numbers\'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            iFormProps<span class="token punctuation">:</span> {\n                <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>formUtils<span class="token punctuation">.</span><span class="token function">createLayout</span><span class="token punctuation">(</span><span class="token string">\'数字\'</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n\n            }<span class="token punctuation">,</span>\n            rules<span class="token punctuation">:</span> rules<span class="token punctuation">.</span>numbers\n        }<span class="token punctuation">)</span>\n        formUtils<span class="token punctuation">.</span><span class="token function">renderSelectConfig</span><span class="token punctuation">(</span>{\n            iAntdProps<span class="token punctuation">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'selectedItem\'</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token string">\'请选择\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            iFormProps<span class="token punctuation">:</span> {\n                <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>formUtils<span class="token punctuation">.</span><span class="token function">createLayout</span><span class="token punctuation">(</span><span class="token string">\'普通下拉\'</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span> <span class="token operator">*</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                options<span class="token punctuation">:</span> <span class="token punctuation">[</span>{\n                    value<span class="token punctuation">:</span> <span class="token string">\'订单\'</span><span class="token punctuation">,</span>\n                    label<span class="token punctuation">:</span> <span class="token string">\'订单1\'</span><span class="token punctuation">,</span>\n                    key<span class="token punctuation">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n                    keyValue<span class="token punctuation">:</span> <span class="token string">\'222\'</span><span class="token punctuation">,</span>\n                    disabled<span class="token punctuation">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>\n                }<span class="token punctuation">,</span>\n                {\n                    value<span class="token punctuation">:</span> <span class="token string">\'工单\'</span><span class="token punctuation">,</span>\n                    label<span class="token punctuation">:</span> <span class="token string">\'工单1\'</span><span class="token punctuation">,</span>\n                    key<span class="token punctuation">:</span><span class="token string">\'2\'</span><span class="token punctuation">,</span>\n                }<span class="token punctuation">]</span><span class="token punctuation">,</span>\n                size<span class="token punctuation">:</span> <span class="token string">\'default\'</span><span class="token punctuation">,</span>\n                labelInValue<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            }<span class="token punctuation">,</span>\n            rules<span class="token punctuation">:</span> rules<span class="token punctuation">.</span>selectedItem<span class="token punctuation">,</span>\n        }<span class="token punctuation">)</span>\n        formUtils<span class="token punctuation">.</span><span class="token function">renderSelectConfig</span><span class="token punctuation">(</span>{\n            iAntdProps<span class="token punctuation">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'selectedItemRemote\'</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token string">\'请选择\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            iFormProps<span class="token punctuation">:</span> {\n                <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>formUtils<span class="token punctuation">.</span><span class="token function">createLayout</span><span class="token punctuation">(</span><span class="token string">\'远程下拉\'</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span> <span class="token operator">*</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                allowClear<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                remote<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                pageSize<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">,</span>\n                autoQuery<span class="token punctuation">:</span> {\n                    params<span class="token punctuation">:</span><span class="token punctuation">(</span>pageIndex<span class="token punctuation">,</span>pageSize<span class="token punctuation">,</span>keywords<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n                        return {\n                            keyword<span class="token punctuation">:</span> keywords<span class="token punctuation">,</span>\n                            current<span class="token punctuation">:</span> pageIndex<span class="token punctuation">,</span>\n                            size<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">,</span>\n                            templateCode<span class="token punctuation">:</span> <span class="token string">\'Country\'</span><span class="token punctuation">,</span>\n                            pageIndex<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n                            pageSize<span class="token punctuation">,</span>\n                            defaultKeyWords<span class="token punctuation">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n                        }\n                    }<span class="token punctuation">,</span>\n                    ApiUrl<span class="token punctuation">:</span> <span class="token string">\'https://gateway.hoolinks.com/api/gateway\'</span><span class="token punctuation">,</span>\n                    method<span class="token punctuation">:</span> <span class="token string">\'post\'</span><span class="token punctuation">,</span>\n                    token<span class="token punctuation">:</span> \'SESSION<span class="token operator">=</span>0cef87fd<span class="token operator">-</span>a1c3<span class="token operator">-</span>4d32<span class="token operator">-</span><span class="token number">8273</span><span class="token operator">-</span>45402da62d56<span class="token comment" spellcheck="true">;\',</span>\n                    options<span class="token punctuation">:</span> {\n                        <span class="token string">\'api-target\'</span><span class="token punctuation">:</span><span class="token string">\'https://qa-scm.hoolinks.com//jg/basic/cusinfo/search.json\'</span>\n                    }<span class="token punctuation">,</span>\n                    mappingEntity<span class="token punctuation">:</span> <span class="token punctuation">(</span>that<span class="token punctuation">,</span>res<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n                        that<span class="token punctuation">.</span>total <span class="token operator">=</span> res<span class="token punctuation">[</span><span class="token string">\'total\'</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>\n                        that<span class="token punctuation">.</span>current <span class="token operator">=</span> res<span class="token punctuation">[</span><span class="token string">\'current\'</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>\n                        that<span class="token punctuation">.</span>pageSize <span class="token operator">=</span> res<span class="token punctuation">[</span><span class="token string">\'size\'</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>\n                        <span class="token keyword">const</span> data<span class="token operator">=</span> res<span class="token punctuation">[</span><span class="token string">\'data\'</span><span class="token punctuation">]</span> as <span class="token punctuation">[</span><span class="token punctuation">]</span>||<span class="token punctuation">[</span><span class="token punctuation">]</span>\n                        return data<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n                            return {\n                                key<span class="token punctuation">:</span> item<span class="token punctuation">[</span><span class="token string">\'code\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                                value<span class="token punctuation">:</span>item<span class="token punctuation">[</span><span class="token string">\'name\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                            }\n                        }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                    }<span class="token punctuation">,</span>\n                    transform<span class="token punctuation">:</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n                        let arr <span class="token operator">=</span> value<span class="token punctuation">.</span>value <span class="token operator">?</span> value<span class="token punctuation">.</span>value<span class="token punctuation">.</span>result <span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n                        return {\n                            data<span class="token punctuation">:</span> arr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n                                return {\n                                    key<span class="token punctuation">:</span> item<span class="token punctuation">.</span>key<span class="token punctuation">,</span>\n                                    value<span class="token punctuation">:</span> <span class="token string">\'(\'</span> <span class="token operator">+</span> item<span class="token punctuation">.</span>key <span class="token operator">+</span> <span class="token string">\')\'</span> <span class="token operator">+</span> item<span class="token punctuation">.</span>value<span class="token punctuation">,</span>\n                                }\n                            }<span class="token punctuation">)</span><span class="token punctuation">,</span>\n                            total<span class="token punctuation">:</span> value<span class="token punctuation">.</span>value <span class="token operator">?</span> value<span class="token punctuation">.</span>value<span class="token punctuation">.</span>total <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n                        }\n                    }<span class="token punctuation">,</span>\n                }<span class="token punctuation">,</span>\n                paging<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                size<span class="token punctuation">:</span> <span class="token string">\'default\'</span><span class="token punctuation">,</span>\n                labelInValue<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            }<span class="token punctuation">,</span>\n            rules<span class="token punctuation">:</span> rules<span class="token punctuation">.</span>selectedItem<span class="token punctuation">,</span>\n        }<span class="token punctuation">)</span>\n        formUtils<span class="token punctuation">.</span><span class="token function">renderSelectConfig</span><span class="token punctuation">(</span>{\n            iAntdProps<span class="token punctuation">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'selectedItemMultiple\'</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">\'下拉多选\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            iFormProps<span class="token punctuation">:</span> {\n                <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>formUtils<span class="token punctuation">.</span><span class="token function">createLayout</span><span class="token punctuation">(</span><span class="token string">\'下拉多选\'</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token operator">*</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                allowClear<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                options<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n                    {\n                        value<span class="token punctuation">:</span> <span class="token string">\'react\'</span><span class="token punctuation">,</span>\n                        key<span class="token punctuation">:</span> <span class="token string">\'2\'</span><span class="token punctuation">,</span>\n                    }<span class="token punctuation">,</span>\n                    {\n                        value<span class="token punctuation">:</span> <span class="token string">\'angular\'</span><span class="token punctuation">,</span>\n                        key<span class="token punctuation">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n                    }<span class="token punctuation">,</span>\n                    {\n                        value<span class="token punctuation">:</span> <span class="token string">\'vue\'</span><span class="token punctuation">,</span>\n                        key<span class="token punctuation">:</span> <span class="token string">\'3\'</span><span class="token punctuation">,</span>\n                    }<span class="token punctuation">,</span>\n                <span class="token punctuation">]</span><span class="token punctuation">,</span>\n                maxTagCount<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n                labelInValue<span class="token punctuation">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>\n                mode<span class="token punctuation">:</span> <span class="token string">\'multiple\'</span><span class="token punctuation">,</span>\n            }<span class="token punctuation">,</span>\n            rules<span class="token punctuation">:</span> rules<span class="token punctuation">.</span>selectedItemMultiple<span class="token punctuation">,</span>\n        }<span class="token punctuation">)</span>\n        formUtils<span class="token punctuation">.</span><span class="token function">renderUploadConfig</span><span class="token punctuation">(</span>{\n            iAntdProps<span class="token punctuation">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'upload\'</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">\'文件上传\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            iFormProps<span class="token punctuation">:</span> {\n                <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>formUtils<span class="token punctuation">.</span><span class="token function">createLayout</span><span class="token punctuation">(</span><span class="token string">\'文件上传\'</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                maxFileCount<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n                isDragger<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                prompt<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>p<span class="token operator">></span>扫去窗上的尘埃，才可以看到窗外的美景<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            }<span class="token punctuation">,</span>\n            rules<span class="token punctuation">:</span> rules<span class="token punctuation">.</span>upload<span class="token punctuation">,</span>\n        }<span class="token punctuation">)</span>\n        formUtils<span class="token punctuation">.</span><span class="token function">renderCustomConfig</span><span class="token punctuation">(</span>{\n            <span class="token operator">/</span><span class="token operator">/</span> 自定义组件容器div属性设置 {span<span class="token punctuation">:</span><span class="token number">24</span>} 单独占一行 \n            <span class="token operator">/</span><span class="token operator">/</span> 此属性定义是标识整个容器组件\n            iAntdProps<span class="token punctuation">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'customRenderInput\'</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            iFormProps<span class="token punctuation">:</span> {\n                render<span class="token punctuation">:</span> <span class="token punctuation">(</span>form<span class="token punctuation">,</span>antdProps<span class="token punctuation">,</span>rule<span class="token punctuation">,</span>formRef<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n                    <span class="token keyword">const</span> jsxInput <span class="token operator">=</span> formUtils<span class="token punctuation">.</span><span class="token function">renderInputConfig</span><span class="token punctuation">(</span>{\n                        iAntdProps<span class="token punctuation">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'customRenderInput1\'</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token string">\'自定义文本组件\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                        iFormProps<span class="token punctuation">:</span> {\n                            <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>formUtils<span class="token punctuation">.</span><span class="token function">createLayout</span><span class="token punctuation">(</span><span class="token string">\'自定义组件\'</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                            type<span class="token punctuation">:</span> <span class="token string">\'password\'</span><span class="token punctuation">,</span>\n                        }<span class="token punctuation">,</span>\n                        rules<span class="token punctuation">:</span>rules<span class="token punctuation">.</span>customRenderInput1\n                    }<span class="token punctuation">)</span>\n                    return formUtils<span class="token punctuation">.</span><span class="token function">createFormComponent</span><span class="token punctuation">(</span>jsxInput<span class="token punctuation">,</span>form<span class="token punctuation">,</span>formRef<span class="token punctuation">.</span>uid<span class="token punctuation">,</span>formRef<span class="token punctuation">)</span>\n                }<span class="token punctuation">,</span>\n            }<span class="token punctuation">,</span>\n        }<span class="token punctuation">)</span>\n        formUtils<span class="token punctuation">.</span><span class="token function">renderCustomConfig</span><span class="token punctuation">(</span>{\n            iAntdProps<span class="token punctuation">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'customRender\'</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            iFormProps<span class="token punctuation">:</span> {\n                render<span class="token punctuation">:</span> <span class="token punctuation">(</span>form<span class="token punctuation">,</span>antdProps<span class="token punctuation">,</span>rule<span class="token punctuation">,</span>formRef<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n                    <span class="token keyword">const</span> JsxSelect <span class="token operator">=</span> formUtils<span class="token punctuation">.</span><span class="token function">renderSelectConfig</span><span class="token punctuation">(</span>{\n                        iAntdProps<span class="token punctuation">:</span> {\n                            <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'priceType\'</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token string">\'请选择\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                            className<span class="token punctuation">:</span> antdProps<span class="token punctuation">.</span>className<span class="token punctuation">,</span>\n                        }<span class="token punctuation">,</span>\n                        iFormProps<span class="token punctuation">:</span> {\n                            <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>formUtils<span class="token punctuation">.</span><span class="token function">createLayout</span><span class="token punctuation">(</span><span class="token string">\'价格\'</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">2</span> <span class="token operator">*</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                            options<span class="token punctuation">:</span> <span class="token punctuation">[</span>{ key<span class="token punctuation">:</span> <span class="token string">\'rmb\'</span><span class="token punctuation">,</span>value<span class="token punctuation">:</span> <span class="token string">\'RMB\'</span> }<span class="token punctuation">,</span>{ key<span class="token punctuation">:</span> <span class="token string">\'dollar\'</span><span class="token punctuation">,</span>value<span class="token punctuation">:</span> <span class="token string">\'Dollar\'</span> }<span class="token punctuation">]</span><span class="token punctuation">,</span>\n                        }<span class="token punctuation">,</span>\n                        rules<span class="token punctuation">:</span> rules<span class="token punctuation">.</span>priceType<span class="token punctuation">,</span>\n                    }<span class="token punctuation">)</span>\n                    <span class="token keyword">const</span> JsxInput <span class="token operator">=</span> formUtils<span class="token punctuation">.</span><span class="token function">renderInputConfig</span><span class="token punctuation">(</span>{\n                        iAntdProps<span class="token punctuation">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'price\'</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token string">\'价格\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                        iFormProps<span class="token punctuation">:</span> {\n                            maxLength<span class="token punctuation">:</span> <span class="token string">\'70\'</span><span class="token punctuation">,</span>\n                        }<span class="token punctuation">,</span>\n                        rules<span class="token punctuation">:</span> rules<span class="token punctuation">.</span>price<span class="token punctuation">,</span>\n                    }<span class="token punctuation">)</span>\n\n                    return <span class="token punctuation">(</span>\n                        <span class="token operator">&lt;</span>Row className<span class="token operator">=</span><span class="token string">"selectAndInput"</span><span class="token operator">></span>\n                            <span class="token operator">&lt;</span>Col span<span class="token operator">=</span>{<span class="token number">6</span> <span class="token operator">+</span> <span class="token number">6</span>}<span class="token operator">></span>\n                                {\n                                    formUtils<span class="token punctuation">.</span><span class="token function">createFormComponent</span><span class="token punctuation">(</span>JsxSelect<span class="token punctuation">,</span>form<span class="token punctuation">,</span>formRef<span class="token punctuation">.</span>uid<span class="token punctuation">,</span>formRef<span class="token punctuation">)</span>\n                                }\n                            <span class="token operator">&lt;</span><span class="token operator">/</span>Col<span class="token operator">></span>\n                            <span class="token operator">&lt;</span>Col span<span class="token operator">=</span>{<span class="token number">7</span>} offset<span class="token operator">=</span>{<span class="token number">1</span>}<span class="token operator">></span>\n                                {\n                                    formUtils<span class="token punctuation">.</span><span class="token function">createFormComponent</span><span class="token punctuation">(</span>JsxInput<span class="token punctuation">,</span>form<span class="token punctuation">,</span>formRef<span class="token punctuation">.</span>uid<span class="token punctuation">,</span>formRef<span class="token punctuation">)</span>\n                                }\n                            <span class="token operator">&lt;</span><span class="token operator">/</span>Col<span class="token operator">></span>\n                        <span class="token operator">&lt;</span><span class="token operator">/</span>Row<span class="token operator">></span>\n                    <span class="token punctuation">)</span>\n                }<span class="token punctuation">,</span>\n            }<span class="token punctuation">,</span>\n        }<span class="token punctuation">)</span>\n        return <span class="token punctuation">[</span>\n            formUtils<span class="token punctuation">.</span><span class="token function">getFormConfig</span><span class="token punctuation">(</span><span class="token string">\'text\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            formUtils<span class="token punctuation">.</span><span class="token function">getFormConfig</span><span class="token punctuation">(</span><span class="token string">\'textarea\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            formUtils<span class="token punctuation">.</span><span class="token function">getFormConfig</span><span class="token punctuation">(</span><span class="token string">\'password\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            formUtils<span class="token punctuation">.</span><span class="token function">getFormConfig</span><span class="token punctuation">(</span><span class="token string">\'numberText\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            formUtils<span class="token punctuation">.</span><span class="token function">getFormConfig</span><span class="token punctuation">(</span><span class="token string">\'numbers\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            formUtils<span class="token punctuation">.</span><span class="token function">getFormConfig</span><span class="token punctuation">(</span><span class="token string">\'selectedItem\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            formUtils<span class="token punctuation">.</span><span class="token function">getFormConfig</span><span class="token punctuation">(</span><span class="token string">\'selectedItemRemote\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            formUtils<span class="token punctuation">.</span><span class="token function">getFormConfig</span><span class="token punctuation">(</span><span class="token string">\'selectedItemMultiple\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            formUtils<span class="token punctuation">.</span><span class="token function">getFormConfig</span><span class="token punctuation">(</span><span class="token string">\'customRenderInput\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            formUtils<span class="token punctuation">.</span><span class="token function">getFormConfig</span><span class="token punctuation">(</span><span class="token string">\'customRender\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            formUtils<span class="token punctuation">.</span><span class="token function">getFormConfig</span><span class="token punctuation">(</span><span class="token string">\'upload\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span>\n    }\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> {\n    return <span class="token punctuation">(</span>\n      <span class="token operator">&lt;</span>Row<span class="token operator">></span>\n        \n         <span class="token operator">&lt;</span>LegionsProForm\n          <span class="token operator">&lt;</span>FormFields<span class="token operator">></span>\n          {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>this<span class="token punctuation">.</span>formRef <span class="token operator">&amp;</span><span class="token operator">&amp;</span> this<span class="token punctuation">.</span>formRef<span class="token punctuation">.</span>viewModel<span class="token punctuation">.</span>InputDataModel}\n          InputDataModel<span class="token operator">=</span>{FormFields}\n          onReady<span class="token operator">=</span>{<span class="token punctuation">(</span>form<span class="token punctuation">,</span>ref<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n              this<span class="token punctuation">.</span>formRef <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>ref<span class="token punctuation">,</span>{ that<span class="token punctuation">:</span> this }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n          }}\n          mapPropsToFields<span class="token operator">=</span>{<span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n              return new <span class="token function">FormFields</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span>\n          }}\n          onFieldsChange<span class="token operator">=</span>{<span class="token punctuation">(</span>props<span class="token punctuation">,</span>formFields<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n              this<span class="token punctuation">.</span>formRef<span class="token punctuation">.</span>store<span class="token punctuation">.</span><span class="token function">updateFormInputData</span><span class="token punctuation">(</span>this<span class="token punctuation">.</span>formRef<span class="token punctuation">.</span>uid<span class="token punctuation">,</span>formFields<span class="token punctuation">)</span>\n          }}\n          group<span class="token operator">=</span>{<span class="token punctuation">[</span>{\n                name<span class="token punctuation">:</span><span class="token string">\'文本输入\'</span><span class="token punctuation">,</span>\n                id<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n                active<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                isFolding<span class="token punctuation">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>\n            }<span class="token punctuation">,</span>{\n                name<span class="token punctuation">:</span><span class="token string">\'下拉框\'</span><span class="token punctuation">,</span>\n                id<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n                active<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                isFolding<span class="token punctuation">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>\n            }<span class="token punctuation">,</span>{\n                name<span class="token punctuation">:</span><span class="token string">\'自定义\'</span><span class="token punctuation">,</span>\n                id<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n                active<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                isFolding<span class="token punctuation">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>\n          }<span class="token punctuation">]</span>}\n          controls<span class="token operator">=</span>{this<span class="token punctuation">.</span><span class="token function">createConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span>}\n          uniqueUid<span class="token operator">=</span><span class="token string">"demo/proForm/one"</span>\n          colCount<span class="token operator">=</span>{<span class="token number">2</span>}\n      <span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>LegionsProForm<span class="token operator">></span>\n      <span class="token operator">&lt;</span>FormItem\n          wrapperCol<span class="token operator">=</span>{{ span<span class="token punctuation">:</span> <span class="token number">12</span><span class="token punctuation">,</span> offset<span class="token punctuation">:</span> <span class="token number">1</span> }}\n        <span class="token operator">></span>\n          <span class="token operator">&lt;</span>Button type<span class="token operator">=</span><span class="token string">"primary"</span> htmlType<span class="token operator">=</span><span class="token string">"submit"</span> onClick<span class="token operator">=</span>{<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span>{\n                  this<span class="token punctuation">.</span>formRef <span class="token operator">&amp;</span><span class="token operator">&amp;</span> this<span class="token punctuation">.</span>formRef<span class="token punctuation">.</span>viewModel<span class="token punctuation">.</span>form<span class="token punctuation">.</span><span class="token function">validateFields</span><span class="token punctuation">(</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span>values<span class="token punctuation">:</span> FormFields<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n\n                        <span class="token keyword">if</span> <span class="token punctuation">(</span>!err<span class="token punctuation">)</span> {\n                            <span class="token operator">/</span><span class="token operator">*</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">,</span>this<span class="token punctuation">.</span>props<span class="token punctuation">.</span>store<span class="token punctuation">.</span>obFormFields<span class="token punctuation">)</span> <span class="token operator">*</span><span class="token operator">/</span>\n                        }\n                        <span class="token keyword">else</span> {\n                           \n                        }\n                        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">,</span>err<span class="token punctuation">,</span><span class="token string">\'values\'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                    }<span class="token punctuation">)</span>\n                }}<span class="token operator">></span>提交<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>\n          <span class="token operator">&lt;</span>Button style<span class="token operator">=</span>{{marginLeft<span class="token punctuation">:</span><span class="token string">\'10px\'</span>}} type<span class="token operator">=</span><span class="token string">"primary"</span> htmlType<span class="token operator">=</span><span class="token string">"submit"</span> onClick<span class="token operator">=</span>{<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span>{\n                    <span class="token keyword">const</span> item <span class="token operator">=</span> this<span class="token punctuation">.</span>formRef<span class="token punctuation">.</span>viewModel<span class="token punctuation">.</span><span class="token function">getFormItemField</span><span class="token punctuation">(</span><span class="token string">\'text\'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                    <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token operator">&amp;</span><span class="token operator">&amp;</span>item<span class="token punctuation">.</span>value instanceof LegionsProForm<span class="token punctuation">.</span>LabelWithInputModel<span class="token punctuation">)</span> {\n                        <span class="token keyword">const</span> disabled <span class="token operator">=</span> item<span class="token punctuation">.</span>value<span class="token punctuation">.</span>iFormProps<span class="token punctuation">.</span>disabled\n                        this<span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span>{\n                            disabledText<span class="token punctuation">:</span> !disabled\n                        }<span class="token punctuation">)</span>\n                        this<span class="token punctuation">.</span>formRef<span class="token punctuation">.</span>methods<span class="token punctuation">.</span><span class="token function">setFormStates</span><span class="token punctuation">(</span><span class="token string">\'text\'</span><span class="token punctuation">,</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n                            <span class="token keyword">if</span> <span class="token punctuation">(</span>value instanceof LegionsProForm<span class="token punctuation">.</span>LabelWithInputModel<span class="token punctuation">)</span> {\n                                value<span class="token punctuation">.</span>iFormProps<span class="token punctuation">.</span>disabled<span class="token operator">=</span>!disabled\n                            }\n                        }<span class="token punctuation">)</span>\n                    }\n                }}<span class="token operator">></span>{!this<span class="token punctuation">.</span>state<span class="token punctuation">.</span>disabledText<span class="token operator">?</span><span class="token string">\'禁用文本框输入\'</span><span class="token punctuation">:</span><span class="token string">\'启用文本框输入\'</span>}<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>\n         <span class="token operator">&lt;</span>Button style<span class="token operator">=</span>{{marginLeft<span class="token punctuation">:</span><span class="token string">\'10px\'</span>}} type<span class="token operator">=</span><span class="token string">"primary"</span> htmlType<span class="token operator">=</span><span class="token string">"submit"</span> onClick<span class="token operator">=</span>{<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span>{\n                  <span class="token keyword">const</span> item <span class="token operator">=</span> this<span class="token punctuation">.</span>formRef<span class="token punctuation">.</span>viewModel<span class="token punctuation">.</span><span class="token function">getFormItemField</span><span class="token punctuation">(</span><span class="token string">\'text\'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                  <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token operator">&amp;</span><span class="token operator">&amp;</span>item<span class="token punctuation">.</span>value<span class="token punctuation">)</span> {\n                        let visibleText <span class="token operator">=</span> item<span class="token punctuation">.</span>value<span class="token punctuation">.</span>iFormProps<span class="token punctuation">.</span>visible<span class="token comment" spellcheck="true">;</span>\n                        <span class="token keyword">if</span> <span class="token punctuation">(</span>visibleText <span class="token operator">==</span><span class="token operator">=</span> void <span class="token number">0</span><span class="token punctuation">)</span> {\n                            visibleText <span class="token operator">=</span> <span class="token boolean">true</span><span class="token comment" spellcheck="true">;</span>\n                        }\n                            this<span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span>{\n                            visibleText<span class="token punctuation">:</span>!visibleText\n                        }<span class="token punctuation">)</span>\n                        this<span class="token punctuation">.</span>formRef<span class="token punctuation">.</span>methods<span class="token punctuation">.</span><span class="token function">setFormStates</span><span class="token punctuation">(</span><span class="token string">\'text\'</span><span class="token punctuation">,</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n                            value<span class="token punctuation">.</span>iFormProps<span class="token punctuation">.</span>visible<span class="token operator">=</span>!visibleText\n                        }<span class="token punctuation">)</span>\n                  }\n                 \n                }}<span class="token operator">></span>{!this<span class="token punctuation">.</span>state<span class="token punctuation">.</span>visibleText<span class="token operator">?</span><span class="token string">\'显示文本框\'</span><span class="token punctuation">:</span><span class="token string">\'隐藏文本框\'</span>}<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>       \n         <span class="token operator">&lt;</span>Button style<span class="token operator">=</span>{{marginLeft<span class="token punctuation">:</span><span class="token string">\'10px\'</span>}} type<span class="token operator">=</span><span class="token string">"primary"</span> htmlType<span class="token operator">=</span><span class="token string">"submit"</span> onClick<span class="token operator">=</span>{<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span>{\n                    <span class="token keyword">const</span> item <span class="token operator">=</span> this<span class="token punctuation">.</span>formRef<span class="token punctuation">.</span>viewModel<span class="token punctuation">.</span><span class="token function">getFormItemField</span><span class="token punctuation">(</span><span class="token string">\'price\'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                    <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token operator">&amp;</span><span class="token operator">&amp;</span>item<span class="token punctuation">.</span>value<span class="token punctuation">)</span> {\n                        \n                        let visible <span class="token operator">=</span> item<span class="token punctuation">.</span>value<span class="token punctuation">.</span>iFormProps<span class="token punctuation">.</span>visible<span class="token comment" spellcheck="true">;</span>\n                        <span class="token keyword">if</span> <span class="token punctuation">(</span>visible <span class="token operator">==</span><span class="token operator">=</span> void <span class="token number">0</span><span class="token punctuation">)</span> {\n                            visible <span class="token operator">=</span> <span class="token boolean">true</span><span class="token comment" spellcheck="true">;</span>\n                        }\n                        this<span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span>{\n                            visible<span class="token punctuation">:</span>!visible\n                        }<span class="token punctuation">)</span>\n                        this<span class="token punctuation">.</span>formRef<span class="token punctuation">.</span>methods<span class="token punctuation">.</span><span class="token function">setFormStates</span><span class="token punctuation">(</span><span class="token string">\'price\'</span><span class="token punctuation">,</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n                                value<span class="token punctuation">.</span>iFormProps<span class="token punctuation">.</span>visible <span class="token operator">=</span> !visible<span class="token comment" spellcheck="true">;</span>\n                        }<span class="token punctuation">)</span>\n                    }\n                }}<span class="token operator">></span>{!this<span class="token punctuation">.</span>state<span class="token punctuation">.</span>visible<span class="token operator">?</span><span class="token string">\'显示价格文本框\'</span><span class="token punctuation">:</span><span class="token string">\'隐藏价格文本框\'</span>}<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>       \n        <span class="token operator">&lt;</span><span class="token operator">/</span>FormItem<span class="token operator">></span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>Row<span class="token operator">></span>\n     \n    <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  }\n}\n<span class="token keyword">const</span> root <span class="token operator">=</span> props <span class="token operator">=</span><span class="token operator">></span> {\n  return <span class="token operator">&lt;</span>ProFormDemo<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>ProFormDemo<span class="token operator">></span><span class="token comment" spellcheck="true">;</span>\n}<span class="token comment" spellcheck="true">;</span>\n<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>React<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>app<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>'}],highlightedCodes:{tsx:'<span class="token keyword">import</span> create <span class="token keyword">from</span> <span class="token string">\'../../../common/components/render.tsx\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> JsonProperty <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'json-mapper-object\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Row <span class="token punctuation">,</span>Col<span class="token punctuation">,</span>Form<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> bind<span class="token punctuation">,</span> observer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'legions/store-react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> LegionsProForm<span class="token punctuation">,</span> LegionsProPageContainer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'legions-pro-design\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadChangeParam <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd/lib/upload/interface\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> FormRuleProperty <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'legions-decorator/async.validator\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> IBaseFormFields<span class="token punctuation">,</span>HlLabeledValue <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'legions-lunar/model\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ClassOf <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'legions-lunar/types/api/typescript\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> legionsThirdpartyPlugin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'legions-thirdparty-plugin\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> legionsThirdpartyMap <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'./constants/legionsConfig\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> FormItem <span class="token operator">=</span> Form<span class="token punctuation">.</span>Item<span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>FormFields<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'../demoTest/model\'</span><span class="token punctuation">;</span> <span class="token comment">// 具体使用请看底部</span>\n\nlegionsThirdpartyPlugin<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n        name<span class="token operator">:</span> <span class="token string">\'dexie\'</span><span class="token punctuation">,</span>\n        url<span class="token operator">:</span><span class="token string">\'https://qa-zy.hoolinks.com/static/plugin/dexie.min.js\'</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">interface</span> <span class="token class-name">IFormFieldUserRenderInput1</span><span class="token punctuation">{</span>\n    currency<span class="token operator">:</span>string<span class="token punctuation">,</span>\n    number<span class="token operator">:</span>number\n<span class="token punctuation">}</span>\n\n<span class="token keyword">interface</span> <span class="token class-name">IProps</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token keyword">interface</span> <span class="token class-name">IState</span><span class="token punctuation">{</span>\n  visibleText<span class="token operator">:</span>boolean<span class="token punctuation">;</span>\n  visible<span class="token operator">:</span>boolean<span class="token punctuation">;</span>\n  disabledText<span class="token operator">:</span>boolean\n<span class="token punctuation">}</span>\n<span class="token keyword">class</span> <span class="token class-name">ProFormDemo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span><span class="token operator">&lt;</span>IProps<span class="token punctuation">,</span>IState<span class="token operator">></span> <span class="token punctuation">{</span>\n  formRef<span class="token operator">:</span> InstanceForm\n  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token operator">:</span> IProps</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token operator">=</span><span class="token punctuation">{</span>\n      visibleText<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n      disabledText<span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>\n      visible<span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n  <span class="token function">createConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> rules <span class="token operator">=</span> FormFields<span class="token punctuation">.</span>initFormRules<span class="token operator">&lt;</span>FormFields<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token operator">></span><span class="token punctuation">(</span>FormFields<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n        <span class="token keyword">const</span> formUtils <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LegionsProForm<span class="token punctuation">.</span>ProFormUtils</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>rules<span class="token punctuation">,</span><span class="token string">\'rules\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        formUtils<span class="token punctuation">.</span><span class="token function">renderInputConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            iAntdProps<span class="token operator">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'text\'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            iFormProps<span class="token operator">:</span> <span class="token punctuation">{</span>\n                <span class="token operator">...</span>formUtils<span class="token punctuation">.</span><span class="token function">createLayout</span><span class="token punctuation">(</span><span class="token string">\'文本框\'</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                maxLength<span class="token operator">:</span> <span class="token string">\'50\'</span><span class="token punctuation">,</span>\n                type<span class="token operator">:</span> <span class="token string">\'text\'</span><span class="token punctuation">,</span>\n                disabled<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            rules<span class="token operator">:</span> rules<span class="token punctuation">.</span>text\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        formUtils<span class="token punctuation">.</span><span class="token function">renderInputConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            iAntdProps<span class="token operator">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'textarea\'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            iFormProps<span class="token operator">:</span> <span class="token punctuation">{</span>\n                <span class="token operator">...</span>formUtils<span class="token punctuation">.</span><span class="token function">createLayout</span><span class="token punctuation">(</span><span class="token string">\'多行文本\'</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                maxLength<span class="token operator">:</span> <span class="token string">\'50\'</span><span class="token punctuation">,</span>\n                type<span class="token operator">:</span> <span class="token string">\'textarea\'</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            rules<span class="token operator">:</span> rules<span class="token punctuation">.</span>textarea\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        formUtils<span class="token punctuation">.</span><span class="token function">renderInputConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            iAntdProps<span class="token operator">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'password\'</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            iFormProps<span class="token operator">:</span> <span class="token punctuation">{</span>\n                <span class="token operator">...</span>formUtils<span class="token punctuation">.</span><span class="token function">createLayout</span><span class="token punctuation">(</span><span class="token string">\'密码\'</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                maxLength<span class="token operator">:</span> <span class="token string">\'50\'</span><span class="token punctuation">,</span>\n                type<span class="token operator">:</span> <span class="token string">\'password\'</span><span class="token punctuation">,</span>\n\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            rules<span class="token operator">:</span> rules<span class="token punctuation">.</span>password\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        formUtils<span class="token punctuation">.</span><span class="token function">renderInputConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            iAntdProps<span class="token operator">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'numberText\'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            iFormProps<span class="token operator">:</span> <span class="token punctuation">{</span>\n                <span class="token operator">...</span>formUtils<span class="token punctuation">.</span><span class="token function">createLayout</span><span class="token punctuation">(</span><span class="token string">\'数字文本\'</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                maxLength<span class="token operator">:</span> <span class="token string">\'50\'</span><span class="token punctuation">,</span>\n                type<span class="token operator">:</span> <span class="token string">\'number\'</span><span class="token punctuation">,</span>\n\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            rules<span class="token operator">:</span> rules<span class="token punctuation">.</span>numberText\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        formUtils<span class="token punctuation">.</span><span class="token function">renderInputNumberConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            iAntdProps<span class="token operator">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'numbers\'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            iFormProps<span class="token operator">:</span> <span class="token punctuation">{</span>\n                <span class="token operator">...</span>formUtils<span class="token punctuation">.</span><span class="token function">createLayout</span><span class="token punctuation">(</span><span class="token string">\'数字\'</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            rules<span class="token operator">:</span> rules<span class="token punctuation">.</span>numbers\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        formUtils<span class="token punctuation">.</span><span class="token function">renderSelectConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            iAntdProps<span class="token operator">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'selectedItem\'</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token string">\'请选择\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            iFormProps<span class="token operator">:</span> <span class="token punctuation">{</span>\n                <span class="token operator">...</span>formUtils<span class="token punctuation">.</span><span class="token function">createLayout</span><span class="token punctuation">(</span><span class="token string">\'普通下拉\'</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span> <span class="token operator">*</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                options<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n                    value<span class="token operator">:</span> <span class="token string">\'订单\'</span><span class="token punctuation">,</span>\n                    label<span class="token operator">:</span> <span class="token string">\'订单1\'</span><span class="token punctuation">,</span>\n                    key<span class="token operator">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n                    keyValue<span class="token operator">:</span> <span class="token string">\'222\'</span><span class="token punctuation">,</span>\n                    disabled<span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token punctuation">{</span>\n                    value<span class="token operator">:</span> <span class="token string">\'工单\'</span><span class="token punctuation">,</span>\n                    label<span class="token operator">:</span> <span class="token string">\'工单1\'</span><span class="token punctuation">,</span>\n                    key<span class="token operator">:</span><span class="token string">\'2\'</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                size<span class="token operator">:</span> <span class="token string">\'default\'</span><span class="token punctuation">,</span>\n                labelInValue<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            rules<span class="token operator">:</span> rules<span class="token punctuation">.</span>selectedItem<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        formUtils<span class="token punctuation">.</span><span class="token function">renderSelectConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            iAntdProps<span class="token operator">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'selectedItemRemote\'</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token string">\'请选择\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            iFormProps<span class="token operator">:</span> <span class="token punctuation">{</span>\n                <span class="token operator">...</span>formUtils<span class="token punctuation">.</span><span class="token function">createLayout</span><span class="token punctuation">(</span><span class="token string">\'远程下拉\'</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span> <span class="token operator">*</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                allowClear<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                remote<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                pageSize<span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span>\n                autoQuery<span class="token operator">:</span> <span class="token punctuation">{</span>\n                    <span class="token function-variable function">params</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token parameter">pageIndex<span class="token punctuation">,</span>pageSize<span class="token punctuation">,</span>keywords</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                        <span class="token keyword">return</span> <span class="token punctuation">{</span>\n                            keyword<span class="token operator">:</span> keywords<span class="token punctuation">,</span>\n                            current<span class="token operator">:</span> pageIndex<span class="token punctuation">,</span>\n                            size<span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span>\n                            templateCode<span class="token operator">:</span> <span class="token string">\'Country\'</span><span class="token punctuation">,</span>\n                            pageIndex<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n                            pageSize<span class="token punctuation">,</span>\n                            defaultKeyWords<span class="token operator">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n                        <span class="token punctuation">}</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    ApiUrl<span class="token operator">:</span> <span class="token string">\'https://gateway.hoolinks.com/api/gateway\'</span><span class="token punctuation">,</span>\n                    method<span class="token operator">:</span> <span class="token string">\'post\'</span><span class="token punctuation">,</span>\n                    token<span class="token operator">:</span> <span class="token string">\'SESSION=0cef87fd-a1c3-4d32-8273-45402da62d56;\'</span><span class="token punctuation">,</span>\n                    options<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        <span class="token string">\'api-target\'</span><span class="token operator">:</span><span class="token string">\'https://qa-scm.hoolinks.com//jg/basic/cusinfo/search.json\'</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    <span class="token function-variable function">mappingEntity</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">that<span class="token punctuation">,</span>res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                        that<span class="token punctuation">.</span>total <span class="token operator">=</span> res<span class="token punctuation">[</span><span class="token string">\'total\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n                        that<span class="token punctuation">.</span>current <span class="token operator">=</span> res<span class="token punctuation">[</span><span class="token string">\'current\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n                        that<span class="token punctuation">.</span>pageSize <span class="token operator">=</span> res<span class="token punctuation">[</span><span class="token string">\'size\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n                        <span class="token keyword">const</span> data<span class="token operator">=</span> res<span class="token punctuation">[</span><span class="token string">\'data\'</span><span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">||</span><span class="token punctuation">[</span><span class="token punctuation">]</span>\n                        <span class="token keyword">return</span> data<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                            <span class="token keyword">return</span> <span class="token punctuation">{</span>\n                                key<span class="token operator">:</span> item<span class="token punctuation">[</span><span class="token string">\'code\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                                value<span class="token operator">:</span>item<span class="token punctuation">[</span><span class="token string">\'name\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                            <span class="token punctuation">}</span>\n                        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    <span class="token function-variable function">transform</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                        <span class="token keyword">let</span> arr <span class="token operator">=</span> value<span class="token punctuation">.</span>value <span class="token operator">?</span> value<span class="token punctuation">.</span>value<span class="token punctuation">.</span>result <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n                        <span class="token keyword">return</span> <span class="token punctuation">{</span>\n                            data<span class="token operator">:</span> arr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                                <span class="token keyword">return</span> <span class="token punctuation">{</span>\n                                    key<span class="token operator">:</span> item<span class="token punctuation">.</span>key<span class="token punctuation">,</span>\n                                    value<span class="token operator">:</span> <span class="token string">\'(\'</span> <span class="token operator">+</span> item<span class="token punctuation">.</span>key <span class="token operator">+</span> <span class="token string">\')\'</span> <span class="token operator">+</span> item<span class="token punctuation">.</span>value<span class="token punctuation">,</span>\n                                <span class="token punctuation">}</span>\n                            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                            total<span class="token operator">:</span> value<span class="token punctuation">.</span>value <span class="token operator">?</span> value<span class="token punctuation">.</span>value<span class="token punctuation">.</span>total <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n                        <span class="token punctuation">}</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                paging<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                size<span class="token operator">:</span> <span class="token string">\'default\'</span><span class="token punctuation">,</span>\n                labelInValue<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            rules<span class="token operator">:</span> rules<span class="token punctuation">.</span>selectedItem<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        formUtils<span class="token punctuation">.</span><span class="token function">renderSelectConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            iAntdProps<span class="token operator">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'selectedItemMultiple\'</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">\'下拉多选\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            iFormProps<span class="token operator">:</span> <span class="token punctuation">{</span>\n                <span class="token operator">...</span>formUtils<span class="token punctuation">.</span><span class="token function">createLayout</span><span class="token punctuation">(</span><span class="token string">\'下拉多选\'</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token operator">*</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                allowClear<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                options<span class="token operator">:</span> <span class="token punctuation">[</span>\n                    <span class="token punctuation">{</span>\n                        value<span class="token operator">:</span> <span class="token string">\'react\'</span><span class="token punctuation">,</span>\n                        key<span class="token operator">:</span> <span class="token string">\'2\'</span><span class="token punctuation">,</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    <span class="token punctuation">{</span>\n                        value<span class="token operator">:</span> <span class="token string">\'angular\'</span><span class="token punctuation">,</span>\n                        key<span class="token operator">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    <span class="token punctuation">{</span>\n                        value<span class="token operator">:</span> <span class="token string">\'vue\'</span><span class="token punctuation">,</span>\n                        key<span class="token operator">:</span> <span class="token string">\'3\'</span><span class="token punctuation">,</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token punctuation">]</span><span class="token punctuation">,</span>\n                maxTagCount<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n                labelInValue<span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>\n                mode<span class="token operator">:</span> <span class="token string">\'multiple\'</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            rules<span class="token operator">:</span> rules<span class="token punctuation">.</span>selectedItemMultiple<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        formUtils<span class="token punctuation">.</span><span class="token function">renderUploadConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            iAntdProps<span class="token operator">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'upload\'</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">\'文件上传\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            iFormProps<span class="token operator">:</span> <span class="token punctuation">{</span>\n                <span class="token operator">...</span>formUtils<span class="token punctuation">.</span><span class="token function">createLayout</span><span class="token punctuation">(</span><span class="token string">\'文件上传\'</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                maxFileCount<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n                isDragger<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                prompt<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>扫去窗上的尘埃，才可以看到窗外的美景<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            rules<span class="token operator">:</span> rules<span class="token punctuation">.</span>upload<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        formUtils<span class="token punctuation">.</span><span class="token function">renderCustomConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            <span class="token comment">// 自定义组件容器div属性设置 {span:24} 单独占一行 </span>\n            <span class="token comment">// 此属性定义是标识整个容器组件</span>\n            iAntdProps<span class="token operator">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'customRenderInput\'</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            iFormProps<span class="token operator">:</span> <span class="token punctuation">{</span>\n                <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">form<span class="token punctuation">,</span>antdProps<span class="token punctuation">,</span>rule<span class="token punctuation">,</span>formRef</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                    <span class="token keyword">const</span> jsxInput <span class="token operator">=</span> formUtils<span class="token punctuation">.</span><span class="token function">renderInputConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                        iAntdProps<span class="token operator">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'customRenderInput1\'</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token string">\'自定义文本组件\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                        iFormProps<span class="token operator">:</span> <span class="token punctuation">{</span>\n                            <span class="token operator">...</span>formUtils<span class="token punctuation">.</span><span class="token function">createLayout</span><span class="token punctuation">(</span><span class="token string">\'自定义组件\'</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                            type<span class="token operator">:</span> <span class="token string">\'password\'</span><span class="token punctuation">,</span>\n                        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                        rules<span class="token operator">:</span>rules<span class="token punctuation">.</span>customRenderInput1\n                    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n                    <span class="token keyword">return</span> formUtils<span class="token punctuation">.</span><span class="token function">createFormComponent</span><span class="token punctuation">(</span>jsxInput<span class="token punctuation">,</span>form<span class="token punctuation">,</span>formRef<span class="token punctuation">.</span>uid<span class="token punctuation">,</span>formRef<span class="token punctuation">)</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        formUtils<span class="token punctuation">.</span><span class="token function">renderCustomConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            iAntdProps<span class="token operator">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'customRender\'</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            iFormProps<span class="token operator">:</span> <span class="token punctuation">{</span>\n                <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">form<span class="token punctuation">,</span>antdProps<span class="token punctuation">,</span>rule<span class="token punctuation">,</span>formRef</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                    <span class="token keyword">const</span> JsxSelect <span class="token operator">=</span> formUtils<span class="token punctuation">.</span><span class="token function">renderSelectConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                        iAntdProps<span class="token operator">:</span> <span class="token punctuation">{</span>\n                            <span class="token operator">...</span>formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'priceType\'</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token string">\'请选择\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                            className<span class="token operator">:</span> antdProps<span class="token punctuation">.</span>className<span class="token punctuation">,</span>\n                        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                        iFormProps<span class="token operator">:</span> <span class="token punctuation">{</span>\n                            <span class="token operator">...</span>formUtils<span class="token punctuation">.</span><span class="token function">createLayout</span><span class="token punctuation">(</span><span class="token string">\'价格\'</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">2</span> <span class="token operator">*</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                            options<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> key<span class="token operator">:</span> <span class="token string">\'rmb\'</span><span class="token punctuation">,</span>value<span class="token operator">:</span> <span class="token string">\'RMB\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span> key<span class="token operator">:</span> <span class="token string">\'dollar\'</span><span class="token punctuation">,</span>value<span class="token operator">:</span> <span class="token string">\'Dollar\'</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                        rules<span class="token operator">:</span> rules<span class="token punctuation">.</span>priceType<span class="token punctuation">,</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n                    <span class="token keyword">const</span> JsxInput <span class="token operator">=</span> formUtils<span class="token punctuation">.</span><span class="token function">renderInputConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                        iAntdProps<span class="token operator">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'price\'</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token string">\'价格\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                        iFormProps<span class="token operator">:</span> <span class="token punctuation">{</span>\n                            maxLength<span class="token operator">:</span> <span class="token string">\'70\'</span><span class="token punctuation">,</span>\n                        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                        rules<span class="token operator">:</span> rules<span class="token punctuation">.</span>price<span class="token punctuation">,</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n                    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Row</span></span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selectAndInput<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Col</span></span> <span class="token attr-name">span</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">6</span> <span class="token operator">+</span> <span class="token number">6</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n                                <span class="token punctuation">{</span>\n                                    formUtils<span class="token punctuation">.</span><span class="token function">createFormComponent</span><span class="token punctuation">(</span>JsxSelect<span class="token punctuation">,</span>form<span class="token punctuation">,</span>formRef<span class="token punctuation">.</span>uid<span class="token punctuation">,</span>formRef<span class="token punctuation">)</span>\n                                <span class="token punctuation">}</span>\n                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Col</span></span><span class="token punctuation">></span></span>\n                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Col</span></span> <span class="token attr-name">span</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">7</span><span class="token punctuation">}</span></span> <span class="token attr-name">offset</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n                                <span class="token punctuation">{</span>\n                                    formUtils<span class="token punctuation">.</span><span class="token function">createFormComponent</span><span class="token punctuation">(</span>JsxInput<span class="token punctuation">,</span>form<span class="token punctuation">,</span>formRef<span class="token punctuation">.</span>uid<span class="token punctuation">,</span>formRef<span class="token punctuation">)</span>\n                                <span class="token punctuation">}</span>\n                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Col</span></span><span class="token punctuation">></span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Row</span></span><span class="token punctuation">></span></span>\n                    <span class="token punctuation">)</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        <span class="token keyword">return</span> <span class="token punctuation">[</span>\n            formUtils<span class="token punctuation">.</span><span class="token function">getFormConfig</span><span class="token punctuation">(</span><span class="token string">\'text\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            formUtils<span class="token punctuation">.</span><span class="token function">getFormConfig</span><span class="token punctuation">(</span><span class="token string">\'textarea\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            formUtils<span class="token punctuation">.</span><span class="token function">getFormConfig</span><span class="token punctuation">(</span><span class="token string">\'password\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            formUtils<span class="token punctuation">.</span><span class="token function">getFormConfig</span><span class="token punctuation">(</span><span class="token string">\'numberText\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            formUtils<span class="token punctuation">.</span><span class="token function">getFormConfig</span><span class="token punctuation">(</span><span class="token string">\'numbers\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            formUtils<span class="token punctuation">.</span><span class="token function">getFormConfig</span><span class="token punctuation">(</span><span class="token string">\'selectedItem\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            formUtils<span class="token punctuation">.</span><span class="token function">getFormConfig</span><span class="token punctuation">(</span><span class="token string">\'selectedItemRemote\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            formUtils<span class="token punctuation">.</span><span class="token function">getFormConfig</span><span class="token punctuation">(</span><span class="token string">\'selectedItemMultiple\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            formUtils<span class="token punctuation">.</span><span class="token function">getFormConfig</span><span class="token punctuation">(</span><span class="token string">\'customRenderInput\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            formUtils<span class="token punctuation">.</span><span class="token function">getFormConfig</span><span class="token punctuation">(</span><span class="token string">\'customRender\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            formUtils<span class="token punctuation">.</span><span class="token function">getFormConfig</span><span class="token punctuation">(</span><span class="token string">\'upload\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span>\n    <span class="token punctuation">}</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Row</span></span><span class="token punctuation">></span></span>\n        \n         <span class="token operator">&lt;</span>LegionsProForm\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormFields</span></span><span class="token punctuation">></span></span>\n          <span class="token punctuation">{</span><span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>formRef <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>formRef<span class="token punctuation">.</span>viewModel<span class="token punctuation">.</span>InputDataModel<span class="token punctuation">}</span>\n          InputDataModel<span class="token operator">=</span><span class="token punctuation">{</span>FormFields<span class="token punctuation">}</span>\n          onReady<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">form<span class="token punctuation">,</span>ref</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n              <span class="token keyword">this</span><span class="token punctuation">.</span>formRef <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>ref<span class="token punctuation">,</span><span class="token punctuation">{</span> that<span class="token operator">:</span> <span class="token keyword">this</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          mapPropsToFields<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n              <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">FormFields</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          onFieldsChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span>formFields</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n              <span class="token keyword">this</span><span class="token punctuation">.</span>formRef<span class="token punctuation">.</span>store<span class="token punctuation">.</span><span class="token function">updateFormInputData</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>formRef<span class="token punctuation">.</span>uid<span class="token punctuation">,</span>formFields<span class="token punctuation">)</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          group<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token punctuation">{</span>\n                name<span class="token operator">:</span><span class="token string">\'文本输入\'</span><span class="token punctuation">,</span>\n                id<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n                active<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                isFolding<span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>\n                name<span class="token operator">:</span><span class="token string">\'下拉框\'</span><span class="token punctuation">,</span>\n                id<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n                active<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                isFolding<span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>\n                name<span class="token operator">:</span><span class="token string">\'自定义\'</span><span class="token punctuation">,</span>\n                id<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n                active<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                isFolding<span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span>\n          controls<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n          uniqueUid<span class="token operator">=</span><span class="token string">"demo/proForm/one"</span>\n          colCount<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span>\n      <span class="token operator">></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">LegionsProForm</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormItem</span></span>\n          <span class="token attr-name">wrapperCol</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> span<span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span> offset<span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">></span></span>\n          <span class="token operator">&lt;</span>Button type<span class="token operator">=</span><span class="token string">"primary"</span> htmlType<span class="token operator">=</span><span class="token string">"submit"</span> onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">{</span>\n                  <span class="token keyword">this</span><span class="token punctuation">.</span>formRef <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>formRef<span class="token punctuation">.</span>viewModel<span class="token punctuation">.</span>form<span class="token punctuation">.</span><span class="token function">validateFields</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>values<span class="token operator">:</span> FormFields</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n\n                        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                            <span class="token comment">/*  console.log(values,this.props.store.obFormFields) */</span>\n                        <span class="token punctuation">}</span>\n                        <span class="token keyword">else</span> <span class="token punctuation">{</span>\n                           \n                        <span class="token punctuation">}</span>\n                        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">,</span>err<span class="token punctuation">,</span><span class="token string">\'values\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n                <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">></span>提交<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n          <span class="token operator">&lt;</span>Button style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>marginLeft<span class="token operator">:</span><span class="token string">\'10px\'</span><span class="token punctuation">}</span><span class="token punctuation">}</span> type<span class="token operator">=</span><span class="token string">"primary"</span> htmlType<span class="token operator">=</span><span class="token string">"submit"</span> onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">{</span>\n                    <span class="token keyword">const</span> item <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>formRef<span class="token punctuation">.</span>viewModel<span class="token punctuation">.</span><span class="token function">getFormItemField</span><span class="token punctuation">(</span><span class="token string">\'text\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token operator">&amp;&amp;</span>item<span class="token punctuation">.</span>value <span class="token keyword">instanceof</span> <span class="token class-name">LegionsProForm<span class="token punctuation">.</span>LabelWithInputModel</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                        <span class="token keyword">const</span> disabled <span class="token operator">=</span> item<span class="token punctuation">.</span>value<span class="token punctuation">.</span>iFormProps<span class="token punctuation">.</span>disabled\n                        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                            disabledText<span class="token operator">:</span> <span class="token operator">!</span>disabled\n                        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n                        <span class="token keyword">this</span><span class="token punctuation">.</span>formRef<span class="token punctuation">.</span>methods<span class="token punctuation">.</span><span class="token function">setFormStates</span><span class="token punctuation">(</span><span class="token string">\'text\'</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                            <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token keyword">instanceof</span> <span class="token class-name">LegionsProForm<span class="token punctuation">.</span>LabelWithInputModel</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                                value<span class="token punctuation">.</span>iFormProps<span class="token punctuation">.</span>disabled<span class="token operator">=</span><span class="token operator">!</span>disabled\n                            <span class="token punctuation">}</span>\n                        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">></span><span class="token punctuation">{</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>disabledText<span class="token operator">?</span><span class="token string">\'禁用文本框输入\'</span><span class="token operator">:</span><span class="token string">\'启用文本框输入\'</span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n         <span class="token operator">&lt;</span>Button style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>marginLeft<span class="token operator">:</span><span class="token string">\'10px\'</span><span class="token punctuation">}</span><span class="token punctuation">}</span> type<span class="token operator">=</span><span class="token string">"primary"</span> htmlType<span class="token operator">=</span><span class="token string">"submit"</span> onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">{</span>\n                  <span class="token keyword">const</span> item <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>formRef<span class="token punctuation">.</span>viewModel<span class="token punctuation">.</span><span class="token function">getFormItemField</span><span class="token punctuation">(</span><span class="token string">\'text\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                  <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token operator">&amp;&amp;</span>item<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                        <span class="token keyword">let</span> visibleText <span class="token operator">=</span> item<span class="token punctuation">.</span>value<span class="token punctuation">.</span>iFormProps<span class="token punctuation">.</span>visible<span class="token punctuation">;</span>\n                        <span class="token keyword">if</span> <span class="token punctuation">(</span>visibleText <span class="token operator">===</span> <span class="token keyword">void</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                            visibleText <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n                        <span class="token punctuation">}</span>\n                            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                            visibleText<span class="token operator">:</span><span class="token operator">!</span>visibleText\n                        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n                        <span class="token keyword">this</span><span class="token punctuation">.</span>formRef<span class="token punctuation">.</span>methods<span class="token punctuation">.</span><span class="token function">setFormStates</span><span class="token punctuation">(</span><span class="token string">\'text\'</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                            value<span class="token punctuation">.</span>iFormProps<span class="token punctuation">.</span>visible<span class="token operator">=</span><span class="token operator">!</span>visibleText\n                        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n                  <span class="token punctuation">}</span>\n                 \n                <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">></span><span class="token punctuation">{</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>visibleText<span class="token operator">?</span><span class="token string">\'显示文本框\'</span><span class="token operator">:</span><span class="token string">\'隐藏文本框\'</span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>       \n         <span class="token operator">&lt;</span>Button style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>marginLeft<span class="token operator">:</span><span class="token string">\'10px\'</span><span class="token punctuation">}</span><span class="token punctuation">}</span> type<span class="token operator">=</span><span class="token string">"primary"</span> htmlType<span class="token operator">=</span><span class="token string">"submit"</span> onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">{</span>\n                    <span class="token keyword">const</span> item <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>formRef<span class="token punctuation">.</span>viewModel<span class="token punctuation">.</span><span class="token function">getFormItemField</span><span class="token punctuation">(</span><span class="token string">\'price\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token operator">&amp;&amp;</span>item<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                        \n                        <span class="token keyword">let</span> visible <span class="token operator">=</span> item<span class="token punctuation">.</span>value<span class="token punctuation">.</span>iFormProps<span class="token punctuation">.</span>visible<span class="token punctuation">;</span>\n                        <span class="token keyword">if</span> <span class="token punctuation">(</span>visible <span class="token operator">===</span> <span class="token keyword">void</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                            visible <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n                        <span class="token punctuation">}</span>\n                        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                            visible<span class="token operator">:</span><span class="token operator">!</span>visible\n                        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n                        <span class="token keyword">this</span><span class="token punctuation">.</span>formRef<span class="token punctuation">.</span>methods<span class="token punctuation">.</span><span class="token function">setFormStates</span><span class="token punctuation">(</span><span class="token string">\'price\'</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                                value<span class="token punctuation">.</span>iFormProps<span class="token punctuation">.</span>visible <span class="token operator">=</span> <span class="token operator">!</span>visible<span class="token punctuation">;</span>\n                        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">></span><span class="token punctuation">{</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>visible<span class="token operator">?</span><span class="token string">\'显示价格文本框\'</span><span class="token operator">:</span><span class="token string">\'隐藏价格文本框\'</span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>       \n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">FormItem</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Row</span></span><span class="token punctuation">></span></span>\n     \n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">const</span> <span class="token function-variable function">root</span> <span class="token operator">=</span> <span class="token parameter">props</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ProFormDemo</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ProFormDemo</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>React<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>app<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>',jsx:'<span class="token keyword">import</span> create <span class="token keyword">from</span> <span class="token string">\'../../../common/components/render.tsx\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Row<span class="token punctuation">,</span> Col<span class="token punctuation">,</span> Form <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> LegionsProForm <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'legions-pro-design\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> legionsThirdpartyPlugin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'legions-thirdparty-plugin\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> FormItem <span class="token operator">=</span> Form<span class="token punctuation">.</span>Item<span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> FormFields <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'../demoTest/model\'</span><span class="token punctuation">;</span> <span class="token comment">// 具体使用请看底部</span>\n\nlegionsThirdpartyPlugin<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    name<span class="token operator">:</span> <span class="token string">\'dexie\'</span><span class="token punctuation">,</span>\n    url<span class="token operator">:</span> <span class="token string">\'https://qa-zy.hoolinks.com/static/plugin/dexie.min.js\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">ProFormDemo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span>\n      visibleText<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n      disabledText<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      visible<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">createConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> rules <span class="token operator">=</span> FormFields<span class="token punctuation">.</span><span class="token function">initFormRules</span><span class="token punctuation">(</span>FormFields<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> formUtils <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LegionsProForm<span class="token punctuation">.</span>ProFormUtils</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>rules<span class="token punctuation">,</span> <span class="token string">\'rules\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    formUtils<span class="token punctuation">.</span><span class="token function">renderInputConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      iAntdProps<span class="token operator">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'text\'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      iFormProps<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token operator">...</span>formUtils<span class="token punctuation">.</span><span class="token function">createLayout</span><span class="token punctuation">(</span><span class="token string">\'文本框\'</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        maxLength<span class="token operator">:</span> <span class="token string">\'50\'</span><span class="token punctuation">,</span>\n        type<span class="token operator">:</span> <span class="token string">\'text\'</span><span class="token punctuation">,</span>\n        disabled<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      rules<span class="token operator">:</span> rules<span class="token punctuation">.</span>text<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    formUtils<span class="token punctuation">.</span><span class="token function">renderInputConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      iAntdProps<span class="token operator">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'textarea\'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      iFormProps<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token operator">...</span>formUtils<span class="token punctuation">.</span><span class="token function">createLayout</span><span class="token punctuation">(</span><span class="token string">\'多行文本\'</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        maxLength<span class="token operator">:</span> <span class="token string">\'50\'</span><span class="token punctuation">,</span>\n        type<span class="token operator">:</span> <span class="token string">\'textarea\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      rules<span class="token operator">:</span> rules<span class="token punctuation">.</span>textarea<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    formUtils<span class="token punctuation">.</span><span class="token function">renderInputConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      iAntdProps<span class="token operator">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'password\'</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      iFormProps<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token operator">...</span>formUtils<span class="token punctuation">.</span><span class="token function">createLayout</span><span class="token punctuation">(</span><span class="token string">\'密码\'</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">,</span> maxLength<span class="token operator">:</span> <span class="token string">\'50\'</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">\'password\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      rules<span class="token operator">:</span> rules<span class="token punctuation">.</span>password<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    formUtils<span class="token punctuation">.</span><span class="token function">renderInputConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      iAntdProps<span class="token operator">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'numberText\'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      iFormProps<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token operator">...</span>formUtils<span class="token punctuation">.</span><span class="token function">createLayout</span><span class="token punctuation">(</span><span class="token string">\'数字文本\'</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">,</span> maxLength<span class="token operator">:</span> <span class="token string">\'50\'</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">\'number\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      rules<span class="token operator">:</span> rules<span class="token punctuation">.</span>numberText<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    formUtils<span class="token punctuation">.</span><span class="token function">renderInputNumberConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      iAntdProps<span class="token operator">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'numbers\'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      iFormProps<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token operator">...</span>formUtils<span class="token punctuation">.</span><span class="token function">createLayout</span><span class="token punctuation">(</span><span class="token string">\'数字\'</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      rules<span class="token operator">:</span> rules<span class="token punctuation">.</span>numbers<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    formUtils<span class="token punctuation">.</span><span class="token function">renderSelectConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      iAntdProps<span class="token operator">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'selectedItem\'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">\'请选择\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      iFormProps<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token operator">...</span>formUtils<span class="token punctuation">.</span><span class="token function">createLayout</span><span class="token punctuation">(</span><span class="token string">\'普通下拉\'</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token operator">*</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        options<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            value<span class="token operator">:</span> <span class="token string">\'订单\'</span><span class="token punctuation">,</span>\n            label<span class="token operator">:</span> <span class="token string">\'订单1\'</span><span class="token punctuation">,</span>\n            key<span class="token operator">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n            keyValue<span class="token operator">:</span> <span class="token string">\'222\'</span><span class="token punctuation">,</span>\n            disabled<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            value<span class="token operator">:</span> <span class="token string">\'工单\'</span><span class="token punctuation">,</span>\n            label<span class="token operator">:</span> <span class="token string">\'工单1\'</span><span class="token punctuation">,</span>\n            key<span class="token operator">:</span> <span class="token string">\'2\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        size<span class="token operator">:</span> <span class="token string">\'default\'</span><span class="token punctuation">,</span>\n        labelInValue<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      rules<span class="token operator">:</span> rules<span class="token punctuation">.</span>selectedItem<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    formUtils<span class="token punctuation">.</span><span class="token function">renderSelectConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      iAntdProps<span class="token operator">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'selectedItemRemote\'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">\'请选择\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      iFormProps<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token operator">...</span>formUtils<span class="token punctuation">.</span><span class="token function">createLayout</span><span class="token punctuation">(</span><span class="token string">\'远程下拉\'</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token operator">*</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        allowClear<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        remote<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        pageSize<span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span>\n        autoQuery<span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token function-variable function">params</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">pageIndex<span class="token punctuation">,</span> pageSize<span class="token punctuation">,</span> keywords</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token punctuation">{</span>\n              keyword<span class="token operator">:</span> keywords<span class="token punctuation">,</span>\n              current<span class="token operator">:</span> pageIndex<span class="token punctuation">,</span>\n              size<span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span>\n              templateCode<span class="token operator">:</span> <span class="token string">\'Country\'</span><span class="token punctuation">,</span>\n              pageIndex<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n              pageSize<span class="token punctuation">,</span>\n              defaultKeyWords<span class="token operator">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          ApiUrl<span class="token operator">:</span> <span class="token string">\'https://gateway.hoolinks.com/api/gateway\'</span><span class="token punctuation">,</span>\n          method<span class="token operator">:</span> <span class="token string">\'post\'</span><span class="token punctuation">,</span>\n          token<span class="token operator">:</span> <span class="token string">\'SESSION=0cef87fd-a1c3-4d32-8273-45402da62d56;\'</span><span class="token punctuation">,</span>\n          options<span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token string">\'api-target\'</span><span class="token operator">:</span> <span class="token string">\'https://qa-scm.hoolinks.com//jg/basic/cusinfo/search.json\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token function-variable function">mappingEntity</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">that<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            that<span class="token punctuation">.</span>total <span class="token operator">=</span> res<span class="token punctuation">[</span><span class="token string">\'total\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n            that<span class="token punctuation">.</span>current <span class="token operator">=</span> res<span class="token punctuation">[</span><span class="token string">\'current\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n            that<span class="token punctuation">.</span>pageSize <span class="token operator">=</span> res<span class="token punctuation">[</span><span class="token string">\'size\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n            <span class="token keyword">const</span> data <span class="token operator">=</span> res<span class="token punctuation">[</span><span class="token string">\'data\'</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n            <span class="token keyword">return</span> data<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n              <span class="token keyword">return</span> <span class="token punctuation">{</span>\n                key<span class="token operator">:</span> item<span class="token punctuation">[</span><span class="token string">\'code\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                value<span class="token operator">:</span> item<span class="token punctuation">[</span><span class="token string">\'name\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token function-variable function">transform</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">let</span> arr <span class="token operator">=</span> value<span class="token punctuation">.</span>value <span class="token operator">?</span> value<span class="token punctuation">.</span>value<span class="token punctuation">.</span>result <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n            <span class="token keyword">return</span> <span class="token punctuation">{</span>\n              data<span class="token operator">:</span> arr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                <span class="token keyword">return</span> <span class="token punctuation">{</span>\n                  key<span class="token operator">:</span> item<span class="token punctuation">.</span>key<span class="token punctuation">,</span>\n                  value<span class="token operator">:</span> <span class="token string">\'(\'</span> <span class="token operator">+</span> item<span class="token punctuation">.</span>key <span class="token operator">+</span> <span class="token string">\')\'</span> <span class="token operator">+</span> item<span class="token punctuation">.</span>value<span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">;</span>\n              <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n              total<span class="token operator">:</span> value<span class="token punctuation">.</span>value <span class="token operator">?</span> value<span class="token punctuation">.</span>value<span class="token punctuation">.</span>total <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        paging<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        size<span class="token operator">:</span> <span class="token string">\'default\'</span><span class="token punctuation">,</span>\n        labelInValue<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      rules<span class="token operator">:</span> rules<span class="token punctuation">.</span>selectedItem<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    formUtils<span class="token punctuation">.</span><span class="token function">renderSelectConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      iAntdProps<span class="token operator">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'selectedItemMultiple\'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">\'下拉多选\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      iFormProps<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token operator">...</span>formUtils<span class="token punctuation">.</span><span class="token function">createLayout</span><span class="token punctuation">(</span><span class="token string">\'下拉多选\'</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token operator">*</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        allowClear<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        options<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            value<span class="token operator">:</span> <span class="token string">\'react\'</span><span class="token punctuation">,</span>\n            key<span class="token operator">:</span> <span class="token string">\'2\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            value<span class="token operator">:</span> <span class="token string">\'angular\'</span><span class="token punctuation">,</span>\n            key<span class="token operator">:</span> <span class="token string">\'1\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            value<span class="token operator">:</span> <span class="token string">\'vue\'</span><span class="token punctuation">,</span>\n            key<span class="token operator">:</span> <span class="token string">\'3\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        maxTagCount<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n        labelInValue<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        mode<span class="token operator">:</span> <span class="token string">\'multiple\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      rules<span class="token operator">:</span> rules<span class="token punctuation">.</span>selectedItemMultiple<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    formUtils<span class="token punctuation">.</span><span class="token function">renderUploadConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      iAntdProps<span class="token operator">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'upload\'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">\'文件上传\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      iFormProps<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token operator">...</span>formUtils<span class="token punctuation">.</span><span class="token function">createLayout</span><span class="token punctuation">(</span><span class="token string">\'文件上传\'</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        maxFileCount<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n        isDragger<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        prompt<span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>扫去窗上的尘埃，才可以看到窗外的美景<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      rules<span class="token operator">:</span> rules<span class="token punctuation">.</span>upload<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    formUtils<span class="token punctuation">.</span><span class="token function">renderCustomConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token comment">// 自定义组件容器div属性设置 {span:24} 单独占一行</span>\n      <span class="token comment">// 此属性定义是标识整个容器组件</span>\n      iAntdProps<span class="token operator">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'customRenderInput\'</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      iFormProps<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">form<span class="token punctuation">,</span> antdProps<span class="token punctuation">,</span> rule<span class="token punctuation">,</span> formRef</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          <span class="token keyword">const</span> jsxInput <span class="token operator">=</span> formUtils<span class="token punctuation">.</span><span class="token function">renderInputConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            iAntdProps<span class="token operator">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'customRenderInput1\'</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">\'自定义文本组件\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            iFormProps<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token operator">...</span>formUtils<span class="token punctuation">.</span><span class="token function">createLayout</span><span class="token punctuation">(</span><span class="token string">\'自定义组件\'</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">\'password\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            rules<span class="token operator">:</span> rules<span class="token punctuation">.</span>customRenderInput1<span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token keyword">return</span> formUtils<span class="token punctuation">.</span><span class="token function">createFormComponent</span><span class="token punctuation">(</span>jsxInput<span class="token punctuation">,</span> form<span class="token punctuation">,</span> formRef<span class="token punctuation">.</span>uid<span class="token punctuation">,</span> formRef<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    formUtils<span class="token punctuation">.</span><span class="token function">renderCustomConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      iAntdProps<span class="token operator">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'customRender\'</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      iFormProps<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">form<span class="token punctuation">,</span> antdProps<span class="token punctuation">,</span> rule<span class="token punctuation">,</span> formRef</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          <span class="token keyword">const</span> JsxSelect <span class="token operator">=</span> formUtils<span class="token punctuation">.</span><span class="token function">renderSelectConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            iAntdProps<span class="token operator">:</span> <span class="token punctuation">{</span>\n              <span class="token operator">...</span>formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'priceType\'</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">\'请选择\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n              className<span class="token operator">:</span> antdProps<span class="token punctuation">.</span>className<span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            iFormProps<span class="token operator">:</span> <span class="token punctuation">{</span>\n              <span class="token operator">...</span>formUtils<span class="token punctuation">.</span><span class="token function">createLayout</span><span class="token punctuation">(</span><span class="token string">\'价格\'</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n              options<span class="token operator">:</span> <span class="token punctuation">[</span>\n                <span class="token punctuation">{</span>\n                  key<span class="token operator">:</span> <span class="token string">\'rmb\'</span><span class="token punctuation">,</span>\n                  value<span class="token operator">:</span> <span class="token string">\'RMB\'</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token punctuation">{</span>\n                  key<span class="token operator">:</span> <span class="token string">\'dollar\'</span><span class="token punctuation">,</span>\n                  value<span class="token operator">:</span> <span class="token string">\'Dollar\'</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              <span class="token punctuation">]</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            rules<span class="token operator">:</span> rules<span class="token punctuation">.</span>priceType<span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token keyword">const</span> JsxInput <span class="token operator">=</span> formUtils<span class="token punctuation">.</span><span class="token function">renderInputConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            iAntdProps<span class="token operator">:</span> formUtils<span class="token punctuation">.</span><span class="token function">createAntdProps</span><span class="token punctuation">(</span><span class="token string">\'price\'</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">\'价格\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            iFormProps<span class="token operator">:</span> <span class="token punctuation">{</span>\n              maxLength<span class="token operator">:</span> <span class="token string">\'70\'</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            rules<span class="token operator">:</span> rules<span class="token punctuation">.</span>price<span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token keyword">return</span> <span class="token punctuation">(</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Row</span></span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selectAndInput<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Col</span></span> <span class="token attr-name">span</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">6</span> <span class="token operator">+</span> <span class="token number">6</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n                <span class="token punctuation">{</span>formUtils<span class="token punctuation">.</span><span class="token function">createFormComponent</span><span class="token punctuation">(</span>JsxSelect<span class="token punctuation">,</span> form<span class="token punctuation">,</span> formRef<span class="token punctuation">.</span>uid<span class="token punctuation">,</span> formRef<span class="token punctuation">)</span><span class="token punctuation">}</span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Col</span></span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Col</span></span> <span class="token attr-name">span</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">7</span><span class="token punctuation">}</span></span> <span class="token attr-name">offset</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n                <span class="token punctuation">{</span>formUtils<span class="token punctuation">.</span><span class="token function">createFormComponent</span><span class="token punctuation">(</span>JsxInput<span class="token punctuation">,</span> form<span class="token punctuation">,</span> formRef<span class="token punctuation">.</span>uid<span class="token punctuation">,</span> formRef<span class="token punctuation">)</span><span class="token punctuation">}</span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Col</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Row</span></span><span class="token punctuation">></span></span>\n          <span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">[</span>\n      formUtils<span class="token punctuation">.</span><span class="token function">getFormConfig</span><span class="token punctuation">(</span><span class="token string">\'text\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      formUtils<span class="token punctuation">.</span><span class="token function">getFormConfig</span><span class="token punctuation">(</span><span class="token string">\'textarea\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      formUtils<span class="token punctuation">.</span><span class="token function">getFormConfig</span><span class="token punctuation">(</span><span class="token string">\'password\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      formUtils<span class="token punctuation">.</span><span class="token function">getFormConfig</span><span class="token punctuation">(</span><span class="token string">\'numberText\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      formUtils<span class="token punctuation">.</span><span class="token function">getFormConfig</span><span class="token punctuation">(</span><span class="token string">\'numbers\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      formUtils<span class="token punctuation">.</span><span class="token function">getFormConfig</span><span class="token punctuation">(</span><span class="token string">\'selectedItem\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      formUtils<span class="token punctuation">.</span><span class="token function">getFormConfig</span><span class="token punctuation">(</span><span class="token string">\'selectedItemRemote\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      formUtils<span class="token punctuation">.</span><span class="token function">getFormConfig</span><span class="token punctuation">(</span><span class="token string">\'selectedItemMultiple\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      formUtils<span class="token punctuation">.</span><span class="token function">getFormConfig</span><span class="token punctuation">(</span><span class="token string">\'customRenderInput\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      formUtils<span class="token punctuation">.</span><span class="token function">getFormConfig</span><span class="token punctuation">(</span><span class="token string">\'customRender\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      formUtils<span class="token punctuation">.</span><span class="token function">getFormConfig</span><span class="token punctuation">(</span><span class="token string">\'upload\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Row</span></span><span class="token punctuation">></span></span>\n        <span class="token operator">&lt;</span>LegionsProForm\n          <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>formRef <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>formRef<span class="token punctuation">.</span>viewModel<span class="token punctuation">.</span>InputDataModel<span class="token punctuation">)</span><span class="token punctuation">}</span>\n          InputDataModel<span class="token operator">=</span><span class="token punctuation">{</span>FormFields<span class="token punctuation">}</span>\n          onReady<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">form<span class="token punctuation">,</span> ref</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>formRef <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>ref<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n              that<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          mapPropsToFields<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">FormFields</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          onFieldsChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> formFields</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>formRef<span class="token punctuation">.</span>store<span class="token punctuation">.</span><span class="token function">updateFormInputData</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>formRef<span class="token punctuation">.</span>uid<span class="token punctuation">,</span> formFields<span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          group<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>\n            <span class="token punctuation">{</span>\n              name<span class="token operator">:</span> <span class="token string">\'文本输入\'</span><span class="token punctuation">,</span>\n              id<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n              active<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n              isFolding<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">{</span>\n              name<span class="token operator">:</span> <span class="token string">\'下拉框\'</span><span class="token punctuation">,</span>\n              id<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n              active<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n              isFolding<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">{</span>\n              name<span class="token operator">:</span> <span class="token string">\'自定义\'</span><span class="token punctuation">,</span>\n              id<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n              active<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n              isFolding<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">]</span><span class="token punctuation">}</span>\n          controls<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n          uniqueUid<span class="token operator">=</span><span class="token string">"demo/proForm/one"</span>\n          colCount<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span>\n        <span class="token operator">></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">LegionsProForm</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormItem</span></span>\n          <span class="token attr-name">wrapperCol</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            span<span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span>\n            offset<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">></span></span>\n          <span class="token operator">&lt;</span>Button\n            type<span class="token operator">=</span><span class="token string">"primary"</span>\n            htmlType<span class="token operator">=</span><span class="token string">"submit"</span>\n            onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n              <span class="token keyword">this</span><span class="token punctuation">.</span>formRef <span class="token operator">&amp;&amp;</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>formRef<span class="token punctuation">.</span>viewModel<span class="token punctuation">.</span>form<span class="token punctuation">.</span><span class="token function">validateFields</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> values</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token comment">/*  console.log(values,this.props.store.obFormFields) */</span>\n                  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n                  <span class="token punctuation">}</span>\n\n                  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">,</span> err<span class="token punctuation">,</span> <span class="token string">\'values\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          <span class="token operator">></span>\n            提交\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n          <span class="token operator">&lt;</span>Button\n            style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n              marginLeft<span class="token operator">:</span> <span class="token string">\'10px\'</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">}</span>\n            type<span class="token operator">=</span><span class="token string">"primary"</span>\n            htmlType<span class="token operator">=</span><span class="token string">"submit"</span>\n            onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n              <span class="token keyword">const</span> item <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>formRef<span class="token punctuation">.</span>viewModel<span class="token punctuation">.</span><span class="token function">getFormItemField</span><span class="token punctuation">(</span><span class="token string">\'text\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n              <span class="token keyword">if</span> <span class="token punctuation">(</span>item <span class="token operator">&amp;&amp;</span> item<span class="token punctuation">.</span>value <span class="token keyword">instanceof</span> <span class="token class-name">LegionsProForm<span class="token punctuation">.</span>LabelWithInputModel</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">const</span> disabled <span class="token operator">=</span> item<span class="token punctuation">.</span>value<span class="token punctuation">.</span>iFormProps<span class="token punctuation">.</span>disabled<span class="token punctuation">;</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                  disabledText<span class="token operator">:</span> <span class="token operator">!</span>disabled<span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>formRef<span class="token punctuation">.</span>methods<span class="token punctuation">.</span><span class="token function">setFormStates</span><span class="token punctuation">(</span><span class="token string">\'text\'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                  <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token keyword">instanceof</span> <span class="token class-name">LegionsProForm<span class="token punctuation">.</span>LabelWithInputModel</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    value<span class="token punctuation">.</span>iFormProps<span class="token punctuation">.</span>disabled <span class="token operator">=</span> <span class="token operator">!</span>disabled<span class="token punctuation">;</span>\n                  <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n              <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          <span class="token operator">></span>\n            <span class="token punctuation">{</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>disabledText <span class="token operator">?</span> <span class="token string">\'禁用文本框输入\'</span> <span class="token operator">:</span> <span class="token string">\'启用文本框输入\'</span><span class="token punctuation">}</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n          <span class="token operator">&lt;</span>Button\n            style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n              marginLeft<span class="token operator">:</span> <span class="token string">\'10px\'</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">}</span>\n            type<span class="token operator">=</span><span class="token string">"primary"</span>\n            htmlType<span class="token operator">=</span><span class="token string">"submit"</span>\n            onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n              <span class="token keyword">const</span> item <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>formRef<span class="token punctuation">.</span>viewModel<span class="token punctuation">.</span><span class="token function">getFormItemField</span><span class="token punctuation">(</span><span class="token string">\'text\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n              <span class="token keyword">if</span> <span class="token punctuation">(</span>item <span class="token operator">&amp;&amp;</span> item<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">let</span> visibleText <span class="token operator">=</span> item<span class="token punctuation">.</span>value<span class="token punctuation">.</span>iFormProps<span class="token punctuation">.</span>visible<span class="token punctuation">;</span>\n\n                <span class="token keyword">if</span> <span class="token punctuation">(</span>visibleText <span class="token operator">===</span> <span class="token keyword">void</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                  visibleText <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n\n                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                  visibleText<span class="token operator">:</span> <span class="token operator">!</span>visibleText<span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>formRef<span class="token punctuation">.</span>methods<span class="token punctuation">.</span><span class="token function">setFormStates</span><span class="token punctuation">(</span><span class="token string">\'text\'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                  value<span class="token punctuation">.</span>iFormProps<span class="token punctuation">.</span>visible <span class="token operator">=</span> <span class="token operator">!</span>visibleText<span class="token punctuation">;</span>\n                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n              <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          <span class="token operator">></span>\n            <span class="token punctuation">{</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>visibleText <span class="token operator">?</span> <span class="token string">\'显示文本框\'</span> <span class="token operator">:</span> <span class="token string">\'隐藏文本框\'</span><span class="token punctuation">}</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n          <span class="token operator">&lt;</span>Button\n            style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n              marginLeft<span class="token operator">:</span> <span class="token string">\'10px\'</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">}</span>\n            type<span class="token operator">=</span><span class="token string">"primary"</span>\n            htmlType<span class="token operator">=</span><span class="token string">"submit"</span>\n            onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n              <span class="token keyword">const</span> item <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>formRef<span class="token punctuation">.</span>viewModel<span class="token punctuation">.</span><span class="token function">getFormItemField</span><span class="token punctuation">(</span><span class="token string">\'price\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n              <span class="token keyword">if</span> <span class="token punctuation">(</span>item <span class="token operator">&amp;&amp;</span> item<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">let</span> visible <span class="token operator">=</span> item<span class="token punctuation">.</span>value<span class="token punctuation">.</span>iFormProps<span class="token punctuation">.</span>visible<span class="token punctuation">;</span>\n\n                <span class="token keyword">if</span> <span class="token punctuation">(</span>visible <span class="token operator">===</span> <span class="token keyword">void</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                  visible <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n\n                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                  visible<span class="token operator">:</span> <span class="token operator">!</span>visible<span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>formRef<span class="token punctuation">.</span>methods<span class="token punctuation">.</span><span class="token function">setFormStates</span><span class="token punctuation">(</span><span class="token string">\'price\'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                  value<span class="token punctuation">.</span>iFormProps<span class="token punctuation">.</span>visible <span class="token operator">=</span> <span class="token operator">!</span>visible<span class="token punctuation">;</span>\n                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n              <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          <span class="token operator">></span>\n            <span class="token punctuation">{</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>visible <span class="token operator">?</span> <span class="token string">\'显示价格文本框\'</span> <span class="token operator">:</span> <span class="token string">\'隐藏价格文本框\'</span><span class="token punctuation">}</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">FormItem</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Row</span></span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">root</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ProFormDemo</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ProFormDemo</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>React<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>app<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>\n'},preview:function(){a(0),a(10);function n(s){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(s)}var s=u(a(1276)),t=a(13),p=u(a(0)),o=a(1278),e=a(1286),c=a(1515);function u(n){return n&&n.__esModule?n:{default:n}}function l(){return(l=Object.assign||function(n){for(var s=1;s<arguments.length;s++){var a=arguments[s];for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(n[t]=a[t])}return n}).apply(this,arguments)}function k(n,s){var a=Object.keys(n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(n);s&&(t=t.filter((function(s){return Object.getOwnPropertyDescriptor(n,s).enumerable}))),a.push.apply(a,t)}return a}function i(n){for(var s=1;s<arguments.length;s++){var a=null!=arguments[s]?arguments[s]:{};s%2?k(Object(a),!0).forEach((function(s){r(n,s,a[s])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(a)):k(Object(a)).forEach((function(s){Object.defineProperty(n,s,Object.getOwnPropertyDescriptor(a,s))}))}return n}function r(n,s,a){return s in n?Object.defineProperty(n,s,{value:a,enumerable:!0,configurable:!0,writable:!0}):n[s]=a,n}function m(n,s){for(var a=0;a<s.length;a++){var t=s[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}function f(n,s){return(f=Object.setPrototypeOf||function(n,s){return n.__proto__=s,n})(n,s)}function d(n){var s=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(n){return!1}}();return function(){var a,t=y(n);if(s){var p=y(this).constructor;a=Reflect.construct(t,arguments,p)}else a=t.apply(this,arguments);return g(this,a)}}function g(s,a){return!a||"object"!==n(a)&&"function"!=typeof a?function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(s):a}function y(n){return(y=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}var b=t.Form.Item;e.legionsThirdpartyPlugin.use([{name:"dexie",url:"https://qa-zy.hoolinks.com/static/plugin/dexie.min.js"}]);var F=function(n){!function(n,s){if("function"!=typeof s&&null!==s)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(s&&s.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),s&&f(n,s)}(k,n);var s,a,e,u=d(k);function k(n){var s;return function(n,s){if(!(n instanceof s))throw new TypeError("Cannot call a class as a function")}(this,k),(s=u.call(this,n)).state={visibleText:!1,disabledText:!0,visible:!0},s}return s=k,(a=[{key:"createConfig",value:function(){var n=c.FormFields.initFormRules(c.FormFields,{}),s=new o.LegionsProForm.ProFormUtils;return console.log(n,"rules"),s.renderInputConfig({iAntdProps:s.createAntdProps("text",1,null),iFormProps:i(i({},s.createLayout("文本框",5,15)),{},{maxLength:"50",type:"text",disabled:!0}),rules:n.text}),s.renderInputConfig({iAntdProps:s.createAntdProps("textarea",1,null),iFormProps:i(i({},s.createLayout("多行文本",5,15)),{},{maxLength:"50",type:"textarea"}),rules:n.textarea}),s.renderInputConfig({iAntdProps:s.createAntdProps("password",null),iFormProps:i(i({},s.createLayout("密码",5,15)),{},{maxLength:"50",type:"password"}),rules:n.password}),s.renderInputConfig({iAntdProps:s.createAntdProps("numberText",1,null),iFormProps:i(i({},s.createLayout("数字文本",5,15)),{},{maxLength:"50",type:"number"}),rules:n.numberText}),s.renderInputNumberConfig({iAntdProps:s.createAntdProps("numbers",1,null),iFormProps:i({},s.createLayout("数字",5,15)),rules:n.numbers}),s.renderSelectConfig({iAntdProps:s.createAntdProps("selectedItem",2,null,"请选择"),iFormProps:i(i({},s.createLayout("普通下拉",5,15)),{},{options:[{value:"订单",label:"订单1",key:"1",keyValue:"222",disabled:!0},{value:"工单",label:"工单1",key:"2"}],size:"default",labelInValue:!0}),rules:n.selectedItem}),s.renderSelectConfig({iAntdProps:s.createAntdProps("selectedItemRemote",2,null,"请选择"),iFormProps:i(i({},s.createLayout("远程下拉",5,15)),{},{allowClear:!0,remote:!0,pageSize:30,autoQuery:{params:function(n,s,a){return{keyword:a,current:n,size:30,templateCode:"Country",pageIndex:1,pageSize:s,defaultKeyWords:""}},ApiUrl:"https://gateway.hoolinks.com/api/gateway",method:"post",token:"SESSION=0cef87fd-a1c3-4d32-8273-45402da62d56;",options:{"api-target":"https://qa-scm.hoolinks.com//jg/basic/cusinfo/search.json"},mappingEntity:function(n,s){return n.total=s.total,n.current=s.current,n.pageSize=s.size,(s.data||[]).map((function(n){return{key:n.code,value:n.name}}))},transform:function(n){return{data:(n.value?n.value.result:[]).map((function(n){return{key:n.key,value:"("+n.key+")"+n.value}})),total:n.value?n.value.total:0}}},paging:!0,size:"default",labelInValue:!0}),rules:n.selectedItem}),s.renderSelectConfig({iAntdProps:s.createAntdProps("selectedItemMultiple",2,"下拉多选"),iFormProps:i(i({},s.createLayout("下拉多选",5,15)),{},{allowClear:!0,options:[{value:"react",key:"2"},{value:"angular",key:"1"},{value:"vue",key:"3"}],maxTagCount:2,labelInValue:!0,mode:"multiple"}),rules:n.selectedItemMultiple}),s.renderUploadConfig({iAntdProps:s.createAntdProps("upload",2,"文件上传"),iFormProps:i(i({},s.createLayout("文件上传",5,15)),{},{maxFileCount:1,isDragger:!0,prompt:p.default.createElement("p",null,"扫去窗上的尘埃，才可以看到窗外的美景")}),rules:n.upload}),s.renderCustomConfig({iAntdProps:s.createAntdProps("customRenderInput",3,""),iFormProps:{render:function(a,t,p,o){var e=s.renderInputConfig({iAntdProps:s.createAntdProps("customRenderInput1",null,"自定义文本组件"),iFormProps:i(i({},s.createLayout("自定义组件",5,15)),{},{type:"password"}),rules:n.customRenderInput1});return s.createFormComponent(e,a,o.uid,o)}}}),s.renderCustomConfig({iAntdProps:s.createAntdProps("customRender",3,""),iFormProps:{render:function(a,o,e,c){var u=s.renderSelectConfig({iAntdProps:i(i({},s.createAntdProps("priceType",null,"请选择")),{},{className:o.className}),iFormProps:i(i({},s.createLayout("价格",10,12)),{},{options:[{key:"rmb",value:"RMB"},{key:"dollar",value:"Dollar"}]}),rules:n.priceType}),l=s.renderInputConfig({iAntdProps:s.createAntdProps("price",null,"价格"),iFormProps:{maxLength:"70"},rules:n.price});return p.default.createElement(t.Row,{className:"selectAndInput"},p.default.createElement(t.Col,{span:12},s.createFormComponent(u,a,c.uid,c)),p.default.createElement(t.Col,{span:7,offset:1},s.createFormComponent(l,a,c.uid,c)))}}}),[s.getFormConfig("text"),s.getFormConfig("textarea"),s.getFormConfig("password"),s.getFormConfig("numberText"),s.getFormConfig("numbers"),s.getFormConfig("selectedItem"),s.getFormConfig("selectedItemRemote"),s.getFormConfig("selectedItemMultiple"),s.getFormConfig("customRenderInput"),s.getFormConfig("customRender"),s.getFormConfig("upload")]}},{key:"render",value:function(){var n=this;return p.default.createElement(t.Row,null,p.default.createElement(o.LegionsProForm,l({},this.formRef&&this.formRef.viewModel.InputDataModel,{InputDataModel:c.FormFields,onReady:function(s,a){n.formRef=Object.assign(a,{that:n})},mapPropsToFields:function(n){return new c.FormFields(n)},onFieldsChange:function(s,a){n.formRef.store.updateFormInputData(n.formRef.uid,a)},group:[{name:"文本输入",id:1,active:!0,isFolding:!0},{name:"下拉框",id:2,active:!0,isFolding:!0},{name:"自定义",id:3,active:!0,isFolding:!0}],controls:this.createConfig(),uniqueUid:"demo/proForm/one",colCount:2})),p.default.createElement(b,{wrapperCol:{span:12,offset:1}},p.default.createElement(t.Button,{type:"primary",htmlType:"submit",onClick:function(){n.formRef&&n.formRef.viewModel.form.validateFields((function(n,s){console.log(s,n,"values")}))}},"提交"),p.default.createElement(t.Button,{style:{marginLeft:"10px"},type:"primary",htmlType:"submit",onClick:function(){var s=n.formRef.viewModel.getFormItemField("text");if(s&&s.value instanceof o.LegionsProForm.LabelWithInputModel){var a=s.value.iFormProps.disabled;n.setState({disabledText:!a}),n.formRef.methods.setFormStates("text",(function(n){n instanceof o.LegionsProForm.LabelWithInputModel&&(n.iFormProps.disabled=!a)}))}}},this.state.disabledText?"启用文本框输入":"禁用文本框输入"),p.default.createElement(t.Button,{style:{marginLeft:"10px"},type:"primary",htmlType:"submit",onClick:function(){var s=n.formRef.viewModel.getFormItemField("text");if(s&&s.value){var a=s.value.iFormProps.visible;void 0===a&&(a=!0),n.setState({visibleText:!a}),n.formRef.methods.setFormStates("text",(function(n){n.iFormProps.visible=!a}))}}},this.state.visibleText?"隐藏文本框":"显示文本框"),p.default.createElement(t.Button,{style:{marginLeft:"10px"},type:"primary",htmlType:"submit",onClick:function(){var s=n.formRef.viewModel.getFormItemField("price");if(s&&s.value){var a=s.value.iFormProps.visible;void 0===a&&(a=!0),n.setState({visible:!a}),n.formRef.methods.setFormStates("price",(function(n){n.iFormProps.visible=!a}))}}},this.state.visible?"隐藏价格文本框":"显示价格文本框")))}}])&&m(s.prototype,a),e&&m(s,e),k}(p.default.Component),v=(0,s.default)();return p.default.createElement(v.start((function(n){return p.default.createElement(F,null)})))}}},1515:function(n,s,a){"use strict";a.r(s),a.d(s,"FormFields",(function(){return C}));var t,p,o,e,c,u,l,k,i,r,m,f,d=a(1300),g=a(1278),y=a(1310),b=a(1293);function F(n){return(F="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function v(n,s){return(v=Object.setPrototypeOf||function(n,s){return n.__proto__=s,n})(n,s)}function w(n){var s=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(n){return!1}}();return function(){var a,t=I(n);if(s){var p=I(this).constructor;a=Reflect.construct(t,arguments,p)}else a=t.apply(this,arguments);return h(this,a)}}function h(n,s){return!s||"object"!==F(s)&&"function"!=typeof s?P(n):s}function P(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}function I(n){return(I=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}var C=function(n){!function(n,s){if("function"!=typeof s&&null!==s)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(s&&s.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),s&&v(n,s)}(a,n);var s=w(a);function a(n){var t;return function(n,s){if(!(n instanceof s))throw new TypeError("Cannot call a class as a function")}(this,a),(t=s.call(this)).text={value:""},t.textarea={value:""},t.password={value:""},t.numberText={value:""},t.numbers={value:void 0},t.selectedItem={value:void 0},t.selectedItemRemote={value:void 0},t.selectedItemMultiple={value:void 0},t.upload={value:null,submitBeforeTransform:function(n){return n?n.file.uid:""}},t.customRenderInput1={value:""},t.customRender={value:{currency:"rmb",number:0},submitBeforeTransform:function(n,s){var a=n;return a.currency=s.priceType.value,a.number=parseInt(s.price.value,0),a}},t.priceType={value:"",ignore:!0},t.price={value:"",ignore:!0},a.initMapPropsToFields.call(P(t),n),t}return a}(g.LegionsProForm.ProFormFields);Object(d.a)([Object(y.FormRuleProperty)({required:!0,name:"text",error:"文本框",desc:"文本框",type:"string"}),Object(d.b)("design:type","function"==typeof(t=void 0!==b.IBaseFormFields&&b.IBaseFormFields)?t:Object)],C.prototype,"text",void 0),Object(d.a)([Object(y.FormRuleProperty)({required:!0,name:"textarea",error:"多行文本",desc:"多行文本",type:"string"}),Object(d.b)("design:type","function"==typeof(p=void 0!==b.IBaseFormFields&&b.IBaseFormFields)?p:Object)],C.prototype,"textarea",void 0),Object(d.a)([Object(y.FormRuleProperty)({required:!0,name:"password",error:"密码文本",desc:"密码文本",type:"string"}),Object(d.b)("design:type","function"==typeof(o=void 0!==b.IBaseFormFields&&b.IBaseFormFields)?o:Object)],C.prototype,"password",void 0),Object(d.a)([Object(y.FormRuleProperty)({required:!0,name:"numberText",error:"数字文本",desc:"数字文本",type:"string"}),Object(d.b)("design:type","function"==typeof(e=void 0!==b.IBaseFormFields&&b.IBaseFormFields)?e:Object)],C.prototype,"numberText",void 0),Object(d.a)([Object(y.FormRuleProperty)({required:!0,name:"numbers",error:"数字",desc:"数字",type:"number"}),Object(d.b)("design:type","function"==typeof(c=void 0!==b.IBaseFormFields&&b.IBaseFormFields)?c:Object)],C.prototype,"numbers",void 0),Object(d.a)([Object(y.FormRuleProperty)({required:!0,name:"selectedItem",error:"普通下拉",desc:"普通下拉",type:"object"}),Object(d.b)("design:type","function"==typeof(u=void 0!==b.IBaseFormFields&&b.IBaseFormFields)?u:Object)],C.prototype,"selectedItem",void 0),Object(d.a)([Object(y.FormRuleProperty)({required:!0,name:"selectedItemRemote",error:"远程下拉",desc:"远程下拉",type:"object"}),Object(d.b)("design:type","function"==typeof(l=void 0!==b.IBaseFormFields&&b.IBaseFormFields)?l:Object)],C.prototype,"selectedItemRemote",void 0),Object(d.a)([Object(y.FormRuleProperty)({required:!0,name:"selectedItemMultiple",error:"下拉多选",desc:"下拉多选",type:"array"}),Object(d.b)("design:type","function"==typeof(k=void 0!==b.IBaseFormFields&&b.IBaseFormFields)?k:Object)],C.prototype,"selectedItemMultiple",void 0),Object(d.a)([Object(y.FormRuleProperty)({required:!0,name:"upload",error:"上传文件错误",desc:"上传文件",type:"object"}),Object(d.b)("design:type","function"==typeof(i=void 0!==b.IBaseFormFields&&b.IBaseFormFields)?i:Object)],C.prototype,"upload",void 0),Object(d.a)([Object(y.FormRuleProperty)({required:!0,name:"customRenderInput1",error:"自定义组件信息错误",desc:"自定义组件",type:"string",regex:/^[1-9]\d*$/}),Object(d.b)("design:type","function"==typeof(r=void 0!==b.IBaseFormFields&&b.IBaseFormFields)?r:Object)],C.prototype,"customRenderInput1",void 0),Object(d.a)([Object(y.FormRuleProperty)({required:!0,name:"priceType",error:"价格类型错误",desc:"价格类型",type:"string"}),Object(d.b)("design:type","function"==typeof(m=void 0!==b.IBaseFormFields&&b.IBaseFormFields)?m:Object)],C.prototype,"priceType",void 0),Object(d.a)([Object(y.FormRuleProperty)({required:!0,name:"price",error:"价格只能是数字",desc:"价格",type:"string",validator:function(n,s,a){/^[1-9]\d*$/.test(n.toString())?a():a(new Error("价格请输入数字"))}}),Object(d.b)("design:type","function"==typeof(f=void 0!==b.IBaseFormFields&&b.IBaseFormFields)?f:Object)],C.prototype,"price",void 0)}}]);